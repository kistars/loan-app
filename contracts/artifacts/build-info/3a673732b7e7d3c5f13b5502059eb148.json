{
	"id": "3a673732b7e7d3c5f13b5502059eb148",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/Loan.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./MockToken.sol\";\n\ncontract LendingContract {\n    MockToken public collateralToken;  // 抵押物代币\n    MockToken public lendingToken;     // 借出代币\n    mapping(address => uint256) public collateralBalances;\n    mapping(address => uint256) public debt;\n\n    event CollateralDeposited(address indexed user, uint256 amount);\n    event Borrowed(address indexed user, uint256 amount);\n    event Repaid(address indexed user, uint256 amount);\n    event FaucetUsed(address indexed user, uint256 amount);\n\n    constructor(MockToken _collateralToken, MockToken _lendingToken, uint256 _amount) {\n        collateralToken = _collateralToken;\n        lendingToken = _lendingToken;\n        lendingToken.mint(address(this), _amount);\n    }\n\n    // 存入抵押物函数\n    function depositCollateral(uint256 _amount) external {\n        require(_amount > 0, \"Amount must be greater than zero\");\n        collateralToken.transferFrom(msg.sender, address(this), _amount);\n        collateralBalances[msg.sender] += _amount;\n\n        emit CollateralDeposited(msg.sender, _amount);\n    }\n\n    // 借款函数\n    function borrow(uint256 _amount) external {\n        require(_amount > 0, \"Amount must be greater than zero\");\n        require(collateralBalances[msg.sender] >= _amount * 150 / 100, \"Insufficient collateral\"); // 150% 过度抵押\n\n        debt[msg.sender] += _amount;\n\n        lendingToken.transfer(msg.sender, _amount);\n\n        emit Borrowed(msg.sender, _amount);\n    }\n\n    // 还款函数\n    function repay(uint256 _amount) external {\n        require(debt[msg.sender] > 0, \"No outstanding debt\");\n        lendingToken.transferFrom(msg.sender, address(this), _amount);\n\n        debt[msg.sender] -= _amount;\n\n        emit Repaid(msg.sender, _amount);\n    }\n\n    // Faucet 功能用于领取抵押物代币（collateralToken）\n    function faucet() external {\n        collateralToken.mint(msg.sender, 100);\n        emit FaucetUsed(msg.sender, 100);\n    }\n}\n"
			},
			"contracts/MockToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MockToken is ERC20 {\n    constructor(string memory name, string memory symbol, uint256 initialSupply) ERC20(name, symbol) {\n        _mint(msg.sender, initialSupply);\n    }\n\n    // 可以根据需要额外铸造代币\n    function mint(address to, uint256 amount) external {\n        _mint(to, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Loan.sol": {
				"LendingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract MockToken",
									"name": "_collateralToken",
									"type": "address"
								},
								{
									"internalType": "contract MockToken",
									"name": "_lendingToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Borrowed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CollateralDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "FaucetUsed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Repaid",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "collateralBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collateralToken",
							"outputs": [
								{
									"internalType": "contract MockToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "debt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "depositCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "faucet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lendingToken",
							"outputs": [
								{
									"internalType": "contract MockToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "repay",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Loan.sol\":84:2026  contract LendingContract {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Loan.sol\":577:799  constructor(MockToken _collateralToken, MockToken _lendingToken, uint256 _amount) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Loan.sol\":669:684  collateralToken */\n  0x00\n    /* \"contracts/Loan.sol\":669:703  collateralToken = _collateralToken */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup6\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  or\n  swap1\n  swap3\n  sstore\n  0x01\n    /* \"contracts/Loan.sol\":713:741  lendingToken = _lendingToken */\n  dup1\n  sload\n  swap3\n  dup6\n  and\n  swap3\n  swap1\n  swap2\n  and\n  dup3\n  or\n  swap1\n  sstore\n    /* \"contracts/Loan.sol\":751:792  lendingToken.mint(address(this), _amount) */\n  mload(0x40)\n  shl(0xe0, 0x40c10f19)\n  dup2\n  mstore\n    /* \"contracts/Loan.sol\":777:781  this */\n  address\n    /* \"contracts/Loan.sol\":751:792  lendingToken.mint(address(this), _amount) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":798:849   */\n  mstore\n    /* \"#utility.yul\":865:883   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":858:892   */\n  dup4\n  swap1\n  mstore\n    /* \"contracts/Loan.sol\":751:768  lendingToken.mint */\n  0x40c10f19\n  swap1\n    /* \"#utility.yul\":771:789   */\n  0x44\n  add\n    /* \"contracts/Loan.sol\":751:792  lendingToken.mint(address(this), _amount) */\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_8\n  jumpi\n  0x00\n  dup1\n  revert\ntag_8:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_10\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_10:\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/Loan.sol\":577:799  constructor(MockToken _collateralToken, MockToken _lendingToken, uint256 _amount) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/Loan.sol\":84:2026  contract LendingContract {... */\n  jump(tag_13)\n    /* \"#utility.yul\":14:202   */\ntag_12:\n    /* \"#utility.yul\":104:117   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":146:177   */\n  dup2\n  and\n    /* \"#utility.yul\":136:178   */\n  dup2\n  eq\n    /* \"#utility.yul\":126:196   */\n  tag_15\n  jumpi\n    /* \"#utility.yul\":192:193   */\n  0x00\n    /* \"#utility.yul\":189:190   */\n  dup1\n    /* \"#utility.yul\":182:194   */\n  revert\n    /* \"#utility.yul\":126:196   */\ntag_15:\n    /* \"#utility.yul\":14:202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":207:619   */\ntag_3:\n    /* \"#utility.yul\":331:337   */\n  0x00\n    /* \"#utility.yul\":339:345   */\n  dup1\n    /* \"#utility.yul\":347:353   */\n  0x00\n    /* \"#utility.yul\":400:402   */\n  0x60\n    /* \"#utility.yul\":388:397   */\n  dup5\n    /* \"#utility.yul\":379:386   */\n  dup7\n    /* \"#utility.yul\":375:398   */\n  sub\n    /* \"#utility.yul\":371:403   */\n  slt\n    /* \"#utility.yul\":368:420   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":416:417   */\n  0x00\n    /* \"#utility.yul\":413:414   */\n  dup1\n    /* \"#utility.yul\":406:418   */\n  revert\n    /* \"#utility.yul\":368:420   */\ntag_17:\n    /* \"#utility.yul\":439:490   */\n  tag_18\n    /* \"#utility.yul\":480:489   */\n  dup5\n    /* \"#utility.yul\":439:490   */\n  tag_12\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":429:490   */\n  swap3\n  pop\n    /* \"#utility.yul\":509:569   */\n  tag_19\n    /* \"#utility.yul\":565:567   */\n  0x20\n    /* \"#utility.yul\":554:563   */\n  dup6\n    /* \"#utility.yul\":550:568   */\n  add\n    /* \"#utility.yul\":509:569   */\n  tag_12\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":499:569   */\n  swap2\n  pop\n    /* \"#utility.yul\":609:611   */\n  0x40\n    /* \"#utility.yul\":598:607   */\n  dup5\n    /* \"#utility.yul\":594:612   */\n  add\n    /* \"#utility.yul\":588:613   */\n  mload\n    /* \"#utility.yul\":578:613   */\n  swap1\n  pop\n    /* \"#utility.yul\":207:619   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":624:898   */\ntag_13:\n    /* \"contracts/Loan.sol\":84:2026  contract LendingContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Loan.sol\":84:2026  contract LendingContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb2016bd4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xb2016bd4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbad4a01f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc5ebeaec\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xde5f72fd\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x29bc969d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x371fd8e6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9b6c56ec\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xaaaca558\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Loan.sol\":228:281  mapping(address => uint256) public collateralBalances */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/Loan.sol\":228:281  mapping(address => uint256) public collateralBalances */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Loan.sol\":1564:1826  function repay(uint256 _amount) external {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/Loan.sol\":287:326  mapping(address => uint256) public debt */\n    tag_5:\n      tag_12\n      tag_23\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_23:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Loan.sol\":173:202  MockToken public lendingToken */\n    tag_6:\n      sload(0x01)\n      tag_26\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_26:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":854:886   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":836:887   */\n      dup2\n      mstore\n        /* \"#utility.yul\":824:826   */\n      0x20\n        /* \"#utility.yul\":809:827   */\n      add\n        /* \"contracts/Loan.sol\":173:202  MockToken public lendingToken */\n      tag_16\n        /* \"#utility.yul\":672:893   */\n      jump\n        /* \"contracts/Loan.sol\":115:147  MockToken public collateralToken */\n    tag_7:\n      sload(0x00)\n      tag_26\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Loan.sol\":834:1141  function depositCollateral(uint256 _amount) external {... */\n    tag_8:\n      tag_18\n      tag_34\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n        /* \"contracts/Loan.sol\":1167:1538  function borrow(uint256 _amount) external {... */\n    tag_9:\n      tag_18\n      tag_37\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n        /* \"contracts/Loan.sol\":1901:2024  function faucet() external {... */\n    tag_10:\n      tag_18\n      tag_40\n      jump\t// in\n        /* \"contracts/Loan.sol\":1564:1826  function repay(uint256 _amount) external {... */\n    tag_21:\n        /* \"contracts/Loan.sol\":1628:1638  msg.sender */\n      caller\n        /* \"contracts/Loan.sol\":1642:1643  0 */\n      0x00\n        /* \"contracts/Loan.sol\":1623:1639  debt[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Loan.sol\":1623:1627  debt */\n      0x03\n        /* \"contracts/Loan.sol\":1623:1639  debt[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Loan.sol\":1615:1667  require(debt[msg.sender] > 0, \"No outstanding debt\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1100:1102   */\n      0x20\n        /* \"contracts/Loan.sol\":1615:1667  require(debt[msg.sender] > 0, \"No outstanding debt\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1082:1103   */\n      mstore\n        /* \"#utility.yul\":1139:1141   */\n      0x13\n        /* \"#utility.yul\":1119:1137   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1112:1142   */\n      mstore\n      shl(0x6a, 0x139bc81bdd5d1cdd185b991a5b99c81919589d)\n        /* \"#utility.yul\":1158:1176   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1151:1200   */\n      mstore\n        /* \"#utility.yul\":1217:1235   */\n      0x64\n      add\n        /* \"contracts/Loan.sol\":1615:1667  require(debt[msg.sender] > 0, \"No outstanding debt\") */\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"contracts/Loan.sol\":1677:1689  lendingToken */\n      sload(0x01)\n        /* \"contracts/Loan.sol\":1677:1738  lendingToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/Loan.sol\":1703:1713  msg.sender */\n      caller\n        /* \"contracts/Loan.sol\":1677:1738  lendingToken.transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1448:1499   */\n      mstore\n        /* \"contracts/Loan.sol\":1723:1727  this */\n      address\n        /* \"#utility.yul\":1515:1533   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1508:1568   */\n      mstore\n        /* \"#utility.yul\":1584:1602   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":1577:1611   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Loan.sol\":1677:1689  lendingToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Loan.sol\":1677:1702  lendingToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":1421:1439   */\n      0x64\n      add\n        /* \"contracts/Loan.sol\":1677:1738  lendingToken.transferFrom(msg.sender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      pop\n        /* \"contracts/Loan.sol\":1754:1764  msg.sender */\n      caller\n        /* \"contracts/Loan.sol\":1749:1765  debt[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Loan.sol\":1749:1753  debt */\n      0x03\n        /* \"contracts/Loan.sol\":1749:1765  debt[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Loan.sol\":1749:1776  debt[msg.sender] -= _amount */\n      dup1\n      sload\n        /* \"contracts/Loan.sol\":1769:1776  _amount */\n      dup4\n      swap3\n        /* \"contracts/Loan.sol\":1749:1765  debt[msg.sender] */\n      swap1\n        /* \"contracts/Loan.sol\":1749:1776  debt[msg.sender] -= _amount */\n      tag_51\n      swap1\n        /* \"contracts/Loan.sol\":1769:1776  _amount */\n      dup5\n      swap1\n        /* \"contracts/Loan.sol\":1749:1776  debt[msg.sender] -= _amount */\n      tag_52\n      jump\t// in\n    tag_51:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Loan.sol\":1792:1819  Repaid(msg.sender, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Loan.sol\":1799:1809  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Loan.sol\":1792:1819  Repaid(msg.sender, _amount) */\n      0x0516911bcc3a0a7412a44601057c0a0a1ec628bde049a84284bc428866534488\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/Loan.sol\":1792:1819  Repaid(msg.sender, _amount) */\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Loan.sol\":1564:1826  function repay(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/Loan.sol\":834:1141  function depositCollateral(uint256 _amount) external {... */\n    tag_35:\n        /* \"contracts/Loan.sol\":915:916  0 */\n      0x00\n        /* \"contracts/Loan.sol\":905:912  _amount */\n      dup2\n        /* \"contracts/Loan.sol\":905:916  _amount > 0 */\n      gt\n        /* \"contracts/Loan.sol\":897:953  require(_amount > 0, \"Amount must be greater than zero\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2371:2373   */\n      0x20\n        /* \"contracts/Loan.sol\":897:953  require(_amount > 0, \"Amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2353:2374   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2390:2408   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2383:2413   */\n      mstore\n        /* \"#utility.yul\":2449:2483   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":2429:2447   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2422:2484   */\n      mstore\n        /* \"#utility.yul\":2501:2519   */\n      0x64\n      add\n        /* \"contracts/Loan.sol\":897:953  require(_amount > 0, \"Amount must be greater than zero\") */\n      tag_43\n        /* \"#utility.yul\":2169:2525   */\n      jump\n        /* \"contracts/Loan.sol\":897:953  require(_amount > 0, \"Amount must be greater than zero\") */\n    tag_55:\n        /* \"contracts/Loan.sol\":963:978  collateralToken */\n      sload(0x00)\n        /* \"contracts/Loan.sol\":963:1027  collateralToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/Loan.sol\":992:1002  msg.sender */\n      caller\n        /* \"contracts/Loan.sol\":963:1027  collateralToken.transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1448:1499   */\n      mstore\n        /* \"contracts/Loan.sol\":1012:1016  this */\n      address\n        /* \"#utility.yul\":1515:1533   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1508:1568   */\n      mstore\n        /* \"#utility.yul\":1584:1602   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":1577:1611   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Loan.sol\":963:978  collateralToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Loan.sol\":963:991  collateralToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":1421:1439   */\n      0x64\n      add\n        /* \"contracts/Loan.sol\":963:1027  collateralToken.transferFrom(msg.sender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_61:\n      pop\n        /* \"contracts/Loan.sol\":1056:1066  msg.sender */\n      caller\n        /* \"contracts/Loan.sol\":1037:1067  collateralBalances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Loan.sol\":1037:1055  collateralBalances */\n      0x02\n        /* \"contracts/Loan.sol\":1037:1067  collateralBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Loan.sol\":1037:1078  collateralBalances[msg.sender] += _amount */\n      dup1\n      sload\n        /* \"contracts/Loan.sol\":1071:1078  _amount */\n      dup4\n      swap3\n        /* \"contracts/Loan.sol\":1037:1067  collateralBalances[msg.sender] */\n      swap1\n        /* \"contracts/Loan.sol\":1037:1078  collateralBalances[msg.sender] += _amount */\n      tag_62\n      swap1\n        /* \"contracts/Loan.sol\":1071:1078  _amount */\n      dup5\n      swap1\n        /* \"contracts/Loan.sol\":1037:1078  collateralBalances[msg.sender] += _amount */\n      tag_63\n      jump\t// in\n    tag_62:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Loan.sol\":1094:1134  CollateralDeposited(msg.sender, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Loan.sol\":1114:1124  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Loan.sol\":1094:1134  CollateralDeposited(msg.sender, _amount) */\n      0xd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/Loan.sol\":1094:1134  CollateralDeposited(msg.sender, _amount) */\n      tag_53\n        /* \"#utility.yul\":305:482   */\n      jump\n        /* \"contracts/Loan.sol\":1167:1538  function borrow(uint256 _amount) external {... */\n    tag_38:\n        /* \"contracts/Loan.sol\":1237:1238  0 */\n      0x00\n        /* \"contracts/Loan.sol\":1227:1234  _amount */\n      dup2\n        /* \"contracts/Loan.sol\":1227:1238  _amount > 0 */\n      gt\n        /* \"contracts/Loan.sol\":1219:1275  require(_amount > 0, \"Amount must be greater than zero\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2371:2373   */\n      0x20\n        /* \"contracts/Loan.sol\":1219:1275  require(_amount > 0, \"Amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2353:2374   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2390:2408   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2383:2413   */\n      mstore\n        /* \"#utility.yul\":2449:2483   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":2429:2447   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2422:2484   */\n      mstore\n        /* \"#utility.yul\":2501:2519   */\n      0x64\n      add\n        /* \"contracts/Loan.sol\":1219:1275  require(_amount > 0, \"Amount must be greater than zero\") */\n      tag_43\n        /* \"#utility.yul\":2169:2525   */\n      jump\n        /* \"contracts/Loan.sol\":1219:1275  require(_amount > 0, \"Amount must be greater than zero\") */\n    tag_66:\n        /* \"contracts/Loan.sol\":1343:1346  100 */\n      0x64\n        /* \"contracts/Loan.sol\":1327:1340  _amount * 150 */\n      tag_68\n        /* \"contracts/Loan.sol\":1327:1334  _amount */\n      dup3\n        /* \"contracts/Loan.sol\":1337:1340  150 */\n      0x96\n        /* \"contracts/Loan.sol\":1327:1340  _amount * 150 */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"contracts/Loan.sol\":1327:1346  _amount * 150 / 100 */\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"contracts/Loan.sol\":1312:1322  msg.sender */\n      caller\n        /* \"contracts/Loan.sol\":1293:1323  collateralBalances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Loan.sol\":1293:1311  collateralBalances */\n      0x02\n        /* \"contracts/Loan.sol\":1293:1323  collateralBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Loan.sol\":1293:1346  collateralBalances[msg.sender] >= _amount * 150 / 100 */\n      lt\n      iszero\n        /* \"contracts/Loan.sol\":1285:1374  require(collateralBalances[msg.sender] >= _amount * 150 / 100, \"Insufficient collateral\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3257:3259   */\n      0x20\n        /* \"contracts/Loan.sol\":1285:1374  require(collateralBalances[msg.sender] >= _amount * 150 / 100, \"Insufficient collateral\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3239:3260   */\n      mstore\n        /* \"#utility.yul\":3296:3298   */\n      0x17\n        /* \"#utility.yul\":3276:3294   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3269:3299   */\n      mstore\n        /* \"#utility.yul\":3335:3360   */\n      0x496e73756666696369656e7420636f6c6c61746572616c000000000000000000\n        /* \"#utility.yul\":3315:3333   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3308:3361   */\n      mstore\n        /* \"#utility.yul\":3378:3396   */\n      0x64\n      add\n        /* \"contracts/Loan.sol\":1285:1374  require(collateralBalances[msg.sender] >= _amount * 150 / 100, \"Insufficient collateral\") */\n      tag_43\n        /* \"#utility.yul\":3055:3402   */\n      jump\n        /* \"contracts/Loan.sol\":1285:1374  require(collateralBalances[msg.sender] >= _amount * 150 / 100, \"Insufficient collateral\") */\n    tag_72:\n        /* \"contracts/Loan.sol\":1411:1421  msg.sender */\n      caller\n        /* \"contracts/Loan.sol\":1406:1422  debt[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Loan.sol\":1406:1410  debt */\n      0x03\n        /* \"contracts/Loan.sol\":1406:1422  debt[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Loan.sol\":1406:1433  debt[msg.sender] += _amount */\n      dup1\n      sload\n        /* \"contracts/Loan.sol\":1426:1433  _amount */\n      dup4\n      swap3\n        /* \"contracts/Loan.sol\":1406:1422  debt[msg.sender] */\n      swap1\n        /* \"contracts/Loan.sol\":1406:1433  debt[msg.sender] += _amount */\n      tag_75\n      swap1\n        /* \"contracts/Loan.sol\":1426:1433  _amount */\n      dup5\n      swap1\n        /* \"contracts/Loan.sol\":1406:1433  debt[msg.sender] += _amount */\n      tag_63\n      jump\t// in\n    tag_75:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Loan.sol\":1444:1456  lendingToken */\n      sload(0x01)\n        /* \"contracts/Loan.sol\":1444:1486  lendingToken.transfer(msg.sender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/Loan.sol\":1466:1476  msg.sender */\n      caller\n        /* \"contracts/Loan.sol\":1444:1486  lendingToken.transfer(msg.sender, _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3581:3632   */\n      mstore\n        /* \"#utility.yul\":3648:3666   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3641:3675   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Loan.sol\":1444:1456  lendingToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Loan.sol\":1444:1465  lendingToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3554:3572   */\n      0x44\n      add\n        /* \"contracts/Loan.sol\":1444:1486  lendingToken.transfer(msg.sender, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_80:\n      pop\n        /* \"contracts/Loan.sol\":1502:1531  Borrowed(msg.sender, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":451:476   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Loan.sol\":1511:1521  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Loan.sol\":1502:1531  Borrowed(msg.sender, _amount) */\n      0xac59582e5396aca512fa873a2047e7f4c80f8f55d4a06cb34a78a0187f62719f\n      swap1\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/Loan.sol\":1502:1531  Borrowed(msg.sender, _amount) */\n      tag_53\n        /* \"#utility.yul\":305:482   */\n      jump\n        /* \"contracts/Loan.sol\":1901:2024  function faucet() external {... */\n    tag_40:\n        /* \"contracts/Loan.sol\":1938:1953  collateralToken */\n      sload(0x00)\n        /* \"contracts/Loan.sol\":1938:1975  collateralToken.mint(msg.sender, 100) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n        /* \"contracts/Loan.sol\":1959:1969  msg.sender */\n      caller\n        /* \"contracts/Loan.sol\":1938:1975  collateralToken.mint(msg.sender, 100) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3581:3632   */\n      mstore\n        /* \"contracts/Loan.sol\":1971:1974  100 */\n      0x64\n        /* \"#utility.yul\":3648:3666   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3641:3675   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Loan.sol\":1938:1953  collateralToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Loan.sol\":1938:1958  collateralToken.mint */\n      0x40c10f19\n      swap1\n        /* \"#utility.yul\":3554:3572   */\n      0x44\n      add\n        /* \"contracts/Loan.sol\":1938:1975  collateralToken.mint(msg.sender, 100) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n        /* \"contracts/Loan.sol\":1990:2017  FaucetUsed(msg.sender, 100) */\n      mload(0x40)\n        /* \"contracts/Loan.sol\":2013:2016  100 */\n      0x64\n        /* \"#utility.yul\":451:476   */\n      dup2\n      mstore\n        /* \"contracts/Loan.sol\":2001:2011  msg.sender */\n      caller\n      swap3\n      pop\n        /* \"contracts/Loan.sol\":1990:2017  FaucetUsed(msg.sender, 100) */\n      0xc471df7d13ab46c73ec6eb2da0f35f84077f20d50243ba09a714b82cffc54de9\n      swap2\n      pop\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/Loan.sol\":1990:2017  FaucetUsed(msg.sender, 100) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Loan.sol\":1901:2024  function faucet() external {... */\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_14:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_93:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_94\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_94:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:667   */\n    tag_20:\n        /* \"#utility.yul\":546:552   */\n      0x00\n        /* \"#utility.yul\":599:601   */\n      0x20\n        /* \"#utility.yul\":587:596   */\n      dup3\n        /* \"#utility.yul\":578:585   */\n      dup5\n        /* \"#utility.yul\":574:597   */\n      sub\n        /* \"#utility.yul\":570:602   */\n      slt\n        /* \"#utility.yul\":567:619   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":615:616   */\n      0x00\n        /* \"#utility.yul\":612:613   */\n      dup1\n        /* \"#utility.yul\":605:617   */\n      revert\n        /* \"#utility.yul\":567:619   */\n    tag_97:\n      pop\n        /* \"#utility.yul\":638:661   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":487:667   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1622:1899   */\n    tag_50:\n        /* \"#utility.yul\":1689:1695   */\n      0x00\n        /* \"#utility.yul\":1742:1744   */\n      0x20\n        /* \"#utility.yul\":1730:1739   */\n      dup3\n        /* \"#utility.yul\":1721:1728   */\n      dup5\n        /* \"#utility.yul\":1717:1740   */\n      sub\n        /* \"#utility.yul\":1713:1745   */\n      slt\n        /* \"#utility.yul\":1710:1762   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":1758:1759   */\n      0x00\n        /* \"#utility.yul\":1755:1756   */\n      dup1\n        /* \"#utility.yul\":1748:1760   */\n      revert\n        /* \"#utility.yul\":1710:1762   */\n    tag_102:\n        /* \"#utility.yul\":1790:1799   */\n      dup2\n        /* \"#utility.yul\":1784:1800   */\n      mload\n        /* \"#utility.yul\":1843:1848   */\n      dup1\n        /* \"#utility.yul\":1836:1849   */\n      iszero\n        /* \"#utility.yul\":1829:1850   */\n      iszero\n        /* \"#utility.yul\":1822:1827   */\n      dup2\n        /* \"#utility.yul\":1819:1851   */\n      eq\n        /* \"#utility.yul\":1809:1869   */\n      tag_94\n      jumpi\n        /* \"#utility.yul\":1865:1866   */\n      0x00\n        /* \"#utility.yul\":1862:1863   */\n      dup1\n        /* \"#utility.yul\":1855:1867   */\n      revert\n        /* \"#utility.yul\":1904:2031   */\n    tag_90:\n        /* \"#utility.yul\":1965:1975   */\n      0x4e487b71\n        /* \"#utility.yul\":1960:1963   */\n      0xe0\n        /* \"#utility.yul\":1956:1976   */\n      shl\n        /* \"#utility.yul\":1953:1954   */\n      0x00\n        /* \"#utility.yul\":1946:1977   */\n      mstore\n        /* \"#utility.yul\":1996:2000   */\n      0x11\n        /* \"#utility.yul\":1993:1994   */\n      0x04\n        /* \"#utility.yul\":1986:2001   */\n      mstore\n        /* \"#utility.yul\":2020:2024   */\n      0x24\n        /* \"#utility.yul\":2017:2018   */\n      0x00\n        /* \"#utility.yul\":2010:2025   */\n      revert\n        /* \"#utility.yul\":2036:2164   */\n    tag_52:\n        /* \"#utility.yul\":2103:2112   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2124:2135   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2121:2158   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":2138:2156   */\n      tag_107\n      tag_90\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2036:2164   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2530:2655   */\n    tag_63:\n        /* \"#utility.yul\":2595:2604   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2616:2626   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2613:2649   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":2629:2647   */\n      tag_107\n      tag_90\n      jump\t// in\n        /* \"#utility.yul\":2660:2828   */\n    tag_69:\n        /* \"#utility.yul\":2733:2742   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2764:2773   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2781:2796   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2775:2797   */\n      dup5\n      eq\n        /* \"#utility.yul\":2761:2798   */\n      or\n        /* \"#utility.yul\":2751:2822   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":2802:2820   */\n      tag_107\n      tag_90\n      jump\t// in\n        /* \"#utility.yul\":2833:3050   */\n    tag_71:\n        /* \"#utility.yul\":2873:2874   */\n      0x00\n        /* \"#utility.yul\":2899:2900   */\n      dup3\n        /* \"#utility.yul\":2889:3021   */\n      tag_116\n      jumpi\n        /* \"#utility.yul\":2943:2953   */\n      0x4e487b71\n        /* \"#utility.yul\":2938:2941   */\n      0xe0\n        /* \"#utility.yul\":2934:2954   */\n      shl\n        /* \"#utility.yul\":2931:2932   */\n      0x00\n        /* \"#utility.yul\":2924:2955   */\n      mstore\n        /* \"#utility.yul\":2978:2982   */\n      0x12\n        /* \"#utility.yul\":2975:2976   */\n      0x04\n        /* \"#utility.yul\":2968:2983   */\n      mstore\n        /* \"#utility.yul\":3006:3010   */\n      0x24\n        /* \"#utility.yul\":3003:3004   */\n      0x00\n        /* \"#utility.yul\":2996:3011   */\n      revert\n        /* \"#utility.yul\":2889:3021   */\n    tag_116:\n      pop\n        /* \"#utility.yul\":3035:3044   */\n      div\n      swap1\n        /* \"#utility.yul\":2833:3050   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a9d374a0d974ac29450c03bda40840ea1777217c8871e6d8cdb66cb26def40b364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_856": {
									"entryPoint": null,
									"id": 856,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_contract_MockToken_fromMemory": {
									"entryPoint": 179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_MockToken_$1041t_contract$_MockToken_$1041t_uint256_fromMemory": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:900:7",
										"nodeType": "YulBlock",
										"src": "0:900:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "85:117:7",
													"nodeType": "YulBlock",
													"src": "85:117:7",
													"statements": [
														{
															"nativeSrc": "95:22:7",
															"nodeType": "YulAssignment",
															"src": "95:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "110:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "110:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "104:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "104:5:7"
																},
																"nativeSrc": "104:13:7",
																"nodeType": "YulFunctionCall",
																"src": "104:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "95:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "180:16:7",
																"nodeType": "YulBlock",
																"src": "180:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "189:1:7",
																					"nodeType": "YulLiteral",
																					"src": "189:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "192:1:7",
																					"nodeType": "YulLiteral",
																					"src": "192:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "182:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:7"
																			},
																			"nativeSrc": "182:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "182:12:7"
																		},
																		"nativeSrc": "182:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "182:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "139:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "139:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "150:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "150:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "165:3:7",
																										"nodeType": "YulLiteral",
																										"src": "165:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "170:1:7",
																										"nodeType": "YulLiteral",
																										"src": "170:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "161:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "161:3:7"
																								},
																								"nativeSrc": "161:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "161:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "174:1:7",
																								"nodeType": "YulLiteral",
																								"src": "174:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "157:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "157:3:7"
																						},
																						"nativeSrc": "157:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "157:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "146:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "146:3:7"
																				},
																				"nativeSrc": "146:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "146:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "136:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "136:2:7"
																		},
																		"nativeSrc": "136:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "136:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "129:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "129:6:7"
																},
																"nativeSrc": "129:50:7",
																"nodeType": "YulFunctionCall",
																"src": "129:50:7"
															},
															"nativeSrc": "126:70:7",
															"nodeType": "YulIf",
															"src": "126:70:7"
														}
													]
												},
												"name": "abi_decode_contract_MockToken_fromMemory",
												"nativeSrc": "14:188:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "64:6:7",
														"nodeType": "YulTypedName",
														"src": "64:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "75:5:7",
														"nodeType": "YulTypedName",
														"src": "75:5:7",
														"type": ""
													}
												],
												"src": "14:188:7"
											},
											{
												"body": {
													"nativeSrc": "358:261:7",
													"nodeType": "YulBlock",
													"src": "358:261:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "404:16:7",
																"nodeType": "YulBlock",
																"src": "404:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "413:1:7",
																					"nodeType": "YulLiteral",
																					"src": "413:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "416:1:7",
																					"nodeType": "YulLiteral",
																					"src": "416:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "406:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "406:6:7"
																			},
																			"nativeSrc": "406:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "406:12:7"
																		},
																		"nativeSrc": "406:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "406:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "379:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "379:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "388:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "388:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "375:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "375:3:7"
																		},
																		"nativeSrc": "375:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "375:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "400:2:7",
																		"nodeType": "YulLiteral",
																		"src": "400:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "371:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "371:3:7"
																},
																"nativeSrc": "371:32:7",
																"nodeType": "YulFunctionCall",
																"src": "371:32:7"
															},
															"nativeSrc": "368:52:7",
															"nodeType": "YulIf",
															"src": "368:52:7"
														},
														{
															"nativeSrc": "429:61:7",
															"nodeType": "YulAssignment",
															"src": "429:61:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "480:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "480:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_contract_MockToken_fromMemory",
																	"nativeSrc": "439:40:7",
																	"nodeType": "YulIdentifier",
																	"src": "439:40:7"
																},
																"nativeSrc": "439:51:7",
																"nodeType": "YulFunctionCall",
																"src": "439:51:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "429:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "429:6:7"
																}
															]
														},
														{
															"nativeSrc": "499:70:7",
															"nodeType": "YulAssignment",
															"src": "499:70:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "554:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "554:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "565:2:7",
																				"nodeType": "YulLiteral",
																				"src": "565:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "550:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "550:3:7"
																		},
																		"nativeSrc": "550:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "550:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_contract_MockToken_fromMemory",
																	"nativeSrc": "509:40:7",
																	"nodeType": "YulIdentifier",
																	"src": "509:40:7"
																},
																"nativeSrc": "509:60:7",
																"nodeType": "YulFunctionCall",
																"src": "509:60:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "499:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "499:6:7"
																}
															]
														},
														{
															"nativeSrc": "578:35:7",
															"nodeType": "YulAssignment",
															"src": "578:35:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "598:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "598:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "609:2:7",
																				"nodeType": "YulLiteral",
																				"src": "609:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "594:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "594:3:7"
																		},
																		"nativeSrc": "594:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "594:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "588:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "588:5:7"
																},
																"nativeSrc": "588:25:7",
																"nodeType": "YulFunctionCall",
																"src": "588:25:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "578:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "578:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_MockToken_$1041t_contract$_MockToken_$1041t_uint256_fromMemory",
												"nativeSrc": "207:412:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "308:9:7",
														"nodeType": "YulTypedName",
														"src": "308:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "319:7:7",
														"nodeType": "YulTypedName",
														"src": "319:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "331:6:7",
														"nodeType": "YulTypedName",
														"src": "331:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "339:6:7",
														"nodeType": "YulTypedName",
														"src": "339:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "347:6:7",
														"nodeType": "YulTypedName",
														"src": "347:6:7",
														"type": ""
													}
												],
												"src": "207:412:7"
											},
											{
												"body": {
													"nativeSrc": "753:145:7",
													"nodeType": "YulBlock",
													"src": "753:145:7",
													"statements": [
														{
															"nativeSrc": "763:26:7",
															"nodeType": "YulAssignment",
															"src": "763:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "775:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "786:2:7",
																		"nodeType": "YulLiteral",
																		"src": "786:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "771:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "771:3:7"
																},
																"nativeSrc": "771:18:7",
																"nodeType": "YulFunctionCall",
																"src": "771:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "763:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "763:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "805:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "805:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "820:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "836:3:7",
																								"nodeType": "YulLiteral",
																								"src": "836:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "841:1:7",
																								"nodeType": "YulLiteral",
																								"src": "841:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "832:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "832:3:7"
																						},
																						"nativeSrc": "832:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "832:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "845:1:7",
																						"nodeType": "YulLiteral",
																						"src": "845:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "828:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "828:3:7"
																				},
																				"nativeSrc": "828:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "828:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "816:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:7"
																		},
																		"nativeSrc": "816:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "816:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "798:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:7"
																},
																"nativeSrc": "798:51:7",
																"nodeType": "YulFunctionCall",
																"src": "798:51:7"
															},
															"nativeSrc": "798:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "798:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "869:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "869:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "880:2:7",
																				"nodeType": "YulLiteral",
																				"src": "880:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "865:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "865:3:7"
																		},
																		"nativeSrc": "865:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "865:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "885:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "885:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "858:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "858:6:7"
																},
																"nativeSrc": "858:34:7",
																"nodeType": "YulFunctionCall",
																"src": "858:34:7"
															},
															"nativeSrc": "858:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "858:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "624:274:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "714:9:7",
														"nodeType": "YulTypedName",
														"src": "714:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "725:6:7",
														"nodeType": "YulTypedName",
														"src": "725:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "733:6:7",
														"nodeType": "YulTypedName",
														"src": "733:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "744:4:7",
														"nodeType": "YulTypedName",
														"src": "744:4:7",
														"type": ""
													}
												],
												"src": "624:274:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_contract_MockToken_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_MockToken_$1041t_contract$_MockToken_$1041t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_contract_MockToken_fromMemory(headStart)\n        value1 := abi_decode_contract_MockToken_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516107e53803806107e583398101604081905261002e916100ce565b5f80546001600160a01b038581166001600160a01b0319928316179092556001805492851692909116821790556040516340c10f1960e01b8152306004820152602481018390526340c10f19906044015f604051808303815f87803b158015610095575f80fd5b505af11580156100a7573d5f803e3d5ffd5b50505050505050610107565b80516001600160a01b03811681146100c9575f80fd5b919050565b5f805f606084860312156100e0575f80fd5b6100e9846100b3565b92506100f7602085016100b3565b9150604084015190509250925092565b6106d1806101145f395ff3fe608060405234801561000f575f80fd5b5060043610610085575f3560e01c8063b2016bd411610058578063b2016bd41461011a578063bad4a01f1461012c578063c5ebeaec1461013f578063de5f72fd14610152575f80fd5b806329bc969d14610089578063371fd8e6146100bb5780639b6c56ec146100d0578063aaaca558146100ef575b5f80fd5b6100a86100973660046105c2565b60026020525f908152604090205481565b6040519081526020015b60405180910390f35b6100ce6100c93660046105ef565b61015a565b005b6100a86100de3660046105c2565b60036020525f908152604090205481565b600154610102906001600160a01b031681565b6040516001600160a01b0390911681526020016100b2565b5f54610102906001600160a01b031681565b6100ce61013a3660046105ef565b610285565b6100ce61014d3660046105ef565b6103a1565b6100ce61052c565b335f908152600360205260409020546101b05760405162461bcd60e51b8152602060048201526013602482015272139bc81bdd5d1cdd185b991a5b99c81919589d606a1b60448201526064015b60405180910390fd5b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af1158015610204573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102289190610606565b50335f9081526003602052604081208054839290610247908490610639565b909155505060405181815233907f0516911bcc3a0a7412a44601057c0a0a1ec628bde049a84284bc428866534488906020015b60405180910390a250565b5f81116102d45760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016101a7565b5f546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af1158015610327573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061034b9190610606565b50335f908152600260205260408120805483929061036a908490610652565b909155505060405181815233907fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a13584801429060200161027a565b5f81116103f05760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016101a7565b60646103fd826096610665565b610407919061067c565b335f9081526002602052604090205410156104645760405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e7420636f6c6c61746572616c00000000000000000060448201526064016101a7565b335f9081526003602052604081208054839290610482908490610652565b909155505060015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303815f875af11580156104d5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104f99190610606565b5060405181815233907fac59582e5396aca512fa873a2047e7f4c80f8f55d4a06cb34a78a0187f62719f9060200161027a565b5f546040516340c10f1960e01b8152336004820152606460248201526001600160a01b03909116906340c10f19906044015f604051808303815f87803b158015610574575f80fd5b505af1158015610586573d5f803e3d5ffd5b5050604051606481523392507fc471df7d13ab46c73ec6eb2da0f35f84077f20d50243ba09a714b82cffc54de9915060200160405180910390a2565b5f602082840312156105d2575f80fd5b81356001600160a01b03811681146105e8575f80fd5b9392505050565b5f602082840312156105ff575f80fd5b5035919050565b5f60208284031215610616575f80fd5b815180151581146105e8575f80fd5b634e487b7160e01b5f52601160045260245ffd5b8181038181111561064c5761064c610625565b92915050565b8082018082111561064c5761064c610625565b808202811582820484141761064c5761064c610625565b5f8261069657634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220a9d374a0d974ac29450c03bda40840ea1777217c8871e6d8cdb66cb26def40b364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x7E5 CODESIZE SUB DUP1 PUSH2 0x7E5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xCE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP PUSH2 0x107 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE9 DUP5 PUSH2 0xB3 JUMP JUMPDEST SWAP3 POP PUSH2 0xF7 PUSH1 0x20 DUP6 ADD PUSH2 0xB3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x6D1 DUP1 PUSH2 0x114 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB2016BD4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB2016BD4 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xBAD4A01F EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xC5EBEAEC EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xDE5F72FD EQ PUSH2 0x152 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29BC969D EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x371FD8E6 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x9B6C56EC EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xAAACA558 EQ PUSH2 0xEF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH2 0xC9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EF JUMP JUMPDEST PUSH2 0x15A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA8 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x102 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB2 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x102 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x5EF JUMP JUMPDEST PUSH2 0x285 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x14D CALLDATASIZE PUSH1 0x4 PUSH2 0x5EF JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x52C JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BC81BDD5D1CDD185B991A5B99C81919589D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x204 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x247 SWAP1 DUP5 SWAP1 PUSH2 0x639 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x516911BCC3A0A7412A44601057C0A0A1EC628BDE049A84284BC428866534488 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x2D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x327 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x36A SWAP1 DUP5 SWAP1 PUSH2 0x652 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xD7243F6F8212D5188FD054141CF6EA89CFC0D91FACB8C3AFE2F88A1358480142 SWAP1 PUSH1 0x20 ADD PUSH2 0x27A JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x3FD DUP3 PUSH1 0x96 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x67C JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0x464 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x482 SWAP1 DUP5 SWAP1 PUSH2 0x652 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xAC59582E5396ACA512FA873A2047E7F4C80F8F55D4A06CB34A78A0187F62719F SWAP1 PUSH1 0x20 ADD PUSH2 0x27A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x64 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x574 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x586 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x64 DUP2 MSTORE CALLER SWAP3 POP PUSH32 0xC471DF7D13AB46C73EC6EB2DA0F35F84077F20D50243BA09A714B82CFFC54DE9 SWAP2 POP PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x64C JUMPI PUSH2 0x64C PUSH2 0x625 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x64C JUMPI PUSH2 0x64C PUSH2 0x625 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x64C JUMPI PUSH2 0x64C PUSH2 0x625 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x696 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xD3 PUSH21 0xA0D974AC29450C03BDA40840EA1777217C8871E6D8 0xCD 0xB6 PUSH13 0xB26DEF40B364736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "84:1942:5:-:0;;;577:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;669:15;:34;;-1:-1:-1;;;;;669:34:5;;;-1:-1:-1;;;;;;669:34:5;;;;;;;-1:-1:-1;713:28:5;;;;;;;;;;;;;751:41;;-1:-1:-1;;;751:41:5;;777:4;751:41;;;798:51:7;865:18;;;858:34;;;751:17:5;;771:18:7;;751:41:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;577:222;;;84:1942;;14:188:7;104:13;;-1:-1:-1;;;;;146:31:7;;136:42;;126:70;;192:1;189;182:12;126:70;14:188;;;:::o;207:412::-;331:6;339;347;400:2;388:9;379:7;375:23;371:32;368:52;;;416:1;413;406:12;368:52;439:51;480:9;439:51;:::i;:::-;429:61;;509:60;565:2;554:9;550:18;509:60;:::i;:::-;499:70;;609:2;598:9;594:18;588:25;578:35;;207:412;;;;;:::o;624:274::-;84:1942:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@borrow_942": {
									"entryPoint": 929,
									"id": 942,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@collateralBalances_798": {
									"entryPoint": null,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@collateralToken_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@debt_802": {
									"entryPoint": null,
									"id": 802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositCollateral_894": {
									"entryPoint": 645,
									"id": 894,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@faucet_1001": {
									"entryPoint": 1324,
									"id": 1001,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lendingToken_794": {
									"entryPoint": null,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@repay_983": {
									"entryPoint": 346,
									"id": 983,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_100_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_MockToken_$1041__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_100_by_1__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b33a9e1bde44488f3d2083932c9dddd287f7425247540a395f797d5c0e9224c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1573,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4164:7",
										"nodeType": "YulBlock",
										"src": "0:4164:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:216:7",
													"nodeType": "YulBlock",
													"src": "84:216:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:7",
																"nodeType": "YulBlock",
																"src": "130:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:7",
																					"nodeType": "YulLiteral",
																					"src": "139:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:7",
																					"nodeType": "YulLiteral",
																					"src": "142:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:7"
																			},
																			"nativeSrc": "132:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:7"
																		},
																		"nativeSrc": "132:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:7"
																		},
																		"nativeSrc": "101:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:7",
																		"nodeType": "YulLiteral",
																		"src": "126:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:7"
																},
																"nativeSrc": "97:32:7",
																"nodeType": "YulFunctionCall",
																"src": "97:32:7"
															},
															"nativeSrc": "94:52:7",
															"nodeType": "YulIf",
															"src": "94:52:7"
														},
														{
															"nativeSrc": "155:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "181:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "168:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:7"
																},
																"nativeSrc": "168:23:7",
																"nodeType": "YulFunctionCall",
																"src": "168:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:7",
																	"nodeType": "YulTypedName",
																	"src": "159:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:7",
																"nodeType": "YulBlock",
																"src": "254:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:7",
																					"nodeType": "YulLiteral",
																					"src": "263:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:7",
																					"nodeType": "YulLiteral",
																					"src": "266:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:7"
																			},
																			"nativeSrc": "256:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:7"
																		},
																		"nativeSrc": "256:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "213:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "224:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "239:3:7",
																										"nodeType": "YulLiteral",
																										"src": "239:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "244:1:7",
																										"nodeType": "YulLiteral",
																										"src": "244:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "235:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:7"
																								},
																								"nativeSrc": "235:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "248:1:7",
																								"nodeType": "YulLiteral",
																								"src": "248:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "231:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:7"
																						},
																						"nativeSrc": "231:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "220:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:7"
																				},
																				"nativeSrc": "220:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "210:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:7"
																		},
																		"nativeSrc": "210:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "203:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:7"
																},
																"nativeSrc": "203:50:7",
																"nodeType": "YulFunctionCall",
																"src": "203:50:7"
															},
															"nativeSrc": "200:70:7",
															"nodeType": "YulIf",
															"src": "200:70:7"
														},
														{
															"nativeSrc": "279:15:7",
															"nodeType": "YulAssignment",
															"src": "279:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:7",
																"nodeType": "YulIdentifier",
																"src": "289:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "14:286:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:7",
														"nodeType": "YulTypedName",
														"src": "50:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:7",
														"nodeType": "YulTypedName",
														"src": "61:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:7",
														"nodeType": "YulTypedName",
														"src": "73:6:7",
														"type": ""
													}
												],
												"src": "14:286:7"
											},
											{
												"body": {
													"nativeSrc": "406:76:7",
													"nodeType": "YulBlock",
													"src": "406:76:7",
													"statements": [
														{
															"nativeSrc": "416:26:7",
															"nodeType": "YulAssignment",
															"src": "416:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "428:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "439:2:7",
																		"nodeType": "YulLiteral",
																		"src": "439:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "424:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:7"
																},
																"nativeSrc": "424:18:7",
																"nodeType": "YulFunctionCall",
																"src": "424:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "416:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "458:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "469:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "469:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "451:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:7"
																},
																"nativeSrc": "451:25:7",
																"nodeType": "YulFunctionCall",
																"src": "451:25:7"
															},
															"nativeSrc": "451:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "451:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "305:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "375:9:7",
														"nodeType": "YulTypedName",
														"src": "375:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "386:6:7",
														"nodeType": "YulTypedName",
														"src": "386:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "397:4:7",
														"nodeType": "YulTypedName",
														"src": "397:4:7",
														"type": ""
													}
												],
												"src": "305:177:7"
											},
											{
												"body": {
													"nativeSrc": "557:110:7",
													"nodeType": "YulBlock",
													"src": "557:110:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "603:16:7",
																"nodeType": "YulBlock",
																"src": "603:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "612:1:7",
																					"nodeType": "YulLiteral",
																					"src": "612:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "615:1:7",
																					"nodeType": "YulLiteral",
																					"src": "615:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "605:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:7"
																			},
																			"nativeSrc": "605:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:7"
																		},
																		"nativeSrc": "605:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "578:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "578:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "587:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "587:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "574:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "574:3:7"
																		},
																		"nativeSrc": "574:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "574:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "599:2:7",
																		"nodeType": "YulLiteral",
																		"src": "599:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "570:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:7"
																},
																"nativeSrc": "570:32:7",
																"nodeType": "YulFunctionCall",
																"src": "570:32:7"
															},
															"nativeSrc": "567:52:7",
															"nodeType": "YulIf",
															"src": "567:52:7"
														},
														{
															"nativeSrc": "628:33:7",
															"nodeType": "YulAssignment",
															"src": "628:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "651:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "651:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "638:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "638:12:7"
																},
																"nativeSrc": "638:23:7",
																"nodeType": "YulFunctionCall",
																"src": "638:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "628:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "628:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "487:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "523:9:7",
														"nodeType": "YulTypedName",
														"src": "523:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "534:7:7",
														"nodeType": "YulTypedName",
														"src": "534:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "546:6:7",
														"nodeType": "YulTypedName",
														"src": "546:6:7",
														"type": ""
													}
												],
												"src": "487:180:7"
											},
											{
												"body": {
													"nativeSrc": "791:102:7",
													"nodeType": "YulBlock",
													"src": "791:102:7",
													"statements": [
														{
															"nativeSrc": "801:26:7",
															"nodeType": "YulAssignment",
															"src": "801:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "813:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "813:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "824:2:7",
																		"nodeType": "YulLiteral",
																		"src": "824:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "809:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "809:3:7"
																},
																"nativeSrc": "809:18:7",
																"nodeType": "YulFunctionCall",
																"src": "809:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "801:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "801:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "843:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "843:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "858:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "858:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "874:3:7",
																								"nodeType": "YulLiteral",
																								"src": "874:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "879:1:7",
																								"nodeType": "YulLiteral",
																								"src": "879:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "870:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "870:3:7"
																						},
																						"nativeSrc": "870:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "870:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "883:1:7",
																						"nodeType": "YulLiteral",
																						"src": "883:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "866:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "866:3:7"
																				},
																				"nativeSrc": "866:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "866:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "854:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "854:3:7"
																		},
																		"nativeSrc": "854:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "854:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "836:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "836:6:7"
																},
																"nativeSrc": "836:51:7",
																"nodeType": "YulFunctionCall",
																"src": "836:51:7"
															},
															"nativeSrc": "836:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "836:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_MockToken_$1041__to_t_address__fromStack_reversed",
												"nativeSrc": "672:221:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "760:9:7",
														"nodeType": "YulTypedName",
														"src": "760:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "771:6:7",
														"nodeType": "YulTypedName",
														"src": "771:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "782:4:7",
														"nodeType": "YulTypedName",
														"src": "782:4:7",
														"type": ""
													}
												],
												"src": "672:221:7"
											},
											{
												"body": {
													"nativeSrc": "1072:169:7",
													"nodeType": "YulBlock",
													"src": "1072:169:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1089:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1089:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1100:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1100:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1082:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1082:6:7"
																},
																"nativeSrc": "1082:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1082:21:7"
															},
															"nativeSrc": "1082:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "1082:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1134:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1134:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1119:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:7"
																		},
																		"nativeSrc": "1119:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1119:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1139:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1139:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1112:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1112:6:7"
																},
																"nativeSrc": "1112:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1112:30:7"
															},
															"nativeSrc": "1112:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "1112:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1162:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1162:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1173:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1173:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1158:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1158:3:7"
																		},
																		"nativeSrc": "1158:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1158:18:7"
																	},
																	{
																		"hexValue": "4e6f206f75747374616e64696e672064656274",
																		"kind": "string",
																		"nativeSrc": "1178:21:7",
																		"nodeType": "YulLiteral",
																		"src": "1178:21:7",
																		"type": "",
																		"value": "No outstanding debt"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1151:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:6:7"
																},
																"nativeSrc": "1151:49:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:49:7"
															},
															"nativeSrc": "1151:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "1151:49:7"
														},
														{
															"nativeSrc": "1209:26:7",
															"nodeType": "YulAssignment",
															"src": "1209:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1221:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1221:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1232:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1232:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1217:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1217:3:7"
																},
																"nativeSrc": "1217:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1217:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1209:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1209:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b33a9e1bde44488f3d2083932c9dddd287f7425247540a395f797d5c0e9224c6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "898:343:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1049:9:7",
														"nodeType": "YulTypedName",
														"src": "1049:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1063:4:7",
														"nodeType": "YulTypedName",
														"src": "1063:4:7",
														"type": ""
													}
												],
												"src": "898:343:7"
											},
											{
												"body": {
													"nativeSrc": "1403:214:7",
													"nodeType": "YulBlock",
													"src": "1403:214:7",
													"statements": [
														{
															"nativeSrc": "1413:26:7",
															"nodeType": "YulAssignment",
															"src": "1413:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1425:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1425:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1436:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1436:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1421:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1421:3:7"
																},
																"nativeSrc": "1421:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1421:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1413:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1413:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1455:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1455:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1470:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1470:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1486:3:7",
																								"nodeType": "YulLiteral",
																								"src": "1486:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1491:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1491:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1482:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1482:3:7"
																						},
																						"nativeSrc": "1482:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1482:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1495:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1495:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1478:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1478:3:7"
																				},
																				"nativeSrc": "1478:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1478:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1466:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1466:3:7"
																		},
																		"nativeSrc": "1466:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1466:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1448:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1448:6:7"
																},
																"nativeSrc": "1448:51:7",
																"nodeType": "YulFunctionCall",
																"src": "1448:51:7"
															},
															"nativeSrc": "1448:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "1448:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1519:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1519:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1530:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1530:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1515:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1515:3:7"
																		},
																		"nativeSrc": "1515:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1515:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1539:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1539:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1555:3:7",
																								"nodeType": "YulLiteral",
																								"src": "1555:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1560:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1560:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1551:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1551:3:7"
																						},
																						"nativeSrc": "1551:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1551:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1564:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1564:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1547:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1547:3:7"
																				},
																				"nativeSrc": "1547:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1547:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1535:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1535:3:7"
																		},
																		"nativeSrc": "1535:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1508:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1508:6:7"
																},
																"nativeSrc": "1508:60:7",
																"nodeType": "YulFunctionCall",
																"src": "1508:60:7"
															},
															"nativeSrc": "1508:60:7",
															"nodeType": "YulExpressionStatement",
															"src": "1508:60:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1588:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1588:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1599:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1599:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1584:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1584:3:7"
																		},
																		"nativeSrc": "1584:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1584:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "1604:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1604:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1577:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:7"
																},
																"nativeSrc": "1577:34:7",
																"nodeType": "YulFunctionCall",
																"src": "1577:34:7"
															},
															"nativeSrc": "1577:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "1577:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "1246:371:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1356:9:7",
														"nodeType": "YulTypedName",
														"src": "1356:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1367:6:7",
														"nodeType": "YulTypedName",
														"src": "1367:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1375:6:7",
														"nodeType": "YulTypedName",
														"src": "1375:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1383:6:7",
														"nodeType": "YulTypedName",
														"src": "1383:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1394:4:7",
														"nodeType": "YulTypedName",
														"src": "1394:4:7",
														"type": ""
													}
												],
												"src": "1246:371:7"
											},
											{
												"body": {
													"nativeSrc": "1700:199:7",
													"nodeType": "YulBlock",
													"src": "1700:199:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1746:16:7",
																"nodeType": "YulBlock",
																"src": "1746:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1755:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1758:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1758:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1748:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:7"
																			},
																			"nativeSrc": "1748:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1748:12:7"
																		},
																		"nativeSrc": "1748:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1721:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1721:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1730:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1730:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1717:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1717:3:7"
																		},
																		"nativeSrc": "1717:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1717:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1742:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1742:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1713:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1713:3:7"
																},
																"nativeSrc": "1713:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1713:32:7"
															},
															"nativeSrc": "1710:52:7",
															"nodeType": "YulIf",
															"src": "1710:52:7"
														},
														{
															"nativeSrc": "1771:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1790:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1790:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1784:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1784:5:7"
																},
																"nativeSrc": "1784:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1784:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1775:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1775:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1853:16:7",
																"nodeType": "YulBlock",
																"src": "1853:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1862:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1862:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1865:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1865:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1855:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1855:6:7"
																			},
																			"nativeSrc": "1855:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1855:12:7"
																		},
																		"nativeSrc": "1855:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1855:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1822:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1822:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "1843:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1843:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "1836:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "1836:6:7"
																						},
																						"nativeSrc": "1836:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1836:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1829:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1829:6:7"
																				},
																				"nativeSrc": "1829:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1829:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1819:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1819:2:7"
																		},
																		"nativeSrc": "1819:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1819:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1812:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1812:6:7"
																},
																"nativeSrc": "1812:40:7",
																"nodeType": "YulFunctionCall",
																"src": "1812:40:7"
															},
															"nativeSrc": "1809:60:7",
															"nodeType": "YulIf",
															"src": "1809:60:7"
														},
														{
															"nativeSrc": "1878:15:7",
															"nodeType": "YulAssignment",
															"src": "1878:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1888:5:7",
																"nodeType": "YulIdentifier",
																"src": "1888:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1878:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "1622:277:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1666:9:7",
														"nodeType": "YulTypedName",
														"src": "1666:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1677:7:7",
														"nodeType": "YulTypedName",
														"src": "1677:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1689:6:7",
														"nodeType": "YulTypedName",
														"src": "1689:6:7",
														"type": ""
													}
												],
												"src": "1622:277:7"
											},
											{
												"body": {
													"nativeSrc": "1936:95:7",
													"nodeType": "YulBlock",
													"src": "1936:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1953:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1953:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1960:3:7",
																				"nodeType": "YulLiteral",
																				"src": "1960:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1965:10:7",
																				"nodeType": "YulLiteral",
																				"src": "1965:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1956:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1956:3:7"
																		},
																		"nativeSrc": "1956:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1956:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1946:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1946:6:7"
																},
																"nativeSrc": "1946:31:7",
																"nodeType": "YulFunctionCall",
																"src": "1946:31:7"
															},
															"nativeSrc": "1946:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "1946:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1993:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1993:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1986:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1986:6:7"
																},
																"nativeSrc": "1986:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1986:15:7"
															},
															"nativeSrc": "1986:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1986:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2017:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2017:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2020:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2020:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2010:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2010:6:7"
																},
																"nativeSrc": "2010:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2010:15:7"
															},
															"nativeSrc": "2010:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2010:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1904:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1904:127:7"
											},
											{
												"body": {
													"nativeSrc": "2085:79:7",
													"nodeType": "YulBlock",
													"src": "2085:79:7",
													"statements": [
														{
															"nativeSrc": "2095:17:7",
															"nodeType": "YulAssignment",
															"src": "2095:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2107:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2107:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2110:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2110:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2103:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2103:3:7"
																},
																"nativeSrc": "2103:9:7",
																"nodeType": "YulFunctionCall",
																"src": "2103:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2095:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2095:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2136:22:7",
																"nodeType": "YulBlock",
																"src": "2136:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2138:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2138:16:7"
																			},
																			"nativeSrc": "2138:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2138:18:7"
																		},
																		"nativeSrc": "2138:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2138:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2127:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2127:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2133:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2133:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2124:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2124:2:7"
																},
																"nativeSrc": "2124:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2124:11:7"
															},
															"nativeSrc": "2121:37:7",
															"nodeType": "YulIf",
															"src": "2121:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2036:128:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2067:1:7",
														"nodeType": "YulTypedName",
														"src": "2067:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2070:1:7",
														"nodeType": "YulTypedName",
														"src": "2070:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2076:4:7",
														"nodeType": "YulTypedName",
														"src": "2076:4:7",
														"type": ""
													}
												],
												"src": "2036:128:7"
											},
											{
												"body": {
													"nativeSrc": "2343:182:7",
													"nodeType": "YulBlock",
													"src": "2343:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2360:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2360:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2371:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2371:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2353:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:7"
																},
																"nativeSrc": "2353:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2353:21:7"
															},
															"nativeSrc": "2353:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2353:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2394:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2394:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2405:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2405:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2390:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2390:3:7"
																		},
																		"nativeSrc": "2390:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2390:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2410:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2410:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2383:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2383:6:7"
																},
																"nativeSrc": "2383:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2383:30:7"
															},
															"nativeSrc": "2383:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "2383:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2433:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2433:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2444:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2444:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2429:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2429:3:7"
																		},
																		"nativeSrc": "2429:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2429:18:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "2449:34:7",
																		"nodeType": "YulLiteral",
																		"src": "2449:34:7",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:7"
																},
																"nativeSrc": "2422:62:7",
																"nodeType": "YulFunctionCall",
																"src": "2422:62:7"
															},
															"nativeSrc": "2422:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "2422:62:7"
														},
														{
															"nativeSrc": "2493:26:7",
															"nodeType": "YulAssignment",
															"src": "2493:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2505:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2505:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2516:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2516:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2501:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2501:3:7"
																},
																"nativeSrc": "2501:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2501:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2493:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2493:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2169:356:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2320:9:7",
														"nodeType": "YulTypedName",
														"src": "2320:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2334:4:7",
														"nodeType": "YulTypedName",
														"src": "2334:4:7",
														"type": ""
													}
												],
												"src": "2169:356:7"
											},
											{
												"body": {
													"nativeSrc": "2578:77:7",
													"nodeType": "YulBlock",
													"src": "2578:77:7",
													"statements": [
														{
															"nativeSrc": "2588:16:7",
															"nodeType": "YulAssignment",
															"src": "2588:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2599:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2599:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2602:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2602:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2595:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2595:3:7"
																},
																"nativeSrc": "2595:9:7",
																"nodeType": "YulFunctionCall",
																"src": "2595:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2588:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2588:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2627:22:7",
																"nodeType": "YulBlock",
																"src": "2627:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2629:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2629:16:7"
																			},
																			"nativeSrc": "2629:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2629:18:7"
																		},
																		"nativeSrc": "2629:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2629:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2619:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2619:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2622:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2622:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2616:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2616:2:7"
																},
																"nativeSrc": "2616:10:7",
																"nodeType": "YulFunctionCall",
																"src": "2616:10:7"
															},
															"nativeSrc": "2613:36:7",
															"nodeType": "YulIf",
															"src": "2613:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2530:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2561:1:7",
														"nodeType": "YulTypedName",
														"src": "2561:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2564:1:7",
														"nodeType": "YulTypedName",
														"src": "2564:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2570:3:7",
														"nodeType": "YulTypedName",
														"src": "2570:3:7",
														"type": ""
													}
												],
												"src": "2530:125:7"
											},
											{
												"body": {
													"nativeSrc": "2712:116:7",
													"nodeType": "YulBlock",
													"src": "2712:116:7",
													"statements": [
														{
															"nativeSrc": "2722:20:7",
															"nodeType": "YulAssignment",
															"src": "2722:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2737:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2737:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2740:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2740:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2733:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2733:3:7"
																},
																"nativeSrc": "2733:9:7",
																"nodeType": "YulFunctionCall",
																"src": "2733:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2722:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2722:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2800:22:7",
																"nodeType": "YulBlock",
																"src": "2800:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2802:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2802:16:7"
																			},
																			"nativeSrc": "2802:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2802:18:7"
																		},
																		"nativeSrc": "2802:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2802:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2771:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "2771:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2764:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2764:6:7"
																				},
																				"nativeSrc": "2764:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2764:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2778:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "2778:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2785:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "2785:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2794:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "2794:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2781:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2781:3:7"
																						},
																						"nativeSrc": "2781:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2781:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2775:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "2775:2:7"
																				},
																				"nativeSrc": "2775:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2775:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2761:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2761:2:7"
																		},
																		"nativeSrc": "2761:37:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2761:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2754:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2754:6:7"
																},
																"nativeSrc": "2754:45:7",
																"nodeType": "YulFunctionCall",
																"src": "2754:45:7"
															},
															"nativeSrc": "2751:71:7",
															"nodeType": "YulIf",
															"src": "2751:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2660:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2691:1:7",
														"nodeType": "YulTypedName",
														"src": "2691:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2694:1:7",
														"nodeType": "YulTypedName",
														"src": "2694:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2700:7:7",
														"nodeType": "YulTypedName",
														"src": "2700:7:7",
														"type": ""
													}
												],
												"src": "2660:168:7"
											},
											{
												"body": {
													"nativeSrc": "2879:171:7",
													"nodeType": "YulBlock",
													"src": "2879:171:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2910:111:7",
																"nodeType": "YulBlock",
																"src": "2910:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2931:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2931:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2938:3:7",
																							"nodeType": "YulLiteral",
																							"src": "2938:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2943:10:7",
																							"nodeType": "YulLiteral",
																							"src": "2943:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2934:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2934:3:7"
																					},
																					"nativeSrc": "2934:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2934:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2924:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:7"
																			},
																			"nativeSrc": "2924:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2924:31:7"
																		},
																		"nativeSrc": "2924:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2924:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2975:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2975:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2978:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2978:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2968:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2968:6:7"
																			},
																			"nativeSrc": "2968:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2968:15:7"
																		},
																		"nativeSrc": "2968:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2968:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3003:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3003:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3006:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3006:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2996:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2996:6:7"
																			},
																			"nativeSrc": "2996:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2996:15:7"
																		},
																		"nativeSrc": "2996:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2996:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2899:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2899:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:7"
																},
																"nativeSrc": "2892:9:7",
																"nodeType": "YulFunctionCall",
																"src": "2892:9:7"
															},
															"nativeSrc": "2889:132:7",
															"nodeType": "YulIf",
															"src": "2889:132:7"
														},
														{
															"nativeSrc": "3030:14:7",
															"nodeType": "YulAssignment",
															"src": "3030:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3039:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3039:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3042:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3042:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3035:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3035:3:7"
																},
																"nativeSrc": "3035:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3035:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3030:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "3030:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2833:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2864:1:7",
														"nodeType": "YulTypedName",
														"src": "2864:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2867:1:7",
														"nodeType": "YulTypedName",
														"src": "2867:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2873:1:7",
														"nodeType": "YulTypedName",
														"src": "2873:1:7",
														"type": ""
													}
												],
												"src": "2833:217:7"
											},
											{
												"body": {
													"nativeSrc": "3229:173:7",
													"nodeType": "YulBlock",
													"src": "3229:173:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3246:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3246:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3257:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3257:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3239:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3239:6:7"
																},
																"nativeSrc": "3239:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3239:21:7"
															},
															"nativeSrc": "3239:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3239:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3280:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3291:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3291:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3276:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3276:3:7"
																		},
																		"nativeSrc": "3276:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3276:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3296:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3296:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3269:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3269:6:7"
																},
																"nativeSrc": "3269:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3269:30:7"
															},
															"nativeSrc": "3269:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3269:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3319:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3319:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3330:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3330:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3315:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3315:3:7"
																		},
																		"nativeSrc": "3315:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3315:18:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420636f6c6c61746572616c",
																		"kind": "string",
																		"nativeSrc": "3335:25:7",
																		"nodeType": "YulLiteral",
																		"src": "3335:25:7",
																		"type": "",
																		"value": "Insufficient collateral"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3308:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3308:6:7"
																},
																"nativeSrc": "3308:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3308:53:7"
															},
															"nativeSrc": "3308:53:7",
															"nodeType": "YulExpressionStatement",
															"src": "3308:53:7"
														},
														{
															"nativeSrc": "3370:26:7",
															"nodeType": "YulAssignment",
															"src": "3370:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3382:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3382:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3393:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3393:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3378:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3378:3:7"
																},
																"nativeSrc": "3378:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3378:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3370:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3370:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3055:347:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3206:9:7",
														"nodeType": "YulTypedName",
														"src": "3206:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3220:4:7",
														"nodeType": "YulTypedName",
														"src": "3220:4:7",
														"type": ""
													}
												],
												"src": "3055:347:7"
											},
											{
												"body": {
													"nativeSrc": "3536:145:7",
													"nodeType": "YulBlock",
													"src": "3536:145:7",
													"statements": [
														{
															"nativeSrc": "3546:26:7",
															"nodeType": "YulAssignment",
															"src": "3546:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3558:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3558:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3569:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3569:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3554:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3554:3:7"
																},
																"nativeSrc": "3554:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3554:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3546:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3546:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3588:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3588:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3603:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3603:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3619:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3619:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3624:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3624:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3615:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3615:3:7"
																						},
																						"nativeSrc": "3615:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3615:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3628:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3628:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3611:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3611:3:7"
																				},
																				"nativeSrc": "3611:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3611:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3599:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3599:3:7"
																		},
																		"nativeSrc": "3599:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3599:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3581:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3581:6:7"
																},
																"nativeSrc": "3581:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3581:51:7"
															},
															"nativeSrc": "3581:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3581:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3652:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3652:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3663:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3663:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3648:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3648:3:7"
																		},
																		"nativeSrc": "3648:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3648:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3668:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3668:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3641:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3641:6:7"
																},
																"nativeSrc": "3641:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3641:34:7"
															},
															"nativeSrc": "3641:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3641:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3407:274:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3497:9:7",
														"nodeType": "YulTypedName",
														"src": "3497:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3508:6:7",
														"nodeType": "YulTypedName",
														"src": "3508:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3516:6:7",
														"nodeType": "YulTypedName",
														"src": "3516:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3527:4:7",
														"nodeType": "YulTypedName",
														"src": "3527:4:7",
														"type": ""
													}
												],
												"src": "3407:274:7"
											},
											{
												"body": {
													"nativeSrc": "3825:145:7",
													"nodeType": "YulBlock",
													"src": "3825:145:7",
													"statements": [
														{
															"nativeSrc": "3835:26:7",
															"nodeType": "YulAssignment",
															"src": "3835:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3847:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3847:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3858:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3858:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3843:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3843:3:7"
																},
																"nativeSrc": "3843:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3843:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3835:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3835:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3877:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3877:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3892:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3892:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3908:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3908:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3913:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3913:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3904:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3904:3:7"
																						},
																						"nativeSrc": "3904:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3904:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3917:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3917:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3900:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3900:3:7"
																				},
																				"nativeSrc": "3900:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3900:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3888:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3888:3:7"
																		},
																		"nativeSrc": "3888:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3888:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3870:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3870:6:7"
																},
																"nativeSrc": "3870:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3870:51:7"
															},
															"nativeSrc": "3870:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3870:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3941:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3941:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3952:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3952:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3937:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3937:3:7"
																		},
																		"nativeSrc": "3937:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3937:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3957:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3957:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3930:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3930:6:7"
																},
																"nativeSrc": "3930:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3930:34:7"
															},
															"nativeSrc": "3930:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3930:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_100_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3686:284:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3786:9:7",
														"nodeType": "YulTypedName",
														"src": "3786:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3797:6:7",
														"nodeType": "YulTypedName",
														"src": "3797:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3805:6:7",
														"nodeType": "YulTypedName",
														"src": "3805:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3816:4:7",
														"nodeType": "YulTypedName",
														"src": "3816:4:7",
														"type": ""
													}
												],
												"src": "3686:284:7"
											},
											{
												"body": {
													"nativeSrc": "4086:76:7",
													"nodeType": "YulBlock",
													"src": "4086:76:7",
													"statements": [
														{
															"nativeSrc": "4096:26:7",
															"nodeType": "YulAssignment",
															"src": "4096:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4108:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4108:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4119:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4119:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4104:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4104:3:7"
																},
																"nativeSrc": "4104:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4104:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4096:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4096:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4138:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4138:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4149:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4149:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4131:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:7"
																},
																"nativeSrc": "4131:25:7",
																"nodeType": "YulFunctionCall",
																"src": "4131:25:7"
															},
															"nativeSrc": "4131:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "4131:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_100_by_1__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3975:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4055:9:7",
														"nodeType": "YulTypedName",
														"src": "4055:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4066:6:7",
														"nodeType": "YulTypedName",
														"src": "4066:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4077:4:7",
														"nodeType": "YulTypedName",
														"src": "4077:4:7",
														"type": ""
													}
												],
												"src": "3975:187:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_MockToken_$1041__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_b33a9e1bde44488f3d2083932c9dddd287f7425247540a395f797d5c0e9224c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"No outstanding debt\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Insufficient collateral\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_rational_100_by_1__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_rational_100_by_1__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610085575f3560e01c8063b2016bd411610058578063b2016bd41461011a578063bad4a01f1461012c578063c5ebeaec1461013f578063de5f72fd14610152575f80fd5b806329bc969d14610089578063371fd8e6146100bb5780639b6c56ec146100d0578063aaaca558146100ef575b5f80fd5b6100a86100973660046105c2565b60026020525f908152604090205481565b6040519081526020015b60405180910390f35b6100ce6100c93660046105ef565b61015a565b005b6100a86100de3660046105c2565b60036020525f908152604090205481565b600154610102906001600160a01b031681565b6040516001600160a01b0390911681526020016100b2565b5f54610102906001600160a01b031681565b6100ce61013a3660046105ef565b610285565b6100ce61014d3660046105ef565b6103a1565b6100ce61052c565b335f908152600360205260409020546101b05760405162461bcd60e51b8152602060048201526013602482015272139bc81bdd5d1cdd185b991a5b99c81919589d606a1b60448201526064015b60405180910390fd5b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af1158015610204573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102289190610606565b50335f9081526003602052604081208054839290610247908490610639565b909155505060405181815233907f0516911bcc3a0a7412a44601057c0a0a1ec628bde049a84284bc428866534488906020015b60405180910390a250565b5f81116102d45760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016101a7565b5f546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af1158015610327573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061034b9190610606565b50335f908152600260205260408120805483929061036a908490610652565b909155505060405181815233907fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a13584801429060200161027a565b5f81116103f05760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016101a7565b60646103fd826096610665565b610407919061067c565b335f9081526002602052604090205410156104645760405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e7420636f6c6c61746572616c00000000000000000060448201526064016101a7565b335f9081526003602052604081208054839290610482908490610652565b909155505060015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303815f875af11580156104d5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104f99190610606565b5060405181815233907fac59582e5396aca512fa873a2047e7f4c80f8f55d4a06cb34a78a0187f62719f9060200161027a565b5f546040516340c10f1960e01b8152336004820152606460248201526001600160a01b03909116906340c10f19906044015f604051808303815f87803b158015610574575f80fd5b505af1158015610586573d5f803e3d5ffd5b5050604051606481523392507fc471df7d13ab46c73ec6eb2da0f35f84077f20d50243ba09a714b82cffc54de9915060200160405180910390a2565b5f602082840312156105d2575f80fd5b81356001600160a01b03811681146105e8575f80fd5b9392505050565b5f602082840312156105ff575f80fd5b5035919050565b5f60208284031215610616575f80fd5b815180151581146105e8575f80fd5b634e487b7160e01b5f52601160045260245ffd5b8181038181111561064c5761064c610625565b92915050565b8082018082111561064c5761064c610625565b808202811582820484141761064c5761064c610625565b5f8261069657634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220a9d374a0d974ac29450c03bda40840ea1777217c8871e6d8cdb66cb26def40b364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB2016BD4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB2016BD4 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xBAD4A01F EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xC5EBEAEC EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xDE5F72FD EQ PUSH2 0x152 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29BC969D EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x371FD8E6 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x9B6C56EC EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xAAACA558 EQ PUSH2 0xEF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH2 0xC9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EF JUMP JUMPDEST PUSH2 0x15A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA8 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x102 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB2 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x102 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0x5EF JUMP JUMPDEST PUSH2 0x285 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x14D CALLDATASIZE PUSH1 0x4 PUSH2 0x5EF JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x52C JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BC81BDD5D1CDD185B991A5B99C81919589D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x204 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x247 SWAP1 DUP5 SWAP1 PUSH2 0x639 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x516911BCC3A0A7412A44601057C0A0A1EC628BDE049A84284BC428866534488 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x2D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x327 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x36A SWAP1 DUP5 SWAP1 PUSH2 0x652 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xD7243F6F8212D5188FD054141CF6EA89CFC0D91FACB8C3AFE2F88A1358480142 SWAP1 PUSH1 0x20 ADD PUSH2 0x27A JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x3FD DUP3 PUSH1 0x96 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x67C JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0x464 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A7 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x482 SWAP1 DUP5 SWAP1 PUSH2 0x652 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x606 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xAC59582E5396ACA512FA873A2047E7F4C80F8F55D4A06CB34A78A0187F62719F SWAP1 PUSH1 0x20 ADD PUSH2 0x27A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x64 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x574 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x586 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x64 DUP2 MSTORE CALLER SWAP3 POP PUSH32 0xC471DF7D13AB46C73EC6EB2DA0F35F84077F20D50243BA09A714B82CFFC54DE9 SWAP2 POP PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x64C JUMPI PUSH2 0x64C PUSH2 0x625 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x64C JUMPI PUSH2 0x64C PUSH2 0x625 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x64C JUMPI PUSH2 0x64C PUSH2 0x625 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x696 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xD3 PUSH21 0xA0D974AC29450C03BDA40840EA1777217C8871E6D8 0xCD 0xB6 PUSH13 0xB26DEF40B364736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "84:1942:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;228:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;451:25:7;;;439:2;424:18;228:53:5;;;;;;;;1564:262;;;;;;:::i;:::-;;:::i;:::-;;287:39;;;;;;:::i;:::-;;;;;;;;;;;;;;173:29;;;;;-1:-1:-1;;;;;173:29:5;;;;;;-1:-1:-1;;;;;854:32:7;;;836:51;;824:2;809:18;173:29:5;672:221:7;115:32:5;;;;;-1:-1:-1;;;;;115:32:5;;;834:307;;;;;;:::i;:::-;;:::i;1167:371::-;;;;;;:::i;:::-;;:::i;1901:123::-;;;:::i;1564:262::-;1628:10;1642:1;1623:16;;;:4;:16;;;;;;1615:52;;;;-1:-1:-1;;;1615:52:5;;1100:2:7;1615:52:5;;;1082:21:7;1139:2;1119:18;;;1112:30;-1:-1:-1;;;1158:18:7;;;1151:49;1217:18;;1615:52:5;;;;;;;;;1677:12;;:61;;-1:-1:-1;;;1677:61:5;;1703:10;1677:61;;;1448:51:7;1723:4:5;1515:18:7;;;1508:60;1584:18;;;1577:34;;;-1:-1:-1;;;;;1677:12:5;;;;:25;;1421:18:7;;1677:61:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1754:10:5;1749:16;;;;:4;:16;;;;;:27;;1769:7;;1749:16;:27;;1769:7;;1749:27;:::i;:::-;;;;-1:-1:-1;;1792:27:5;;451:25:7;;;1799:10:5;;1792:27;;439:2:7;424:18;1792:27:5;;;;;;;;1564:262;:::o;834:307::-;915:1;905:7;:11;897:56;;;;-1:-1:-1;;;897:56:5;;2371:2:7;897:56:5;;;2353:21:7;;;2390:18;;;2383:30;2449:34;2429:18;;;2422:62;2501:18;;897:56:5;2169:356:7;897:56:5;963:15;;:64;;-1:-1:-1;;;963:64:5;;992:10;963:64;;;1448:51:7;1012:4:5;1515:18:7;;;1508:60;1584:18;;;1577:34;;;-1:-1:-1;;;;;963:15:5;;;;:28;;1421:18:7;;963:64:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1056:10:5;1037:30;;;;:18;:30;;;;;:41;;1071:7;;1037:30;:41;;1071:7;;1037:41;:::i;:::-;;;;-1:-1:-1;;1094:40:5;;451:25:7;;;1114:10:5;;1094:40;;439:2:7;424:18;1094:40:5;305:177:7;1167:371:5;1237:1;1227:7;:11;1219:56;;;;-1:-1:-1;;;1219:56:5;;2371:2:7;1219:56:5;;;2353:21:7;;;2390:18;;;2383:30;2449:34;2429:18;;;2422:62;2501:18;;1219:56:5;2169:356:7;1219:56:5;1343:3;1327:13;:7;1337:3;1327:13;:::i;:::-;:19;;;;:::i;:::-;1312:10;1293:30;;;;:18;:30;;;;;;:53;;1285:89;;;;-1:-1:-1;;;1285:89:5;;3257:2:7;1285:89:5;;;3239:21:7;3296:2;3276:18;;;3269:30;3335:25;3315:18;;;3308:53;3378:18;;1285:89:5;3055:347:7;1285:89:5;1411:10;1406:16;;;;:4;:16;;;;;:27;;1426:7;;1406:16;:27;;1426:7;;1406:27;:::i;:::-;;;;-1:-1:-1;;1444:12:5;;:42;;-1:-1:-1;;;1444:42:5;;1466:10;1444:42;;;3581:51:7;3648:18;;;3641:34;;;-1:-1:-1;;;;;1444:12:5;;;;:21;;3554:18:7;;1444:42:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1502:29:5;;451:25:7;;;1511:10:5;;1502:29;;439:2:7;424:18;1502:29:5;305:177:7;1901:123:5;1938:15;;:37;;-1:-1:-1;;;1938:37:5;;1959:10;1938:37;;;3581:51:7;1971:3:5;3648:18:7;;;3641:34;-1:-1:-1;;;;;1938:15:5;;;;:20;;3554:18:7;;1938:37:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1990:27:5;;2013:3;451:25:7;;2001:10:5;;-1:-1:-1;1990:27:5;;-1:-1:-1;439:2:7;424:18;1990:27:5;;;;;;;1901:123::o;14:286:7:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:7;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:7:o;487:180::-;546:6;599:2;587:9;578:7;574:23;570:32;567:52;;;615:1;612;605:12;567:52;-1:-1:-1;638:23:7;;487:180;-1:-1:-1;487:180:7:o;1622:277::-;1689:6;1742:2;1730:9;1721:7;1717:23;1713:32;1710:52;;;1758:1;1755;1748:12;1710:52;1790:9;1784:16;1843:5;1836:13;1829:21;1822:5;1819:32;1809:60;;1865:1;1862;1855:12;1904:127;1965:10;1960:3;1956:20;1953:1;1946:31;1996:4;1993:1;1986:15;2020:4;2017:1;2010:15;2036:128;2103:9;;;2124:11;;;2121:37;;;2138:18;;:::i;:::-;2036:128;;;;:::o;2530:125::-;2595:9;;;2616:10;;;2613:36;;;2629:18;;:::i;2660:168::-;2733:9;;;2764;;2781:15;;;2775:22;;2761:37;2751:71;;2802:18;;:::i;2833:217::-;2873:1;2899;2889:132;;2943:10;2938:3;2934:20;2931:1;2924:31;2978:4;2975:1;2968:15;3006:4;3003:1;2996:15;2889:132;-1:-1:-1;3035:9:7;;2833:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "349000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"borrow(uint256)": "infinite",
								"collateralBalances(address)": "2471",
								"collateralToken()": "2335",
								"debt(address)": "2515",
								"depositCollateral(uint256)": "infinite",
								"faucet()": "infinite",
								"lendingToken()": "2403",
								"repay(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 84,
									"end": 2026,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 84,
									"end": 2026,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 84,
									"end": 2026,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 577,
									"end": 799,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 577,
									"end": 799,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 577,
									"end": 799,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 577,
									"end": 799,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 577,
									"end": 799,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 577,
									"end": 799,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 577,
									"end": 799,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 577,
									"end": 799,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 669,
									"end": 684,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 669,
									"end": 703,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 669,
									"end": 703,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 669,
									"end": 703,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 669,
									"end": 703,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 669,
									"end": 703,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 669,
									"end": 703,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 669,
									"end": 703,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 669,
									"end": 703,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 669,
									"end": 703,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 669,
									"end": 703,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 669,
									"end": 703,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 669,
									"end": 703,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 713,
									"end": 741,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 713,
									"end": 741,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 713,
									"end": 741,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 713,
									"end": 741,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 713,
									"end": 741,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 713,
									"end": 741,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 713,
									"end": 741,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 713,
									"end": 741,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 713,
									"end": 741,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 713,
									"end": 741,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 713,
									"end": 741,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 713,
									"end": 741,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 713,
									"end": 741,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 751,
									"end": 792,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40C10F19"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 751,
									"end": 792,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 777,
									"end": 781,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 792,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 798,
									"end": 849,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 865,
									"end": 883,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 865,
									"end": 883,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 865,
									"end": 883,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 858,
									"end": 892,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 858,
									"end": 892,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 858,
									"end": 892,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 768,
									"name": "PUSH",
									"source": 5,
									"value": "40C10F19"
								},
								{
									"begin": 751,
									"end": 768,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 771,
									"end": 789,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 771,
									"end": 789,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 751,
									"end": 792,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 792,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 751,
									"end": 792,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 792,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "EXTCODESIZE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 751,
									"end": 792,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 792,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 751,
									"end": 792,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "GAS",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "CALL",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 751,
									"end": 792,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 792,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "RETURNDATACOPY",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 792,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 751,
									"end": 792,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 751,
									"end": 792,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 577,
									"end": 799,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 84,
									"end": 2026,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 84,
									"end": 2026,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 202,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 14,
									"end": 202,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 104,
									"end": 117,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 104,
									"end": 117,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 146,
									"end": 177,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 177,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 136,
									"end": 178,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 136,
									"end": 178,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 126,
									"end": 196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 126,
									"end": 196,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 192,
									"end": 193,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 189,
									"end": 190,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 182,
									"end": 194,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 126,
									"end": 196,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 126,
									"end": 196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14,
									"end": 202,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14,
									"end": 202,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14,
									"end": 202,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 207,
									"end": 619,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 207,
									"end": 619,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 331,
									"end": 337,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 345,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 347,
									"end": 353,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 402,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 388,
									"end": 397,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 379,
									"end": 386,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 375,
									"end": 398,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 371,
									"end": 403,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 368,
									"end": 420,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 368,
									"end": 420,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 368,
									"end": 420,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 416,
									"end": 417,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 414,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 406,
									"end": 418,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 368,
									"end": 420,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 368,
									"end": 420,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 439,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 480,
									"end": 489,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 439,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 439,
									"end": 490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 439,
									"end": 490,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 439,
									"end": 490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 429,
									"end": 490,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 429,
									"end": 490,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 509,
									"end": 569,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 565,
									"end": 567,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 554,
									"end": 563,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 550,
									"end": 568,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 509,
									"end": 569,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 509,
									"end": 569,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 509,
									"end": 569,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 509,
									"end": 569,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 499,
									"end": 569,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 499,
									"end": 569,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 609,
									"end": 611,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 598,
									"end": 607,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 594,
									"end": 612,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 588,
									"end": 613,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 578,
									"end": 613,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 578,
									"end": 613,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 207,
									"end": 619,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 207,
									"end": 619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 207,
									"end": 619,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 207,
									"end": 619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 207,
									"end": 619,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 207,
									"end": 619,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 624,
									"end": 898,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 624,
									"end": 898,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 84,
									"end": 2026,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 84,
									"end": 2026,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 84,
									"end": 2026,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 84,
									"end": 2026,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 2026,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 84,
									"end": 2026,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 2026,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a9d374a0d974ac29450c03bda40840ea1777217c8871e6d8cdb66cb26def40b364736f6c634300081a0033",
									".code": [
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "B2016BD4"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "B2016BD4"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "BAD4A01F"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "C5EBEAEC"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "DE5F72FD"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "29BC969D"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "371FD8E6"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "9B6C56EC"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "AAACA558"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 84,
											"end": 2026,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 228,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 228,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 228,
											"end": 281,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 228,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 228,
											"end": 281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 228,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 228,
											"end": 281,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 281,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 228,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 281,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 451,
											"end": 476,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 228,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 228,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 281,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 228,
											"end": 281,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1564,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1564,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 326,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 287,
											"end": 326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 287,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 287,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 287,
											"end": 326,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 287,
											"end": 326,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 287,
											"end": 326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 326,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 287,
											"end": 326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 287,
											"end": 326,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 287,
											"end": 326,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 287,
											"end": 326,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 287,
											"end": 326,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 287,
											"end": 326,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 287,
											"end": 326,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 287,
											"end": 326,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 287,
											"end": 326,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 287,
											"end": 326,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 287,
											"end": 326,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 287,
											"end": 326,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 173,
											"end": 202,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 173,
											"end": 202,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 173,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 173,
											"end": 202,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 173,
											"end": 202,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 173,
											"end": 202,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 173,
											"end": 202,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 173,
											"end": 202,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 173,
											"end": 202,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 854,
											"end": 886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 854,
											"end": 886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 854,
											"end": 886,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 824,
											"end": 826,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 809,
											"end": 827,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 173,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 672,
											"end": 893,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 115,
											"end": 147,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 115,
											"end": 147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 147,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 115,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 115,
											"end": 147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 115,
											"end": 147,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 115,
											"end": 147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 115,
											"end": 147,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 834,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 834,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 834,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 834,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 834,
											"end": 1141,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 834,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 834,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 834,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 834,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 834,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 834,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 834,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1538,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1167,
											"end": 1538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1167,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1167,
											"end": 1538,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1538,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1538,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1167,
											"end": 1538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1167,
											"end": 1538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 2024,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1901,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1901,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 2024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1638,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1643,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1627,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1103,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1141,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1142,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81BDD5D1CDD185B991A5B99C81919589D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1615,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1703,
											"end": 1713,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1499,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1727,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1568,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1677,
											"end": 1702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1439,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1421,
											"end": 1439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1677,
											"end": 1738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1677,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1764,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1753,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1776,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1776,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1776,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1749,
											"end": 1776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1776,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1749,
											"end": 1776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1776,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1749,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1776,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1792,
											"end": 1819,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1792,
											"end": 1819,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1799,
											"end": 1809,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1799,
											"end": 1809,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1819,
											"name": "PUSH",
											"source": 5,
											"value": "516911BCC3A0A7412A44601057C0A0A1EC628BDE049A84284BC428866534488"
										},
										{
											"begin": 1792,
											"end": 1819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1792,
											"end": 1819,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1792,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1819,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1792,
											"end": 1819,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1819,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1819,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1819,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1819,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1826,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 834,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 834,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 915,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 905,
											"end": 916,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 897,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 897,
											"end": 953,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 897,
											"end": 953,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 897,
											"end": 953,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 897,
											"end": 953,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 897,
											"end": 953,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2371,
											"end": 2373,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 953,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 897,
											"end": 953,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 897,
											"end": 953,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2483,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2484,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2501,
											"end": 2519,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2501,
											"end": 2519,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 897,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2169,
											"end": 2525,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 897,
											"end": 953,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 897,
											"end": 953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 963,
											"end": 978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 978,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1002,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1499,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1012,
											"end": 1016,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1568,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 963,
											"end": 978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 963,
											"end": 978,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 963,
											"end": 978,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 963,
											"end": 978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 963,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 963,
											"end": 991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1439,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1421,
											"end": 1439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 963,
											"end": 1027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 963,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1056,
											"end": 1066,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1078,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1078,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1078,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1037,
											"end": 1078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1078,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1037,
											"end": 1078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1078,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1037,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1078,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1094,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1134,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1114,
											"end": 1124,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1124,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "D7243F6F8212D5188FD054141CF6EA89CFC0D91FACB8C3AFE2F88A1358480142"
										},
										{
											"begin": 1094,
											"end": 1134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 305,
											"end": 482,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1167,
											"end": 1538,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1167,
											"end": 1538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1238,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1234,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1219,
											"end": 1275,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1275,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1219,
											"end": 1275,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1275,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2371,
											"end": 2373,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1219,
											"end": 1275,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2483,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2484,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2501,
											"end": 2519,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2501,
											"end": 2519,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2169,
											"end": 2525,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1275,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1219,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1346,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1327,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1327,
											"end": 1334,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1340,
											"name": "PUSH",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1327,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1327,
											"end": 1340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1327,
											"end": 1340,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1327,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1327,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1327,
											"end": 1346,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1327,
											"end": 1346,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1327,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1327,
											"end": 1346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1327,
											"end": 1346,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1327,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1322,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1323,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1346,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1346,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1285,
											"end": 1374,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1374,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1285,
											"end": 1374,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1285,
											"end": 1374,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1374,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3257,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1374,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1285,
											"end": 1374,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3298,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3299,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3360,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E7420636F6C6C61746572616C000000000000000000"
										},
										{
											"begin": 3315,
											"end": 3333,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3315,
											"end": 3333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3361,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3055,
											"end": 3402,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1285,
											"end": 1374,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1285,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1421,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1433,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1433,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1433,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1433,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1406,
											"end": 1433,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1433,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1433,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1406,
											"end": 1433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1433,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1406,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1433,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1433,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1433,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1444,
											"end": 1456,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1444,
											"end": 1456,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1476,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3632,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3648,
											"end": 3666,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3648,
											"end": 3666,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3648,
											"end": 3666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3675,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3675,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3675,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1444,
											"end": 1456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1456,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1465,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3572,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3554,
											"end": 3572,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1444,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1444,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1502,
											"end": 1531,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1502,
											"end": 1531,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1521,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1511,
											"end": 1521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1502,
											"end": 1531,
											"name": "PUSH",
											"source": 5,
											"value": "AC59582E5396ACA512FA873A2047E7F4C80F8F55D4A06CB34A78A0187F62719F"
										},
										{
											"begin": 1502,
											"end": 1531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 305,
											"end": 482,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 2024,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1953,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1953,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1969,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3632,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1974,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3648,
											"end": 3666,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3648,
											"end": 3666,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3648,
											"end": 3666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3675,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 1953,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1953,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1953,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1953,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "PUSH",
											"source": 5,
											"value": "40C10F19"
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3572,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3554,
											"end": 3572,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1938,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2016,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 451,
											"end": 476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 451,
											"end": 476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2001,
											"end": 2011,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2011,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 5,
											"value": "C471DF7D13AB46C73EC6EB2DA0F35F84077F20D50243BA09A714B82CFFC54DE9"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 2024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 487,
											"end": 667,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 546,
											"end": 552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 601,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 587,
											"end": 596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 578,
											"end": 585,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 574,
											"end": 597,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 570,
											"end": 602,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 567,
											"end": 619,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 567,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 567,
											"end": 619,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 615,
											"end": 616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 605,
											"end": 617,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 567,
											"end": 619,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 567,
											"end": 619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 638,
											"end": 661,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 638,
											"end": 661,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 487,
											"end": 667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 487,
											"end": 667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1899,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1622,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1689,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1739,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1721,
											"end": 1728,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1740,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1745,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1762,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1710,
											"end": 1762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1758,
											"end": 1759,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1762,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1710,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1790,
											"end": 1799,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1836,
											"end": 1849,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1850,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1809,
											"end": 1869,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1855,
											"end": 1867,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1904,
											"end": 2031,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1904,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1965,
											"end": 1975,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 1960,
											"end": 1963,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1996,
											"end": 2000,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1993,
											"end": 1994,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1986,
											"end": 2001,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2024,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2025,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2164,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2036,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2112,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2112,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2112,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2121,
											"end": 2158,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2121,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2121,
											"end": 2158,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2138,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2164,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2164,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2164,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2164,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2655,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2530,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2626,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2626,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2626,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2649,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2613,
											"end": 2649,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2629,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2629,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2828,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2660,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2796,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2796,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2796,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2797,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2797,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2798,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2751,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2802,
											"end": 2820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2833,
											"end": 3050,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2833,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2900,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 2889,
											"end": 3021,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2938,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2934,
											"end": 2954,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2932,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2955,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 2982,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2975,
											"end": 2976,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2968,
											"end": 2983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3010,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3003,
											"end": 3004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3011,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 3021,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 2889,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2833,
											"end": 3050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Loan.sol",
								"contracts/MockToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"borrow(uint256)": "c5ebeaec",
							"collateralBalances(address)": "29bc969d",
							"collateralToken()": "b2016bd4",
							"debt(address)": "9b6c56ec",
							"depositCollateral(uint256)": "bad4a01f",
							"faucet()": "de5f72fd",
							"lendingToken()": "aaaca558",
							"repay(uint256)": "371fd8e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract MockToken\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract MockToken\",\"name\":\"_lendingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Borrowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FaucetUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repaid\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"contract MockToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"debt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lendingToken\",\"outputs\":[{\"internalType\":\"contract MockToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Loan.sol\":\"LendingContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Loan.sol\":{\"keccak256\":\"0x0d677ea0b5ffc0616494d66422c1a8b045361b754d2d31b082168c1fcd731fd4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72d7e2c0e6ab779b7f678e1ff2c30fbe81df82922d6209baeccea9d669bae89c\",\"dweb:/ipfs/QmZcRnDR8GNdkEfpSebojCbJoLneo7ChJb7kXKrHjzEtJQ\"]},\"contracts/MockToken.sol\":{\"keccak256\":\"0x1ca579602f3190581417cbaa10f217d1092cfb9f87258869b6bc8053766a355d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea8b0168f6b866bf36f28b38b8aef2231cdac2d9c74fb5f5dba5513c15b30916\",\"dweb:/ipfs/QmQ7nGE1NkrBmSLMriAeTzXzGSqgSz8ooGzsKM3NCZwGw9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 791,
								"contract": "contracts/Loan.sol:LendingContract",
								"label": "collateralToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(MockToken)1041"
							},
							{
								"astId": 794,
								"contract": "contracts/Loan.sol:LendingContract",
								"label": "lendingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(MockToken)1041"
							},
							{
								"astId": 798,
								"contract": "contracts/Loan.sol:LendingContract",
								"label": "collateralBalances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 802,
								"contract": "contracts/Loan.sol:LendingContract",
								"label": "debt",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(MockToken)1041": {
								"encoding": "inplace",
								"label": "contract MockToken",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MockToken.sol": {
				"MockToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MockToken.sol\":114:431  contract MockToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MockToken.sol\":148:294  constructor(string memory name, string memory symbol, uint256 initialSupply) ERC20(name, symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/MockToken.sol\":231:235  name */\n  dup3\n    /* \"contracts/MockToken.sol\":237:243  symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_7\n    /* \"contracts/MockToken.sol\":231:235  name */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/MockToken.sol\":255:287  _mint(msg.sender, initialSupply) */\n  tag_11\n    /* \"contracts/MockToken.sol\":261:271  msg.sender */\n  caller\n    /* \"contracts/MockToken.sol\":273:286  initialSupply */\n  dup3\n    /* \"contracts/MockToken.sol\":255:260  _mint */\n  shl(0x20, tag_12)\n    /* \"contracts/MockToken.sol\":255:287  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/MockToken.sol\":148:294  constructor(string memory name, string memory symbol, uint256 initialSupply) ERC20(name, symbol) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/MockToken.sol\":114:431  contract MockToken is ERC20 {... */\n  jump(tag_38)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_12:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4152:4203   */\n  mstore\n    /* \"#utility.yul\":4125:4143   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_18\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  tag_19\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_24\n  swap1\n  pop\n  jump\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4661:4693   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4643:4694   */\n  mstore\n    /* \"#utility.yul\":4710:4728   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":4703:4737   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":4753:4771   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":4746:4780   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4616:4634   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_16\n    /* \"#utility.yul\":4441:4786   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_29)\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_30\n  swap2\n    /* \"#utility.yul\":4937:4962   */\n  dup2\n  mstore\n    /* \"#utility.yul\":4925:4927   */\n  0x20\n    /* \"#utility.yul\":4910:4928   */\n  add\n  swap1\n    /* \"#utility.yul\":4791:4968   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_32:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:869   */\ntag_33:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_41:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_43\n  tag_32\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_45\n  tag_32\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_46:\n    /* \"#utility.yul\":782:788   */\n  dup2\n    /* \"#utility.yul\":775:779   */\n  0x20\n    /* \"#utility.yul\":767:773   */\n  dup6\n    /* \"#utility.yul\":763:780   */\n  add\n    /* \"#utility.yul\":756:760   */\n  0x20\n    /* \"#utility.yul\":748:754   */\n  dup4\n    /* \"#utility.yul\":744:761   */\n  add\n    /* \"#utility.yul\":738:789   */\n  mcopy\n    /* \"#utility.yul\":837:838   */\n  0x00\n    /* \"#utility.yul\":809:828   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":805:835   */\n  add\n    /* \"#utility.yul\":798:839   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":813:819   */\n  swap4\n    /* \"#utility.yul\":146:869   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":874:1492   */\ntag_3:\n    /* \"#utility.yul\":982:988   */\n  0x00\n    /* \"#utility.yul\":990:996   */\n  dup1\n    /* \"#utility.yul\":998:1004   */\n  0x00\n    /* \"#utility.yul\":1051:1053   */\n  0x60\n    /* \"#utility.yul\":1039:1048   */\n  dup5\n    /* \"#utility.yul\":1030:1037   */\n  dup7\n    /* \"#utility.yul\":1026:1049   */\n  sub\n    /* \"#utility.yul\":1022:1054   */\n  slt\n    /* \"#utility.yul\":1019:1071   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1067:1068   */\n  0x00\n    /* \"#utility.yul\":1064:1065   */\n  dup1\n    /* \"#utility.yul\":1057:1069   */\n  revert\n    /* \"#utility.yul\":1019:1071   */\ntag_48:\n    /* \"#utility.yul\":1094:1110   */\n  dup4\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1122:1152   */\n  dup2\n  gt\n    /* \"#utility.yul\":1119:1169   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1165:1166   */\n  0x00\n    /* \"#utility.yul\":1162:1163   */\n  dup1\n    /* \"#utility.yul\":1155:1167   */\n  revert\n    /* \"#utility.yul\":1119:1169   */\ntag_49:\n    /* \"#utility.yul\":1188:1249   */\n  tag_50\n    /* \"#utility.yul\":1241:1248   */\n  dup7\n    /* \"#utility.yul\":1232:1238   */\n  dup3\n    /* \"#utility.yul\":1221:1230   */\n  dup8\n    /* \"#utility.yul\":1217:1239   */\n  add\n    /* \"#utility.yul\":1188:1249   */\n  tag_33\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1295:1297   */\n  0x20\n    /* \"#utility.yul\":1280:1298   */\n  dup7\n  add\n    /* \"#utility.yul\":1274:1299   */\n  mload\n    /* \"#utility.yul\":1178:1249   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":1274:1299   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1311:1343   */\n  dup2\n  gt\n    /* \"#utility.yul\":1308:1360   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1356:1357   */\n  0x00\n    /* \"#utility.yul\":1353:1354   */\n  dup1\n    /* \"#utility.yul\":1346:1358   */\n  revert\n    /* \"#utility.yul\":1308:1360   */\ntag_51:\n    /* \"#utility.yul\":1379:1442   */\n  tag_52\n    /* \"#utility.yul\":1434:1441   */\n  dup7\n    /* \"#utility.yul\":1423:1431   */\n  dup3\n    /* \"#utility.yul\":1412:1421   */\n  dup8\n    /* \"#utility.yul\":1408:1432   */\n  add\n    /* \"#utility.yul\":1379:1442   */\n  tag_33\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1369:1442   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":1482:1484   */\n  0x40\n    /* \"#utility.yul\":1471:1480   */\n  dup5\n    /* \"#utility.yul\":1467:1485   */\n  add\n    /* \"#utility.yul\":1461:1486   */\n  mload\n    /* \"#utility.yul\":1451:1486   */\n  swap1\n  pop\n    /* \"#utility.yul\":874:1492   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1497:1877   */\ntag_34:\n    /* \"#utility.yul\":1576:1577   */\n  0x01\n    /* \"#utility.yul\":1572:1584   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1619:1631   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1640:1701   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1694:1698   */\n  0x7f\n    /* \"#utility.yul\":1686:1692   */\n  dup3\n    /* \"#utility.yul\":1682:1699   */\n  and\n    /* \"#utility.yul\":1672:1699   */\n  swap2\n  pop\n    /* \"#utility.yul\":1640:1701   */\ntag_54:\n    /* \"#utility.yul\":1747:1749   */\n  0x20\n    /* \"#utility.yul\":1739:1745   */\n  dup3\n    /* \"#utility.yul\":1736:1750   */\n  lt\n    /* \"#utility.yul\":1716:1734   */\n  dup2\n    /* \"#utility.yul\":1713:1751   */\n  sub\n    /* \"#utility.yul\":1710:1871   */\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1793:1803   */\n  0x4e487b71\n    /* \"#utility.yul\":1788:1791   */\n  0xe0\n    /* \"#utility.yul\":1784:1804   */\n  shl\n    /* \"#utility.yul\":1781:1782   */\n  0x00\n    /* \"#utility.yul\":1774:1805   */\n  mstore\n    /* \"#utility.yul\":1828:1832   */\n  0x22\n    /* \"#utility.yul\":1825:1826   */\n  0x04\n    /* \"#utility.yul\":1818:1833   */\n  mstore\n    /* \"#utility.yul\":1856:1860   */\n  0x24\n    /* \"#utility.yul\":1853:1854   */\n  0x00\n    /* \"#utility.yul\":1846:1861   */\n  revert\n    /* \"#utility.yul\":1710:1871   */\ntag_55:\n  pop\n    /* \"#utility.yul\":1497:1877   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2008:2526   */\ntag_36:\n    /* \"#utility.yul\":2110:2112   */\n  0x1f\n    /* \"#utility.yul\":2105:2108   */\n  dup3\n    /* \"#utility.yul\":2102:2113   */\n  gt\n    /* \"#utility.yul\":2099:2520   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2146:2151   */\n  dup1\n    /* \"#utility.yul\":2143:2144   */\n  0x00\n    /* \"#utility.yul\":2136:2152   */\n  mstore\n    /* \"#utility.yul\":2190:2194   */\n  0x20\n    /* \"#utility.yul\":2187:2188   */\n  0x00\n    /* \"#utility.yul\":2177:2195   */\n  keccak256\n    /* \"#utility.yul\":2260:2262   */\n  0x1f\n    /* \"#utility.yul\":2248:2258   */\n  dup5\n    /* \"#utility.yul\":2244:2263   */\n  add\n    /* \"#utility.yul\":2241:2242   */\n  0x05\n    /* \"#utility.yul\":2237:2264   */\n  shr\n    /* \"#utility.yul\":2231:2235   */\n  dup2\n    /* \"#utility.yul\":2227:2265   */\n  add\n    /* \"#utility.yul\":2296:2300   */\n  0x20\n    /* \"#utility.yul\":2284:2294   */\n  dup6\n    /* \"#utility.yul\":2281:2301   */\n  lt\n    /* \"#utility.yul\":2278:2325   */\n  iszero\n  tag_59\n  jumpi\n  pop\n    /* \"#utility.yul\":2319:2323   */\n  dup1\n    /* \"#utility.yul\":2278:2325   */\ntag_59:\n    /* \"#utility.yul\":2374:2376   */\n  0x1f\n    /* \"#utility.yul\":2369:2372   */\n  dup5\n    /* \"#utility.yul\":2365:2377   */\n  add\n    /* \"#utility.yul\":2362:2363   */\n  0x05\n    /* \"#utility.yul\":2358:2378   */\n  shr\n    /* \"#utility.yul\":2352:2356   */\n  dup3\n    /* \"#utility.yul\":2348:2379   */\n  add\n    /* \"#utility.yul\":2338:2379   */\n  swap2\n  pop\n    /* \"#utility.yul\":2429:2510   */\ntag_60:\n    /* \"#utility.yul\":2447:2449   */\n  dup2\n    /* \"#utility.yul\":2440:2445   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  lt\n    /* \"#utility.yul\":2429:2510   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2506:2507   */\n  0x00\n    /* \"#utility.yul\":2492:2508   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2473:2474   */\n  0x01\n    /* \"#utility.yul\":2462:2475   */\n  add\n    /* \"#utility.yul\":2429:2510   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2433:2436   */\n  pop\n  pop\n    /* \"#utility.yul\":2099:2520   */\ntag_58:\n    /* \"#utility.yul\":2008:2526   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2702:4001   */\ntag_8:\n    /* \"#utility.yul\":2822:2832   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2844:2874   */\n  dup2\n  gt\n    /* \"#utility.yul\":2841:2897   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2877:2895   */\n  tag_66\n  tag_32\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:3003   */\n  tag_67\n    /* \"#utility.yul\":2996:3002   */\n  dup2\n    /* \"#utility.yul\":2956:2994   */\n  tag_68\n    /* \"#utility.yul\":2988:2992   */\n  dup5\n    /* \"#utility.yul\":2982:2993   */\n  sload\n    /* \"#utility.yul\":2956:2994   */\n  tag_34\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2950:2954   */\n  dup5\n    /* \"#utility.yul\":2906:3003   */\n  tag_36\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":3052:3056   */\n  0x20\n    /* \"#utility.yul\":3083:3085   */\n  0x1f\n    /* \"#utility.yul\":3072:3086   */\n  dup3\n  gt\n    /* \"#utility.yul\":3100:3101   */\n  0x01\n    /* \"#utility.yul\":3095:3744   */\n  dup2\n  eq\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3788:3789   */\n  0x00\n    /* \"#utility.yul\":3805:3811   */\n  dup4\n    /* \"#utility.yul\":3802:3891   */\n  iszero\n  tag_71\n  jumpi\n  pop\n    /* \"#utility.yul\":3857:3876   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3851:3877   */\n  mload\n    /* \"#utility.yul\":3802:3891   */\ntag_71:\n  not(0x00)\n    /* \"#utility.yul\":2659:2660   */\n  0x03\n    /* \"#utility.yul\":2655:2666   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2651:2675   */\n  shr\n    /* \"#utility.yul\":2647:2676   */\n  not\n    /* \"#utility.yul\":2637:2677   */\n  and\n    /* \"#utility.yul\":2683:2684   */\n  0x01\n    /* \"#utility.yul\":2679:2690   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2634:2691   */\n  or\n    /* \"#utility.yul\":3904:3985   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3065:3995   */\n  jump(tag_62)\n    /* \"#utility.yul\":3095:3744   */\ntag_70:\n    /* \"#utility.yul\":1955:1956   */\n  0x00\n    /* \"#utility.yul\":1948:1962   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1992:1996   */\n  0x20\n    /* \"#utility.yul\":1979:1997   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3131:3151   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3249:3471   */\ntag_74:\n    /* \"#utility.yul\":3263:3270   */\n  dup3\n    /* \"#utility.yul\":3260:3261   */\n  dup2\n    /* \"#utility.yul\":3257:3271   */\n  lt\n    /* \"#utility.yul\":3249:3471   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3345:3364   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3339:3365   */\n  mload\n    /* \"#utility.yul\":3324:3366   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3452:3456   */\n  0x20\n    /* \"#utility.yul\":3437:3457   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3405:3406   */\n  0x01\n    /* \"#utility.yul\":3393:3407   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3279:3291   */\n  add\n    /* \"#utility.yul\":3249:3471   */\n  jump(tag_74)\ntag_76:\n    /* \"#utility.yul\":3253:3256   */\n  pop\n    /* \"#utility.yul\":3499:3505   */\n  dup5\n    /* \"#utility.yul\":3490:3497   */\n  dup3\n    /* \"#utility.yul\":3487:3506   */\n  lt\n    /* \"#utility.yul\":3484:3685   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":3560:3579   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3554:3580   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3643:3644   */\n  0x03\n    /* \"#utility.yul\":3639:3653   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3655:3658   */\n  0xf8\n    /* \"#utility.yul\":3635:3659   */\n  and\n    /* \"#utility.yul\":3631:3668   */\n  shr\n    /* \"#utility.yul\":3627:3669   */\n  not\n    /* \"#utility.yul\":3612:3670   */\n  and\n    /* \"#utility.yul\":3597:3671   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3484:3685   */\ntag_77:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3731:3732   */\n  0x01\n    /* \"#utility.yul\":3715:3729   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3711:3733   */\n  add\n    /* \"#utility.yul\":3698:3734   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2702:4001   */\n  jump\t// out\n    /* \"#utility.yul\":4214:4436   */\ntag_23:\n    /* \"#utility.yul\":4279:4288   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4300:4310   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4297:4430   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4352:4362   */\n  0x4e487b71\n    /* \"#utility.yul\":4347:4350   */\n  0xe0\n    /* \"#utility.yul\":4343:4363   */\n  shl\n    /* \"#utility.yul\":4340:4341   */\n  0x00\n    /* \"#utility.yul\":4333:4364   */\n  mstore\n    /* \"#utility.yul\":4387:4391   */\n  0x11\n    /* \"#utility.yul\":4384:4385   */\n  0x04\n    /* \"#utility.yul\":4377:4392   */\n  mstore\n    /* \"#utility.yul\":4415:4419   */\n  0x24\n    /* \"#utility.yul\":4412:4413   */\n  0x00\n    /* \"#utility.yul\":4405:4420   */\n  revert\n    /* \"#utility.yul\":4297:4430   */\ntag_80:\n    /* \"#utility.yul\":4214:4436   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4791:4968   */\ntag_38:\n    /* \"contracts/MockToken.sol\":114:431  contract MockToken is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MockToken.sol\":114:431  contract MockToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_16\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_18\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_16\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"contracts/MockToken.sol\":344:429  function mint(address to, uint256 amount) external {... */\n    tag_8:\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_24\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_14\n      tag_46\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      tag_18\n      tag_49\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_24\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_59\n      jump\t// in\n    tag_60:\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_62\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_61)\n    tag_62:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_63:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_63\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_67\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_64:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_74:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MockToken.sol\":344:429  function mint(address to, uint256 amount) external {... */\n    tag_39:\n        /* \"contracts/MockToken.sol\":405:422  _mint(to, amount) */\n      tag_78\n        /* \"contracts/MockToken.sol\":411:413  to */\n      dup3\n        /* \"contracts/MockToken.sol\":415:421  amount */\n      dup3\n        /* \"contracts/MockToken.sol\":405:410  _mint */\n      tag_79\n        /* \"contracts/MockToken.sol\":405:422  _mint(to, amount) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/MockToken.sol\":344:429  function mint(address to, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_67\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_101\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2923:2955   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2905:2956   */\n      mstore\n        /* \"#utility.yul\":2972:2990   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2965:2999   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3015:3033   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3008:3042   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2878:2896   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3199:3250   */\n      mstore\n        /* \"#utility.yul\":3172:3190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_99\n        /* \"#utility.yul\":3053:3256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3199:3250   */\n      mstore\n        /* \"#utility.yul\":3172:3190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_99\n        /* \"#utility.yul\":3053:3256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3199:3250   */\n      mstore\n        /* \"#utility.yul\":3172:3190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      tag_99\n        /* \"#utility.yul\":3053:3256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3199:3250   */\n      mstore\n        /* \"#utility.yul\":3172:3190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_99\n        /* \"#utility.yul\":3053:3256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3199:3250   */\n      mstore\n        /* \"#utility.yul\":3172:3190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_99\n        /* \"#utility.yul\":3053:3256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_101\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_120\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_125\n      swap1\n      pop\n      jump\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2923:2955   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2905:2956   */\n      mstore\n        /* \"#utility.yul\":2972:2990   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2965:2999   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3015:3033   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3008:3042   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2878:2896   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_99\n        /* \"#utility.yul\":2703:3048   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_129)\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_130\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_17:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_131:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_135:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_20:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_137:\n        /* \"#utility.yul\":783:812   */\n      tag_138\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_131\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_30:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup1\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      dup1\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_142:\n        /* \"#utility.yul\":1479:1508   */\n      tag_143\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_131\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_144\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_131\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2048   */\n    tag_42:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      dup1\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_147:\n        /* \"#utility.yul\":2013:2042   */\n      tag_148\n        /* \"#utility.yul\":2032:2041   */\n      dup3\n        /* \"#utility.yul\":2013:2042   */\n      tag_131\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2003:2042   */\n      swap4\n        /* \"#utility.yul\":1862:2048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2053:2313   */\n    tag_54:\n        /* \"#utility.yul\":2121:2127   */\n      0x00\n        /* \"#utility.yul\":2129:2135   */\n      dup1\n        /* \"#utility.yul\":2182:2184   */\n      0x40\n        /* \"#utility.yul\":2170:2179   */\n      dup4\n        /* \"#utility.yul\":2161:2168   */\n      dup6\n        /* \"#utility.yul\":2157:2180   */\n      sub\n        /* \"#utility.yul\":2153:2185   */\n      slt\n        /* \"#utility.yul\":2150:2202   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2195:2196   */\n      dup1\n        /* \"#utility.yul\":2188:2200   */\n      revert\n        /* \"#utility.yul\":2150:2202   */\n    tag_150:\n        /* \"#utility.yul\":2221:2250   */\n      tag_151\n        /* \"#utility.yul\":2240:2249   */\n      dup4\n        /* \"#utility.yul\":2221:2250   */\n      tag_131\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2211:2250   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2307   */\n      tag_152\n        /* \"#utility.yul\":2303:2305   */\n      0x20\n        /* \"#utility.yul\":2292:2301   */\n      dup5\n        /* \"#utility.yul\":2288:2306   */\n      add\n        /* \"#utility.yul\":2269:2307   */\n      tag_131\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":2259:2307   */\n      swap1\n      pop\n        /* \"#utility.yul\":2053:2313   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2318:2698   */\n    tag_59:\n        /* \"#utility.yul\":2397:2398   */\n      0x01\n        /* \"#utility.yul\":2393:2405   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2440:2452   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2461:2522   */\n      tag_154\n      jumpi\n        /* \"#utility.yul\":2515:2519   */\n      0x7f\n        /* \"#utility.yul\":2507:2513   */\n      dup3\n        /* \"#utility.yul\":2503:2520   */\n      and\n        /* \"#utility.yul\":2493:2520   */\n      swap2\n      pop\n        /* \"#utility.yul\":2461:2522   */\n    tag_154:\n        /* \"#utility.yul\":2568:2570   */\n      0x20\n        /* \"#utility.yul\":2560:2566   */\n      dup3\n        /* \"#utility.yul\":2557:2571   */\n      lt\n        /* \"#utility.yul\":2537:2555   */\n      dup2\n        /* \"#utility.yul\":2534:2572   */\n      sub\n        /* \"#utility.yul\":2531:2692   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":2614:2624   */\n      0x4e487b71\n        /* \"#utility.yul\":2609:2612   */\n      0xe0\n        /* \"#utility.yul\":2605:2625   */\n      shl\n        /* \"#utility.yul\":2602:2603   */\n      0x00\n        /* \"#utility.yul\":2595:2626   */\n      mstore\n        /* \"#utility.yul\":2649:2653   */\n      0x22\n        /* \"#utility.yul\":2646:2647   */\n      0x04\n        /* \"#utility.yul\":2639:2654   */\n      mstore\n        /* \"#utility.yul\":2677:2681   */\n      0x24\n        /* \"#utility.yul\":2674:2675   */\n      0x00\n        /* \"#utility.yul\":2667:2682   */\n      revert\n        /* \"#utility.yul\":2531:2692   */\n    tag_155:\n      pop\n        /* \"#utility.yul\":2318:2698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3261:3483   */\n    tag_124:\n        /* \"#utility.yul\":3326:3335   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3347:3357   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3344:3477   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":3399:3409   */\n      0x4e487b71\n        /* \"#utility.yul\":3394:3397   */\n      0xe0\n        /* \"#utility.yul\":3390:3410   */\n      shl\n        /* \"#utility.yul\":3387:3388   */\n      0x00\n        /* \"#utility.yul\":3380:3411   */\n      mstore\n        /* \"#utility.yul\":3434:3438   */\n      0x11\n        /* \"#utility.yul\":3431:3432   */\n      0x04\n        /* \"#utility.yul\":3424:3439   */\n      mstore\n        /* \"#utility.yul\":3462:3466   */\n      0x24\n        /* \"#utility.yul\":3459:3460   */\n      0x00\n        /* \"#utility.yul\":3452:3467   */\n      revert\n\n    auxdata: 0xa2646970667358221220a9a3242451499d8d4d0f44512d63a13845e213939a03dd28459d6a20fed4717764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1027": {
									"entryPoint": null,
									"id": 1027,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 100,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 161,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4970:7",
										"nodeType": "YulBlock",
										"src": "0:4970:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:7",
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:7",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:7",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:7",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nativeSrc": "66:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nativeSrc": "56:31:7",
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nativeSrc": "56:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:7",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:7",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nativeSrc": "96:15:7",
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nativeSrc": "96:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:7",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:7",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nativeSrc": "120:15:7",
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nativeSrc": "120:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nativeSrc": "210:659:7",
													"nodeType": "YulBlock",
													"src": "210:659:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:7",
																"nodeType": "YulBlock",
																"src": "259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:7"
																			},
																			"nativeSrc": "261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:7"
																		},
																		"nativeSrc": "261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:7",
																						"nodeType": "YulLiteral",
																						"src": "246:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:7"
																				},
																				"nativeSrc": "234:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:7"
																		},
																		"nativeSrc": "230:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:7"
																},
																"nativeSrc": "223:35:7",
																"nodeType": "YulFunctionCall",
																"src": "223:35:7"
															},
															"nativeSrc": "220:55:7",
															"nodeType": "YulIf",
															"src": "220:55:7"
														},
														{
															"nativeSrc": "284:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:7"
																},
																"nativeSrc": "298:13:7",
																"nodeType": "YulFunctionCall",
																"src": "298:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:7",
																	"nodeType": "YulTypedName",
																	"src": "288:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:7",
																"nodeType": "YulBlock",
																"src": "354:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:7"
																			},
																			"nativeSrc": "356:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:7"
																		},
																		"nativeSrc": "356:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:7",
																						"nodeType": "YulLiteral",
																						"src": "342:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:7",
																						"nodeType": "YulLiteral",
																						"src": "346:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:7"
																				},
																				"nativeSrc": "338:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:7",
																				"nodeType": "YulLiteral",
																				"src": "350:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:7"
																		},
																		"nativeSrc": "334:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:7"
																},
																"nativeSrc": "323:30:7",
																"nodeType": "YulFunctionCall",
																"src": "323:30:7"
															},
															"nativeSrc": "320:56:7",
															"nodeType": "YulIf",
															"src": "320:56:7"
														},
														{
															"nativeSrc": "385:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:7",
																		"nodeType": "YulLiteral",
																		"src": "405:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:7"
																},
																"nativeSrc": "399:9:7",
																"nodeType": "YulFunctionCall",
																"src": "399:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:7",
																	"nodeType": "YulTypedName",
																	"src": "389:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:7",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:7",
																										"nodeType": "YulLiteral",
																										"src": "471:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:7"
																								},
																								"nativeSrc": "459:17:7",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:7",
																										"nodeType": "YulLiteral",
																										"src": "482:2:7",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:7"
																								},
																								"nativeSrc": "478:7:7",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:7"
																						},
																						"nativeSrc": "455:31:7",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:7",
																						"nodeType": "YulLiteral",
																						"src": "488:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:7"
																				},
																				"nativeSrc": "451:40:7",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:7",
																						"nodeType": "YulLiteral",
																						"src": "497:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:7"
																				},
																				"nativeSrc": "493:7:7",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:7"
																		},
																		"nativeSrc": "447:54:7",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:7"
																},
																"nativeSrc": "435:67:7",
																"nodeType": "YulFunctionCall",
																"src": "435:67:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:7",
																	"nodeType": "YulTypedName",
																	"src": "421:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:7",
																"nodeType": "YulBlock",
																"src": "577:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:7"
																			},
																			"nativeSrc": "579:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:7"
																		},
																		"nativeSrc": "579:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:7",
																								"nodeType": "YulLiteral",
																								"src": "540:2:7",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:7",
																								"nodeType": "YulLiteral",
																								"src": "544:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:7"
																						},
																						"nativeSrc": "536:10:7",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:7",
																						"nodeType": "YulLiteral",
																						"src": "548:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:7"
																				},
																				"nativeSrc": "532:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:7"
																		},
																		"nativeSrc": "517:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:7"
																		},
																		"nativeSrc": "553:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:7"
																},
																"nativeSrc": "514:62:7",
																"nodeType": "YulFunctionCall",
																"src": "514:62:7"
															},
															"nativeSrc": "511:88:7",
															"nodeType": "YulIf",
															"src": "511:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:7",
																		"nodeType": "YulLiteral",
																		"src": "615:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:7"
																},
																"nativeSrc": "608:22:7",
																"nodeType": "YulFunctionCall",
																"src": "608:22:7"
															},
															"nativeSrc": "608:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:7"
																},
																"nativeSrc": "639:22:7",
																"nodeType": "YulFunctionCall",
																"src": "639:22:7"
															},
															"nativeSrc": "639:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:7"
														},
														{
															"body": {
																"nativeSrc": "713:16:7",
																"nodeType": "YulBlock",
																"src": "713:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:7",
																					"nodeType": "YulLiteral",
																					"src": "722:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:7",
																					"nodeType": "YulLiteral",
																					"src": "725:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:7"
																			},
																			"nativeSrc": "715:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:7"
																		},
																		"nativeSrc": "715:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:7"
																				},
																				"nativeSrc": "680:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:7",
																				"nodeType": "YulLiteral",
																				"src": "701:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:7"
																		},
																		"nativeSrc": "676:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:7"
																},
																"nativeSrc": "673:39:7",
																"nodeType": "YulFunctionCall",
																"src": "673:39:7"
															},
															"nativeSrc": "670:59:7",
															"nodeType": "YulIf",
															"src": "670:59:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "748:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "756:4:7",
																				"nodeType": "YulLiteral",
																				"src": "756:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "744:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "744:3:7"
																		},
																		"nativeSrc": "744:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "744:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "767:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:4:7",
																				"nodeType": "YulLiteral",
																				"src": "775:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:7"
																		},
																		"nativeSrc": "763:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "763:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "782:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "738:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:7"
																},
																"nativeSrc": "738:51:7",
																"nodeType": "YulFunctionCall",
																"src": "738:51:7"
															},
															"nativeSrc": "738:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "738:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "813:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "813:6:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "821:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "821:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "809:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:7"
																				},
																				"nativeSrc": "809:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "809:19:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "830:4:7",
																				"nodeType": "YulLiteral",
																				"src": "830:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "805:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:7"
																		},
																		"nativeSrc": "805:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "805:30:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "837:1:7",
																		"nodeType": "YulLiteral",
																		"src": "837:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "798:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:7"
																},
																"nativeSrc": "798:41:7",
																"nodeType": "YulFunctionCall",
																"src": "798:41:7"
															},
															"nativeSrc": "798:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "798:41:7"
														},
														{
															"nativeSrc": "848:15:7",
															"nodeType": "YulAssignment",
															"src": "848:15:7",
															"value": {
																"name": "memPtr",
																"nativeSrc": "857:6:7",
																"nodeType": "YulIdentifier",
																"src": "857:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "848:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "848:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:723:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:7",
														"nodeType": "YulTypedName",
														"src": "184:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:7",
														"nodeType": "YulTypedName",
														"src": "192:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:7",
														"nodeType": "YulTypedName",
														"src": "200:5:7",
														"type": ""
													}
												],
												"src": "146:723:7"
											},
											{
												"body": {
													"nativeSrc": "1009:483:7",
													"nodeType": "YulBlock",
													"src": "1009:483:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1055:16:7",
																"nodeType": "YulBlock",
																"src": "1055:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1064:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1064:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1067:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1067:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1057:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1057:6:7"
																			},
																			"nativeSrc": "1057:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1057:12:7"
																		},
																		"nativeSrc": "1057:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1057:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1030:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1030:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1039:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1039:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1026:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1026:3:7"
																		},
																		"nativeSrc": "1026:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1026:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1051:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1051:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1022:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1022:3:7"
																},
																"nativeSrc": "1022:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1022:32:7"
															},
															"nativeSrc": "1019:52:7",
															"nodeType": "YulIf",
															"src": "1019:52:7"
														},
														{
															"nativeSrc": "1080:30:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1080:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1100:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1100:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1094:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1094:5:7"
																},
																"nativeSrc": "1094:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1094:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1084:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1084:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1153:16:7",
																"nodeType": "YulBlock",
																"src": "1153:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1162:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1162:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1165:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1165:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1155:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1155:6:7"
																			},
																			"nativeSrc": "1155:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1155:12:7"
																		},
																		"nativeSrc": "1155:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1155:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1125:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1125:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1141:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1141:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1145:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1145:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1137:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1137:3:7"
																				},
																				"nativeSrc": "1137:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1137:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1149:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1149:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1133:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1133:3:7"
																		},
																		"nativeSrc": "1133:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1133:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1122:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1122:2:7"
																},
																"nativeSrc": "1122:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1122:30:7"
															},
															"nativeSrc": "1119:50:7",
															"nodeType": "YulIf",
															"src": "1119:50:7"
														},
														{
															"nativeSrc": "1178:71:7",
															"nodeType": "YulAssignment",
															"src": "1178:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1221:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1221:9:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1232:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1232:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1217:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1217:3:7"
																		},
																		"nativeSrc": "1217:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1217:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1241:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "1241:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1188:28:7",
																	"nodeType": "YulIdentifier",
																	"src": "1188:28:7"
																},
																"nativeSrc": "1188:61:7",
																"nodeType": "YulFunctionCall",
																"src": "1188:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1178:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1178:6:7"
																}
															]
														},
														{
															"nativeSrc": "1258:41:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1258:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1284:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1284:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1295:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1295:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1280:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1280:3:7"
																		},
																		"nativeSrc": "1280:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1280:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1274:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1274:5:7"
																},
																"nativeSrc": "1274:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1274:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1262:8:7",
																	"nodeType": "YulTypedName",
																	"src": "1262:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1344:16:7",
																"nodeType": "YulBlock",
																"src": "1344:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1353:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1353:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1356:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1356:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1346:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1346:6:7"
																			},
																			"nativeSrc": "1346:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1346:12:7"
																		},
																		"nativeSrc": "1346:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1346:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1314:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1314:8:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1332:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1332:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1336:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1336:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1328:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1328:3:7"
																				},
																				"nativeSrc": "1328:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1328:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1340:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1340:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1324:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1324:3:7"
																		},
																		"nativeSrc": "1324:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1324:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1311:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1311:2:7"
																},
																"nativeSrc": "1311:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1311:32:7"
															},
															"nativeSrc": "1308:52:7",
															"nodeType": "YulIf",
															"src": "1308:52:7"
														},
														{
															"nativeSrc": "1369:73:7",
															"nodeType": "YulAssignment",
															"src": "1369:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1412:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1412:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1423:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1423:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1408:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1408:3:7"
																		},
																		"nativeSrc": "1408:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1408:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1434:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "1434:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1379:28:7",
																	"nodeType": "YulIdentifier",
																	"src": "1379:28:7"
																},
																"nativeSrc": "1379:63:7",
																"nodeType": "YulFunctionCall",
																"src": "1379:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1369:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1369:6:7"
																}
															]
														},
														{
															"nativeSrc": "1451:35:7",
															"nodeType": "YulAssignment",
															"src": "1451:35:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1471:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1471:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1482:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1482:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1467:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1467:3:7"
																		},
																		"nativeSrc": "1467:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1467:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1461:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1461:5:7"
																},
																"nativeSrc": "1461:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1461:25:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1451:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "874:618:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "959:9:7",
														"nodeType": "YulTypedName",
														"src": "959:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "970:7:7",
														"nodeType": "YulTypedName",
														"src": "970:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "982:6:7",
														"nodeType": "YulTypedName",
														"src": "982:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "990:6:7",
														"nodeType": "YulTypedName",
														"src": "990:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "998:6:7",
														"nodeType": "YulTypedName",
														"src": "998:6:7",
														"type": ""
													}
												],
												"src": "874:618:7"
											},
											{
												"body": {
													"nativeSrc": "1552:325:7",
													"nodeType": "YulBlock",
													"src": "1552:325:7",
													"statements": [
														{
															"nativeSrc": "1562:22:7",
															"nodeType": "YulAssignment",
															"src": "1562:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1576:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1576:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1579:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1579:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1572:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1572:3:7"
																},
																"nativeSrc": "1572:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1572:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1562:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1562:6:7"
																}
															]
														},
														{
															"nativeSrc": "1593:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1593:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1623:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1623:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1629:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1619:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:7"
																},
																"nativeSrc": "1619:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1619:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1597:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1597:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1670:31:7",
																"nodeType": "YulBlock",
																"src": "1670:31:7",
																"statements": [
																	{
																		"nativeSrc": "1672:27:7",
																		"nodeType": "YulAssignment",
																		"src": "1672:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1686:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1686:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1694:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1694:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1682:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1682:3:7"
																			},
																			"nativeSrc": "1682:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1682:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1672:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1672:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1650:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1650:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1643:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1643:6:7"
																},
																"nativeSrc": "1643:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1643:26:7"
															},
															"nativeSrc": "1640:61:7",
															"nodeType": "YulIf",
															"src": "1640:61:7"
														},
														{
															"body": {
																"nativeSrc": "1760:111:7",
																"nodeType": "YulBlock",
																"src": "1760:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1781:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1781:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1788:3:7",
																							"nodeType": "YulLiteral",
																							"src": "1788:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1793:10:7",
																							"nodeType": "YulLiteral",
																							"src": "1793:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1784:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1784:3:7"
																					},
																					"nativeSrc": "1784:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1784:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1774:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1774:6:7"
																			},
																			"nativeSrc": "1774:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1774:31:7"
																		},
																		"nativeSrc": "1774:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1774:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1825:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1825:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1828:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1828:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1818:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1818:6:7"
																			},
																			"nativeSrc": "1818:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1818:15:7"
																		},
																		"nativeSrc": "1818:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1818:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1853:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1853:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1856:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1856:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1846:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1846:6:7"
																			},
																			"nativeSrc": "1846:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1846:15:7"
																		},
																		"nativeSrc": "1846:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1846:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1716:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1716:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1739:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1739:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1747:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1747:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1736:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1736:2:7"
																		},
																		"nativeSrc": "1736:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1736:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1713:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1713:2:7"
																},
																"nativeSrc": "1713:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1713:38:7"
															},
															"nativeSrc": "1710:161:7",
															"nodeType": "YulIf",
															"src": "1710:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1497:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1532:4:7",
														"nodeType": "YulTypedName",
														"src": "1532:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1541:6:7",
														"nodeType": "YulTypedName",
														"src": "1541:6:7",
														"type": ""
													}
												],
												"src": "1497:380:7"
											},
											{
												"body": {
													"nativeSrc": "1938:65:7",
													"nodeType": "YulBlock",
													"src": "1938:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1955:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1955:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1958:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1958:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1948:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1948:6:7"
																},
																"nativeSrc": "1948:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1948:14:7"
															},
															"nativeSrc": "1948:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "1948:14:7"
														},
														{
															"nativeSrc": "1971:26:7",
															"nodeType": "YulAssignment",
															"src": "1971:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1989:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1989:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1992:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1979:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1979:9:7"
																},
																"nativeSrc": "1979:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1979:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1971:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1971:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1882:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1921:3:7",
														"nodeType": "YulTypedName",
														"src": "1921:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1929:4:7",
														"nodeType": "YulTypedName",
														"src": "1929:4:7",
														"type": ""
													}
												],
												"src": "1882:121:7"
											},
											{
												"body": {
													"nativeSrc": "2089:437:7",
													"nodeType": "YulBlock",
													"src": "2089:437:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2122:398:7",
																"nodeType": "YulBlock",
																"src": "2122:398:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2143:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2143:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2146:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2146:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2136:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2136:6:7"
																			},
																			"nativeSrc": "2136:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2136:16:7"
																		},
																		"nativeSrc": "2136:16:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2136:16:7"
																	},
																	{
																		"nativeSrc": "2165:30:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2165:30:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2187:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2187:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2190:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2190:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2177:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2177:9:7"
																			},
																			"nativeSrc": "2177:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2177:18:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2169:4:7",
																				"nodeType": "YulTypedName",
																				"src": "2169:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2208:57:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2208:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2231:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "2231:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2241:1:7",
																							"nodeType": "YulLiteral",
																							"src": "2241:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2248:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "2248:10:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2260:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2260:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2244:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2244:3:7"
																							},
																							"nativeSrc": "2244:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2244:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2237:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2237:3:7"
																					},
																					"nativeSrc": "2237:27:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2237:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2227:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2227:3:7"
																			},
																			"nativeSrc": "2227:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2227:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2212:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2212:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2302:23:7",
																			"nodeType": "YulBlock",
																			"src": "2302:23:7",
																			"statements": [
																				{
																					"nativeSrc": "2304:19:7",
																					"nodeType": "YulAssignment",
																					"src": "2304:19:7",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2319:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2319:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2304:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "2304:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2284:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "2284:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2296:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2296:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2281:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "2281:2:7"
																			},
																			"nativeSrc": "2281:20:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2281:20:7"
																		},
																		"nativeSrc": "2278:47:7",
																		"nodeType": "YulIf",
																		"src": "2278:47:7"
																	},
																	{
																		"nativeSrc": "2338:41:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2338:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2352:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "2352:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2362:1:7",
																							"nodeType": "YulLiteral",
																							"src": "2362:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2369:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2369:3:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2374:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2374:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2365:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2365:3:7"
																							},
																							"nativeSrc": "2365:12:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2365:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2358:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2358:3:7"
																					},
																					"nativeSrc": "2358:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2358:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2348:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2348:3:7"
																			},
																			"nativeSrc": "2348:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2348:31:7"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2342:2:7",
																				"nodeType": "YulTypedName",
																				"src": "2342:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2392:24:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2392:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2405:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "2405:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2396:5:7",
																				"nodeType": "YulTypedName",
																				"src": "2396:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2490:20:7",
																			"nodeType": "YulBlock",
																			"src": "2490:20:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2499:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2499:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2506:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2506:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2492:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2492:6:7"
																						},
																						"nativeSrc": "2492:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2492:16:7"
																					},
																					"nativeSrc": "2492:16:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "2492:16:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2440:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2440:5:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2447:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "2447:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2437:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "2437:2:7"
																			},
																			"nativeSrc": "2437:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2437:13:7"
																		},
																		"nativeSrc": "2429:81:7",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2451:26:7",
																			"nodeType": "YulBlock",
																			"src": "2451:26:7",
																			"statements": [
																				{
																					"nativeSrc": "2453:22:7",
																					"nodeType": "YulAssignment",
																					"src": "2453:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2466:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2466:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2473:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2473:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2462:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2462:3:7"
																						},
																						"nativeSrc": "2462:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2462:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2453:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "2453:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2433:3:7",
																			"nodeType": "YulBlock",
																			"src": "2433:3:7",
																			"statements": []
																		},
																		"src": "2429:81:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2105:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2105:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2110:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2110:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2102:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2102:2:7"
																},
																"nativeSrc": "2102:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2102:11:7"
															},
															"nativeSrc": "2099:421:7",
															"nodeType": "YulIf",
															"src": "2099:421:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2008:518:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2061:5:7",
														"nodeType": "YulTypedName",
														"src": "2061:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2068:3:7",
														"nodeType": "YulTypedName",
														"src": "2068:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2073:10:7",
														"nodeType": "YulTypedName",
														"src": "2073:10:7",
														"type": ""
													}
												],
												"src": "2008:518:7"
											},
											{
												"body": {
													"nativeSrc": "2616:81:7",
													"nodeType": "YulBlock",
													"src": "2616:81:7",
													"statements": [
														{
															"nativeSrc": "2626:65:7",
															"nodeType": "YulAssignment",
															"src": "2626:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2641:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2641:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2659:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2659:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2662:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2662:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2655:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2655:3:7"
																								},
																								"nativeSrc": "2655:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2655:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2672:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2672:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2668:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2668:3:7"
																								},
																								"nativeSrc": "2668:6:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2668:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2651:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2651:3:7"
																						},
																						"nativeSrc": "2651:24:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2651:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2647:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2647:3:7"
																				},
																				"nativeSrc": "2647:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2647:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2637:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2637:3:7"
																		},
																		"nativeSrc": "2637:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2637:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2683:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2683:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2686:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2686:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2679:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2679:3:7"
																		},
																		"nativeSrc": "2679:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2679:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2634:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2634:2:7"
																},
																"nativeSrc": "2634:57:7",
																"nodeType": "YulFunctionCall",
																"src": "2634:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2626:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2626:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2531:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2593:4:7",
														"nodeType": "YulTypedName",
														"src": "2593:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2599:3:7",
														"nodeType": "YulTypedName",
														"src": "2599:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2607:4:7",
														"nodeType": "YulTypedName",
														"src": "2607:4:7",
														"type": ""
													}
												],
												"src": "2531:166:7"
											},
											{
												"body": {
													"nativeSrc": "2798:1203:7",
													"nodeType": "YulBlock",
													"src": "2798:1203:7",
													"statements": [
														{
															"nativeSrc": "2808:24:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2808:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2828:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2828:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2822:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2822:5:7"
																},
																"nativeSrc": "2822:10:7",
																"nodeType": "YulFunctionCall",
																"src": "2822:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2812:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2812:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2875:22:7",
																"nodeType": "YulBlock",
																"src": "2875:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2877:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2877:16:7"
																			},
																			"nativeSrc": "2877:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2877:18:7"
																		},
																		"nativeSrc": "2877:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2877:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2847:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2847:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2863:2:7",
																						"nodeType": "YulLiteral",
																						"src": "2863:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2867:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2867:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2859:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2859:3:7"
																				},
																				"nativeSrc": "2859:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2859:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2871:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2871:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2855:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2855:3:7"
																		},
																		"nativeSrc": "2855:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2855:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2844:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2844:2:7"
																},
																"nativeSrc": "2844:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2844:30:7"
															},
															"nativeSrc": "2841:56:7",
															"nodeType": "YulIf",
															"src": "2841:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2950:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2950:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2988:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2988:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2982:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2982:5:7"
																				},
																				"nativeSrc": "2982:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2982:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2956:25:7",
																			"nodeType": "YulIdentifier",
																			"src": "2956:25:7"
																		},
																		"nativeSrc": "2956:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2956:38:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2996:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2996:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2906:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2906:43:7"
																},
																"nativeSrc": "2906:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2906:97:7"
															},
															"nativeSrc": "2906:97:7",
															"nodeType": "YulExpressionStatement",
															"src": "2906:97:7"
														},
														{
															"nativeSrc": "3012:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3012:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3029:1:7",
																"nodeType": "YulLiteral",
																"src": "3029:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3016:9:7",
																	"nodeType": "YulTypedName",
																	"src": "3016:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3039:17:7",
															"nodeType": "YulAssignment",
															"src": "3039:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3052:4:7",
																"nodeType": "YulLiteral",
																"src": "3052:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3039:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3039:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3102:642:7",
																		"nodeType": "YulBlock",
																		"src": "3102:642:7",
																		"statements": [
																			{
																				"nativeSrc": "3116:35:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3116:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3135:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "3135:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3147:2:7",
																									"nodeType": "YulLiteral",
																									"src": "3147:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3143:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "3143:3:7"
																							},
																							"nativeSrc": "3143:7:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3143:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3131:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3131:3:7"
																					},
																					"nativeSrc": "3131:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3131:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3120:7:7",
																						"nodeType": "YulTypedName",
																						"src": "3120:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3164:49:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3164:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3208:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3208:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3178:29:7",
																						"nodeType": "YulIdentifier",
																						"src": "3178:29:7"
																					},
																					"nativeSrc": "3178:35:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3178:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3168:6:7",
																						"nodeType": "YulTypedName",
																						"src": "3168:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3226:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3226:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3235:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3235:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3230:1:7",
																						"nodeType": "YulTypedName",
																						"src": "3230:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3306:165:7",
																					"nodeType": "YulBlock",
																					"src": "3306:165:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3331:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "3331:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3349:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "3349:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3354:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "3354:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3345:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "3345:3:7"
																												},
																												"nativeSrc": "3345:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "3345:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3339:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "3339:5:7"
																										},
																										"nativeSrc": "3339:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3339:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3324:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3324:6:7"
																								},
																								"nativeSrc": "3324:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3324:42:7"
																							},
																							"nativeSrc": "3324:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "3324:42:7"
																						},
																						{
																							"nativeSrc": "3383:24:7",
																							"nodeType": "YulAssignment",
																							"src": "3383:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3397:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "3397:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3405:1:7",
																										"nodeType": "YulLiteral",
																										"src": "3405:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3393:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3393:3:7"
																								},
																								"nativeSrc": "3393:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3393:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3383:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3383:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3424:33:7",
																							"nodeType": "YulAssignment",
																							"src": "3424:33:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3441:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "3441:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3452:4:7",
																										"nodeType": "YulLiteral",
																										"src": "3452:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3437:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3437:3:7"
																								},
																								"nativeSrc": "3437:20:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3437:20:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3424:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "3424:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3260:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "3260:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3263:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "3263:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3257:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "3257:2:7"
																					},
																					"nativeSrc": "3257:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3257:14:7"
																				},
																				"nativeSrc": "3249:222:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3272:21:7",
																					"nodeType": "YulBlock",
																					"src": "3272:21:7",
																					"statements": [
																						{
																							"nativeSrc": "3274:17:7",
																							"nodeType": "YulAssignment",
																							"src": "3274:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3283:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "3283:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3286:4:7",
																										"nodeType": "YulLiteral",
																										"src": "3286:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3279:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3279:3:7"
																								},
																								"nativeSrc": "3279:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3279:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3274:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "3274:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3253:3:7",
																					"nodeType": "YulBlock",
																					"src": "3253:3:7",
																					"statements": []
																				},
																				"src": "3249:222:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "3519:166:7",
																					"nodeType": "YulBlock",
																					"src": "3519:166:7",
																					"statements": [
																						{
																							"nativeSrc": "3537:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3537:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3564:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "3564:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3569:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3569:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3560:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3560:3:7"
																										},
																										"nativeSrc": "3560:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3560:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3554:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3554:5:7"
																								},
																								"nativeSrc": "3554:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3554:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3541:9:7",
																									"nodeType": "YulTypedName",
																									"src": "3541:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3604:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "3604:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3616:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3616:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3643:1:7",
																																				"nodeType": "YulLiteral",
																																				"src": "3643:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3646:6:7",
																																				"nodeType": "YulIdentifier",
																																				"src": "3646:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3639:3:7",
																																			"nodeType": "YulIdentifier",
																																			"src": "3639:3:7"
																																		},
																																		"nativeSrc": "3639:14:7",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3639:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3655:3:7",
																																		"nodeType": "YulLiteral",
																																		"src": "3655:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3635:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "3635:3:7"
																																},
																																"nativeSrc": "3635:24:7",
																																"nodeType": "YulFunctionCall",
																																"src": "3635:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3665:1:7",
																																		"nodeType": "YulLiteral",
																																		"src": "3665:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3661:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "3661:3:7"
																																},
																																"nativeSrc": "3661:6:7",
																																"nodeType": "YulFunctionCall",
																																"src": "3661:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3631:3:7",
																															"nodeType": "YulIdentifier",
																															"src": "3631:3:7"
																														},
																														"nativeSrc": "3631:37:7",
																														"nodeType": "YulFunctionCall",
																														"src": "3631:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3627:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "3627:3:7"
																												},
																												"nativeSrc": "3627:42:7",
																												"nodeType": "YulFunctionCall",
																												"src": "3627:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3612:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3612:3:7"
																										},
																										"nativeSrc": "3612:58:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3612:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3597:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3597:6:7"
																								},
																								"nativeSrc": "3597:74:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3597:74:7"
																							},
																							"nativeSrc": "3597:74:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "3597:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3490:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "3490:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3499:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "3499:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3487:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "3487:2:7"
																					},
																					"nativeSrc": "3487:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3487:19:7"
																				},
																				"nativeSrc": "3484:201:7",
																				"nodeType": "YulIf",
																				"src": "3484:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3705:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3705:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3719:1:7",
																											"nodeType": "YulLiteral",
																											"src": "3719:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3722:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "3722:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3715:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "3715:3:7"
																									},
																									"nativeSrc": "3715:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "3715:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3731:1:7",
																									"nodeType": "YulLiteral",
																									"src": "3731:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3711:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "3711:3:7"
																							},
																							"nativeSrc": "3711:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3711:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3698:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3698:6:7"
																					},
																					"nativeSrc": "3698:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3698:36:7"
																				},
																				"nativeSrc": "3698:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3698:36:7"
																			}
																		]
																	},
																	"nativeSrc": "3095:649:7",
																	"nodeType": "YulCase",
																	"src": "3095:649:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3100:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3100:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3761:234:7",
																		"nodeType": "YulBlock",
																		"src": "3761:234:7",
																		"statements": [
																			{
																				"nativeSrc": "3775:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3775:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3788:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3788:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3779:5:7",
																						"nodeType": "YulTypedName",
																						"src": "3779:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3824:67:7",
																					"nodeType": "YulBlock",
																					"src": "3824:67:7",
																					"statements": [
																						{
																							"nativeSrc": "3842:35:7",
																							"nodeType": "YulAssignment",
																							"src": "3842:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3861:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "3861:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3866:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3866:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3857:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3857:3:7"
																										},
																										"nativeSrc": "3857:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3857:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3851:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3851:5:7"
																								},
																								"nativeSrc": "3851:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3851:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3842:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3842:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3805:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3805:6:7"
																				},
																				"nativeSrc": "3802:89:7",
																				"nodeType": "YulIf",
																				"src": "3802:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3911:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3911:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3970:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3970:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3977:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3977:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3917:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "3917:52:7"
																							},
																							"nativeSrc": "3917:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3917:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3904:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3904:6:7"
																					},
																					"nativeSrc": "3904:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3904:81:7"
																				},
																				"nativeSrc": "3904:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3904:81:7"
																			}
																		]
																	},
																	"nativeSrc": "3753:242:7",
																	"nodeType": "YulCase",
																	"src": "3753:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3075:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3075:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3083:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3083:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3072:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3072:2:7"
																},
																"nativeSrc": "3072:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3072:14:7"
															},
															"nativeSrc": "3065:930:7",
															"nodeType": "YulSwitch",
															"src": "3065:930:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2702:1299:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2783:4:7",
														"nodeType": "YulTypedName",
														"src": "2783:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2789:3:7",
														"nodeType": "YulTypedName",
														"src": "2789:3:7",
														"type": ""
													}
												],
												"src": "2702:1299:7"
											},
											{
												"body": {
													"nativeSrc": "4107:102:7",
													"nodeType": "YulBlock",
													"src": "4107:102:7",
													"statements": [
														{
															"nativeSrc": "4117:26:7",
															"nodeType": "YulAssignment",
															"src": "4117:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4129:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4129:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4140:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4140:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4125:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4125:3:7"
																},
																"nativeSrc": "4125:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4125:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4117:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4117:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4159:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4159:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4174:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4174:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4190:3:7",
																								"nodeType": "YulLiteral",
																								"src": "4190:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4195:1:7",
																								"nodeType": "YulLiteral",
																								"src": "4195:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4186:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4186:3:7"
																						},
																						"nativeSrc": "4186:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4186:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4199:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4199:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4182:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4182:3:7"
																				},
																				"nativeSrc": "4182:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4182:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4170:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4170:3:7"
																		},
																		"nativeSrc": "4170:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4170:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4152:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4152:6:7"
																},
																"nativeSrc": "4152:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4152:51:7"
															},
															"nativeSrc": "4152:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4152:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4006:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4076:9:7",
														"nodeType": "YulTypedName",
														"src": "4076:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4087:6:7",
														"nodeType": "YulTypedName",
														"src": "4087:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4098:4:7",
														"nodeType": "YulTypedName",
														"src": "4098:4:7",
														"type": ""
													}
												],
												"src": "4006:203:7"
											},
											{
												"body": {
													"nativeSrc": "4262:174:7",
													"nodeType": "YulBlock",
													"src": "4262:174:7",
													"statements": [
														{
															"nativeSrc": "4272:16:7",
															"nodeType": "YulAssignment",
															"src": "4272:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4283:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4283:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4286:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4286:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4279:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4279:3:7"
																},
																"nativeSrc": "4279:9:7",
																"nodeType": "YulFunctionCall",
																"src": "4279:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4272:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4319:111:7",
																"nodeType": "YulBlock",
																"src": "4319:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4340:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4340:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4347:3:7",
																							"nodeType": "YulLiteral",
																							"src": "4347:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4352:10:7",
																							"nodeType": "YulLiteral",
																							"src": "4352:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4343:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4343:3:7"
																					},
																					"nativeSrc": "4343:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4343:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4333:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4333:6:7"
																			},
																			"nativeSrc": "4333:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4333:31:7"
																		},
																		"nativeSrc": "4333:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4333:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4384:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4384:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4387:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4387:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4377:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4377:6:7"
																			},
																			"nativeSrc": "4377:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4377:15:7"
																		},
																		"nativeSrc": "4377:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4377:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4412:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4412:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4415:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4415:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4405:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4405:6:7"
																			},
																			"nativeSrc": "4405:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4405:15:7"
																		},
																		"nativeSrc": "4405:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4405:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4303:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4303:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4306:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4306:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4300:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4300:2:7"
																},
																"nativeSrc": "4300:10:7",
																"nodeType": "YulFunctionCall",
																"src": "4300:10:7"
															},
															"nativeSrc": "4297:133:7",
															"nodeType": "YulIf",
															"src": "4297:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4214:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4245:1:7",
														"nodeType": "YulTypedName",
														"src": "4245:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4248:1:7",
														"nodeType": "YulTypedName",
														"src": "4248:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4254:3:7",
														"nodeType": "YulTypedName",
														"src": "4254:3:7",
														"type": ""
													}
												],
												"src": "4214:222:7"
											},
											{
												"body": {
													"nativeSrc": "4598:188:7",
													"nodeType": "YulBlock",
													"src": "4598:188:7",
													"statements": [
														{
															"nativeSrc": "4608:26:7",
															"nodeType": "YulAssignment",
															"src": "4608:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4620:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4620:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4631:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4631:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4616:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4616:3:7"
																},
																"nativeSrc": "4616:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4616:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4608:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4608:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4650:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4650:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4665:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4665:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4681:3:7",
																								"nodeType": "YulLiteral",
																								"src": "4681:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4686:1:7",
																								"nodeType": "YulLiteral",
																								"src": "4686:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4677:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4677:3:7"
																						},
																						"nativeSrc": "4677:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4677:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4690:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4690:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4673:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4673:3:7"
																				},
																				"nativeSrc": "4673:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4673:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4661:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4661:3:7"
																		},
																		"nativeSrc": "4661:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4661:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4643:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4643:6:7"
																},
																"nativeSrc": "4643:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4643:51:7"
															},
															"nativeSrc": "4643:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4643:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4714:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4714:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4725:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4725:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4710:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4710:3:7"
																		},
																		"nativeSrc": "4710:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4710:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4730:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4730:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4703:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4703:6:7"
																},
																"nativeSrc": "4703:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4703:34:7"
															},
															"nativeSrc": "4703:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4703:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4757:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4757:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4768:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4768:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4753:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4753:3:7"
																		},
																		"nativeSrc": "4753:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4753:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4773:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4773:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4746:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4746:6:7"
																},
																"nativeSrc": "4746:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4746:34:7"
															},
															"nativeSrc": "4746:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4746:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4441:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4551:9:7",
														"nodeType": "YulTypedName",
														"src": "4551:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4562:6:7",
														"nodeType": "YulTypedName",
														"src": "4562:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4570:6:7",
														"nodeType": "YulTypedName",
														"src": "4570:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4578:6:7",
														"nodeType": "YulTypedName",
														"src": "4578:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4589:4:7",
														"nodeType": "YulTypedName",
														"src": "4589:4:7",
														"type": ""
													}
												],
												"src": "4441:345:7"
											},
											{
												"body": {
													"nativeSrc": "4892:76:7",
													"nodeType": "YulBlock",
													"src": "4892:76:7",
													"statements": [
														{
															"nativeSrc": "4902:26:7",
															"nodeType": "YulAssignment",
															"src": "4902:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4914:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4914:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4910:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4910:3:7"
																},
																"nativeSrc": "4910:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4910:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4902:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4902:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4944:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4944:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4955:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4955:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4937:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4937:6:7"
																},
																"nativeSrc": "4937:25:7",
																"nodeType": "YulFunctionCall",
																"src": "4937:25:7"
															},
															"nativeSrc": "4937:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "4937:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4791:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4861:9:7",
														"nodeType": "YulTypedName",
														"src": "4861:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4872:6:7",
														"nodeType": "YulTypedName",
														"src": "4872:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4883:4:7",
														"nodeType": "YulTypedName",
														"src": "4883:4:7",
														"type": ""
													}
												],
												"src": "4791:177:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610b86380380610b8683398101604081905261002e91610264565b8282600361003c8382610355565b5060046100498282610355565b50505061005c338261006460201b60201c565b505050610434565b6001600160a01b0382166100925760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b61009d5f83836100a1565b5050565b6001600160a01b0383166100cb578060025f8282546100c0919061040f565b9091555061013b9050565b6001600160a01b0383165f908152602081905260409020548181101561011d5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610089565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661015757600280548290039055610175565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516101ba91815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126101ea575f80fd5b81516001600160401b03811115610203576102036101c7565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610231576102316101c7565b604052818152838201602001851015610248575f80fd5b8160208501602083015e5f918101602001919091529392505050565b5f805f60608486031215610276575f80fd5b83516001600160401b0381111561028b575f80fd5b610297868287016101db565b602086015190945090506001600160401b038111156102b4575f80fd5b6102c0868287016101db565b925050604084015190509250925092565b600181811c908216806102e557607f821691505b60208210810361030357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561035057805f5260205f20601f840160051c8101602085101561032e5750805b601f840160051c820191505b8181101561034d575f815560010161033a565b50505b505050565b81516001600160401b0381111561036e5761036e6101c7565b6103828161037c84546102d1565b84610309565b6020601f8211600181146103b4575f831561039d5750848201515b5f19600385901b1c1916600184901b17845561034d565b5f84815260208120601f198516915b828110156103e357878501518255602094850194600190920191016103c3565b508482101561040057868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561042e57634e487b7160e01b5f52601160045260245ffd5b92915050565b610745806104415f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c806340c10f191161006357806340c10f191461011457806370a082311461012957806395d89b4114610151578063a9059cbb14610159578063dd62ed3e1461016c575f80fd5b806306fdde031461009f578063095ea7b3146100bd57806318160ddd146100e057806323b872dd146100f2578063313ce56714610105575b5f80fd5b6100a76101a4565b6040516100b491906105b5565b60405180910390f35b6100d06100cb366004610605565b610234565b60405190151581526020016100b4565b6002545b6040519081526020016100b4565b6100d061010036600461062d565b61024d565b604051601281526020016100b4565b610127610122366004610605565b610270565b005b6100e4610137366004610667565b6001600160a01b03165f9081526020819052604090205490565b6100a761027e565b6100d0610167366004610605565b61028d565b6100e461017a366004610687565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101b3906106b8565b80601f01602080910402602001604051908101604052809291908181526020018280546101df906106b8565b801561022a5780601f106102015761010080835404028352916020019161022a565b820191905f5260205f20905b81548152906001019060200180831161020d57829003601f168201915b5050505050905090565b5f3361024181858561029a565b60019150505b92915050565b5f3361025a8582856102ac565b61026585858561032c565b506001949350505050565b61027a8282610389565b5050565b6060600480546101b3906106b8565b5f3361024181858561032c565b6102a783838360016103bd565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198114610326578181101561031857604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61032684848484035f6103bd565b50505050565b6001600160a01b03831661035557604051634b637e8f60e11b81525f600482015260240161030f565b6001600160a01b03821661037e5760405163ec442f0560e01b81525f600482015260240161030f565b6102a783838361048f565b6001600160a01b0382166103b25760405163ec442f0560e01b81525f600482015260240161030f565b61027a5f838361048f565b6001600160a01b0384166103e65760405163e602df0560e01b81525f600482015260240161030f565b6001600160a01b03831661040f57604051634a1406b160e11b81525f600482015260240161030f565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561032657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161048191815260200190565b60405180910390a350505050565b6001600160a01b0383166104b9578060025f8282546104ae91906106f0565b909155506105299050565b6001600160a01b0383165f908152602081905260409020548181101561050b5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161030f565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661054557600280548290039055610563565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105a891815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610600575f80fd5b919050565b5f8060408385031215610616575f80fd5b61061f836105ea565b946020939093013593505050565b5f805f6060848603121561063f575f80fd5b610648846105ea565b9250610656602085016105ea565b929592945050506040919091013590565b5f60208284031215610677575f80fd5b610680826105ea565b9392505050565b5f8060408385031215610698575f80fd5b6106a1836105ea565b91506106af602084016105ea565b90509250929050565b600181811c908216806106cc57607f821691505b6020821081036106ea57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561024757634e487b7160e01b5f52601160045260245ffdfea2646970667358221220a9a3242451499d8d4d0f44512d63a13845e213939a03dd28459d6a20fed4717764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB86 CODESIZE SUB DUP1 PUSH2 0xB86 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x264 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x3 PUSH2 0x3C DUP4 DUP3 PUSH2 0x355 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x49 DUP3 DUP3 PUSH2 0x355 JUMP JUMPDEST POP POP POP PUSH2 0x5C CALLER DUP3 PUSH2 0x64 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0x434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x92 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D PUSH0 DUP4 DUP4 PUSH2 0xA1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x40F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x13B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x11D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x157 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x175 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x203 JUMPI PUSH2 0x203 PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x231 JUMPI PUSH2 0x231 PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x248 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x276 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x28B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x297 DUP7 DUP3 DUP8 ADD PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2C0 DUP7 DUP3 DUP8 ADD PUSH2 0x1DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2E5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x303 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x350 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x32E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x34D JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x33A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x36E JUMPI PUSH2 0x36E PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x382 DUP2 PUSH2 0x37C DUP5 SLOAD PUSH2 0x2D1 JUMP JUMPDEST DUP5 PUSH2 0x309 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3B4 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x39D JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x34D JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3E3 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3C3 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x400 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x42E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x745 DUP1 PUSH2 0x441 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x16C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x105 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x234 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE4 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x667 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA7 PUSH2 0x27E JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1B3 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DF SWAP1 PUSH2 0x6B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x201 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x241 DUP2 DUP6 DUP6 PUSH2 0x29A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x32C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x27A DUP3 DUP3 PUSH2 0x389 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1B3 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x241 DUP2 DUP6 DUP6 PUSH2 0x32C JUMP JUMPDEST PUSH2 0x2A7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x326 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x326 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x3BD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x355 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30F JUMP JUMPDEST PUSH2 0x2A7 DUP4 DUP4 DUP4 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30F JUMP JUMPDEST PUSH2 0x27A PUSH0 DUP4 DUP4 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x326 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4B9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x6F0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x529 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x50B JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x545 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x563 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5A8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x600 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61F DUP4 PUSH2 0x5EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x63F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x648 DUP5 PUSH2 0x5EA JUMP JUMPDEST SWAP3 POP PUSH2 0x656 PUSH1 0x20 DUP6 ADD PUSH2 0x5EA JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x677 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x680 DUP3 PUSH2 0x5EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x698 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6A1 DUP4 PUSH2 0x5EA JUMP JUMPDEST SWAP2 POP PUSH2 0x6AF PUSH1 0x20 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x6CC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x247 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 LOG3 0x24 0x24 MLOAD BLOBHASH SWAP14 DUP14 0x4D 0xF PREVRANDAO MLOAD 0x2D PUSH4 0xA13845E2 SGT SWAP4 SWAP11 SUB 0xDD 0x28 GASLIMIT SWAP14 PUSH11 0x20FED4717764736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "114:317:6:-:0;;;148:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;231:4;237:6;1962:5:1;:13;231:4:6;1962:5:1;:13;:::i;:::-;-1:-1:-1;1985:7:1;:17;1995:7;1985;:17;:::i;:::-;;1896:113;;255:32:6::1;261:10;273:13;255:5;;;:32;;:::i;:::-;148:146:::0;;;114:317;;7721:208:1;-1:-1:-1;;;;;7791:21:1;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:1;;7864:1;7835:32;;;4152:51:7;4125:18;;7835:32:1;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:1;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:1;;-1:-1:-1;6356:540:1;;-1:-1:-1;;;;;6570:15:1;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:1;;-1:-1:-1;;;;;4661:32:7;;6649:50:1;;;4643:51:7;4710:18;;;4703:34;;;4753:18;;;4746:34;;;4616:18;;6649:50:1;4441:345:7;6599:115:1;-1:-1:-1;;;;;6834:15:1;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:1;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:1;7355:4;-1:-1:-1;;;;;7346:25:1;;7365:5;7346:25;;;;4937::7;;4925:2;4910:18;;4791:177;7346:25:1;;;;;;;;6271:1107;;;:::o;14:127:7:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:7;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:7;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:7;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:7;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:7:o;874:618::-;982:6;990;998;1051:2;1039:9;1030:7;1026:23;1022:32;1019:52;;;1067:1;1064;1057:12;1019:52;1094:16;;-1:-1:-1;;;;;1122:30:7;;1119:50;;;1165:1;1162;1155:12;1119:50;1188:61;1241:7;1232:6;1221:9;1217:22;1188:61;:::i;:::-;1295:2;1280:18;;1274:25;1178:71;;-1:-1:-1;1274:25:7;-1:-1:-1;;;;;;1311:32:7;;1308:52;;;1356:1;1353;1346:12;1308:52;1379:63;1434:7;1423:8;1412:9;1408:24;1379:63;:::i;:::-;1369:73;;;1482:2;1471:9;1467:18;1461:25;1451:35;;874:618;;;;;:::o;1497:380::-;1576:1;1572:12;;;;1619;;;1640:61;;1694:4;1686:6;1682:17;1672:27;;1640:61;1747:2;1739:6;1736:14;1716:18;1713:38;1710:161;;1793:10;1788:3;1784:20;1781:1;1774:31;1828:4;1825:1;1818:15;1856:4;1853:1;1846:15;1710:161;;1497:380;;;:::o;2008:518::-;2110:2;2105:3;2102:11;2099:421;;;2146:5;2143:1;2136:16;2190:4;2187:1;2177:18;2260:2;2248:10;2244:19;2241:1;2237:27;2231:4;2227:38;2296:4;2284:10;2281:20;2278:47;;;-1:-1:-1;2319:4:7;2278:47;2374:2;2369:3;2365:12;2362:1;2358:20;2352:4;2348:31;2338:41;;2429:81;2447:2;2440:5;2437:13;2429:81;;;2506:1;2492:16;;2473:1;2462:13;2429:81;;;2433:3;;2099:421;2008:518;;;:::o;2702:1299::-;2822:10;;-1:-1:-1;;;;;2844:30:7;;2841:56;;;2877:18;;:::i;:::-;2906:97;2996:6;2956:38;2988:4;2982:11;2956:38;:::i;:::-;2950:4;2906:97;:::i;:::-;3052:4;3083:2;3072:14;;3100:1;3095:649;;;;3788:1;3805:6;3802:89;;;-1:-1:-1;3857:19:7;;;3851:26;3802:89;-1:-1:-1;;2659:1:7;2655:11;;;2651:24;2647:29;2637:40;2683:1;2679:11;;;2634:57;3904:81;;3065:930;;3095:649;1955:1;1948:14;;;1992:4;1979:18;;-1:-1:-1;;3131:20:7;;;3249:222;3263:7;3260:1;3257:14;3249:222;;;3345:19;;;3339:26;3324:42;;3452:4;3437:20;;;;3405:1;3393:14;;;;3279:12;3249:222;;;3253:3;3499:6;3490:7;3487:19;3484:201;;;3560:19;;;3554:26;-1:-1:-1;;3643:1:7;3639:14;;;3655:3;3635:24;3631:37;3627:42;3612:58;3597:74;;3484:201;-1:-1:-1;;;;3731:1:7;3715:14;;;3711:22;3698:36;;-1:-1:-1;2702:1299:7:o;4214:222::-;4279:9;;;4300:10;;;4297:133;;;4352:10;4347:3;4343:20;4340:1;4333:31;4387:4;4384:1;4377:15;4415:4;4412:1;4405:15;4297:133;4214:222;;;;:::o;4791:177::-;114:317:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 666,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 957,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 905,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 684,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 812,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 1167,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 564,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1040": {
									"entryPoint": 624,
									"id": 1040,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 420,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 638,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 589,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 653,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3485:7",
										"nodeType": "YulBlock",
										"src": "0:3485:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:7",
													"nodeType": "YulBlock",
													"src": "135:297:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:7",
																		"nodeType": "YulLiteral",
																		"src": "163:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:7"
																},
																"nativeSrc": "145:21:7",
																"nodeType": "YulFunctionCall",
																"src": "145:21:7"
															},
															"nativeSrc": "145:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:7"
														},
														{
															"nativeSrc": "175:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:7"
																},
																"nativeSrc": "189:13:7",
																"nodeType": "YulFunctionCall",
																"src": "189:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:7",
																	"nodeType": "YulTypedName",
																	"src": "179:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:7",
																				"nodeType": "YulLiteral",
																				"src": "233:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:7"
																		},
																		"nativeSrc": "218:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:7"
																},
																"nativeSrc": "211:34:7",
																"nodeType": "YulFunctionCall",
																"src": "211:34:7"
															},
															"nativeSrc": "211:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:7",
																				"nodeType": "YulLiteral",
																				"src": "275:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:7"
																		},
																		"nativeSrc": "260:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:7",
																				"nodeType": "YulLiteral",
																				"src": "292:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:7"
																		},
																		"nativeSrc": "280:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:7"
																},
																"nativeSrc": "254:50:7",
																"nodeType": "YulFunctionCall",
																"src": "254:50:7"
															},
															"nativeSrc": "254:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:7"
																				},
																				"nativeSrc": "324:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:7",
																				"nodeType": "YulLiteral",
																				"src": "348:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:7"
																		},
																		"nativeSrc": "320:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:7",
																		"nodeType": "YulLiteral",
																		"src": "353:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:7"
																},
																"nativeSrc": "313:42:7",
																"nodeType": "YulFunctionCall",
																"src": "313:42:7"
															},
															"nativeSrc": "313:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:7"
														},
														{
															"nativeSrc": "364:62:7",
															"nodeType": "YulAssignment",
															"src": "364:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:7",
																								"nodeType": "YulLiteral",
																								"src": "407:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:7"
																						},
																						"nativeSrc": "395:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:7",
																								"nodeType": "YulLiteral",
																								"src": "416:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:7"
																						},
																						"nativeSrc": "412:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:7"
																				},
																				"nativeSrc": "391:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:7"
																		},
																		"nativeSrc": "376:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:7",
																		"nodeType": "YulLiteral",
																		"src": "423:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:7"
																},
																"nativeSrc": "372:54:7",
																"nodeType": "YulFunctionCall",
																"src": "372:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:7",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:7",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:7",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:418:7"
											},
											{
												"body": {
													"nativeSrc": "486:124:7",
													"nodeType": "YulBlock",
													"src": "486:124:7",
													"statements": [
														{
															"nativeSrc": "496:29:7",
															"nodeType": "YulAssignment",
															"src": "496:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:7"
																},
																"nativeSrc": "505:20:7",
																"nodeType": "YulFunctionCall",
																"src": "505:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:7",
																"nodeType": "YulBlock",
																"src": "588:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:7",
																					"nodeType": "YulLiteral",
																					"src": "597:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:7",
																					"nodeType": "YulLiteral",
																					"src": "600:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:7"
																			},
																			"nativeSrc": "590:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:7"
																		},
																		"nativeSrc": "590:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:7",
																										"nodeType": "YulLiteral",
																										"src": "573:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:7",
																										"nodeType": "YulLiteral",
																										"src": "578:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:7"
																								},
																								"nativeSrc": "569:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:7",
																								"nodeType": "YulLiteral",
																								"src": "582:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:7"
																						},
																						"nativeSrc": "565:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:7"
																				},
																				"nativeSrc": "554:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:7"
																		},
																		"nativeSrc": "544:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:7"
																},
																"nativeSrc": "537:50:7",
																"nodeType": "YulFunctionCall",
																"src": "537:50:7"
															},
															"nativeSrc": "534:70:7",
															"nodeType": "YulIf",
															"src": "534:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:7",
														"nodeType": "YulTypedName",
														"src": "465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:7",
														"nodeType": "YulTypedName",
														"src": "476:5:7",
														"type": ""
													}
												],
												"src": "437:173:7"
											},
											{
												"body": {
													"nativeSrc": "702:213:7",
													"nodeType": "YulBlock",
													"src": "702:213:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:7",
																"nodeType": "YulBlock",
																"src": "748:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:7",
																					"nodeType": "YulLiteral",
																					"src": "757:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:7",
																					"nodeType": "YulLiteral",
																					"src": "760:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:7"
																			},
																			"nativeSrc": "750:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:7"
																		},
																		"nativeSrc": "750:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:7"
																		},
																		"nativeSrc": "719:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:7",
																		"nodeType": "YulLiteral",
																		"src": "744:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:7"
																},
																"nativeSrc": "715:32:7",
																"nodeType": "YulFunctionCall",
																"src": "715:32:7"
															},
															"nativeSrc": "712:52:7",
															"nodeType": "YulIf",
															"src": "712:52:7"
														},
														{
															"nativeSrc": "773:39:7",
															"nodeType": "YulAssignment",
															"src": "773:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:7"
																},
																"nativeSrc": "783:29:7",
																"nodeType": "YulFunctionCall",
																"src": "783:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:7"
																}
															]
														},
														{
															"nativeSrc": "821:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:7",
																"nodeType": "YulLiteral",
																"src": "834:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:7",
																	"nodeType": "YulTypedName",
																	"src": "825:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:7",
															"nodeType": "YulAssignment",
															"src": "844:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:7",
																				"nodeType": "YulLiteral",
																				"src": "881:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:7"
																		},
																		"nativeSrc": "866:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:7"
																},
																"nativeSrc": "853:32:7",
																"nodeType": "YulFunctionCall",
																"src": "853:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:7"
																}
															]
														},
														{
															"nativeSrc": "894:15:7",
															"nodeType": "YulAssignment",
															"src": "894:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:7",
																"nodeType": "YulIdentifier",
																"src": "904:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:7",
														"nodeType": "YulTypedName",
														"src": "660:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:7",
														"nodeType": "YulTypedName",
														"src": "671:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:7",
														"nodeType": "YulTypedName",
														"src": "683:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:7",
														"nodeType": "YulTypedName",
														"src": "691:6:7",
														"type": ""
													}
												],
												"src": "615:300:7"
											},
											{
												"body": {
													"nativeSrc": "1015:92:7",
													"nodeType": "YulBlock",
													"src": "1015:92:7",
													"statements": [
														{
															"nativeSrc": "1025:26:7",
															"nodeType": "YulAssignment",
															"src": "1025:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:7"
																},
																"nativeSrc": "1033:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:7"
																				},
																				"nativeSrc": "1085:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:7"
																		},
																		"nativeSrc": "1078:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:7"
																},
																"nativeSrc": "1060:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:7"
															},
															"nativeSrc": "1060:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:7",
														"nodeType": "YulTypedName",
														"src": "984:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:7",
														"nodeType": "YulTypedName",
														"src": "995:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:7",
														"nodeType": "YulTypedName",
														"src": "1006:4:7",
														"type": ""
													}
												],
												"src": "920:187:7"
											},
											{
												"body": {
													"nativeSrc": "1213:76:7",
													"nodeType": "YulBlock",
													"src": "1213:76:7",
													"statements": [
														{
															"nativeSrc": "1223:26:7",
															"nodeType": "YulAssignment",
															"src": "1223:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:7"
																},
																"nativeSrc": "1231:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:7"
																},
																"nativeSrc": "1258:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:7"
															},
															"nativeSrc": "1258:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:7",
														"nodeType": "YulTypedName",
														"src": "1182:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:7",
														"nodeType": "YulTypedName",
														"src": "1193:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:7",
														"nodeType": "YulTypedName",
														"src": "1204:4:7",
														"type": ""
													}
												],
												"src": "1112:177:7"
											},
											{
												"body": {
													"nativeSrc": "1398:270:7",
													"nodeType": "YulBlock",
													"src": "1398:270:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:7",
																"nodeType": "YulBlock",
																"src": "1444:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:7"
																			},
																			"nativeSrc": "1446:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:7"
																		},
																		"nativeSrc": "1446:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:7"
																		},
																		"nativeSrc": "1415:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:7"
																},
																"nativeSrc": "1411:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:7"
															},
															"nativeSrc": "1408:52:7",
															"nodeType": "YulIf",
															"src": "1408:52:7"
														},
														{
															"nativeSrc": "1469:39:7",
															"nodeType": "YulAssignment",
															"src": "1469:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:7"
																},
																"nativeSrc": "1479:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:7"
																}
															]
														},
														{
															"nativeSrc": "1517:48:7",
															"nodeType": "YulAssignment",
															"src": "1517:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:7"
																		},
																		"nativeSrc": "1546:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:7"
																},
																"nativeSrc": "1527:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:7"
																}
															]
														},
														{
															"nativeSrc": "1574:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:7",
																"nodeType": "YulLiteral",
																"src": "1587:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:7",
															"nodeType": "YulAssignment",
															"src": "1597:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:7"
																		},
																		"nativeSrc": "1619:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:7"
																},
																"nativeSrc": "1606:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:7"
																}
															]
														},
														{
															"nativeSrc": "1647:15:7",
															"nodeType": "YulAssignment",
															"src": "1647:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:7",
																"nodeType": "YulIdentifier",
																"src": "1657:5:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:7",
														"nodeType": "YulTypedName",
														"src": "1348:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:7",
														"nodeType": "YulTypedName",
														"src": "1359:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:7",
														"nodeType": "YulTypedName",
														"src": "1371:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:7",
														"nodeType": "YulTypedName",
														"src": "1379:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:7",
														"nodeType": "YulTypedName",
														"src": "1387:6:7",
														"type": ""
													}
												],
												"src": "1294:374:7"
											},
											{
												"body": {
													"nativeSrc": "1770:87:7",
													"nodeType": "YulBlock",
													"src": "1770:87:7",
													"statements": [
														{
															"nativeSrc": "1780:26:7",
															"nodeType": "YulAssignment",
															"src": "1780:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:7"
																},
																"nativeSrc": "1788:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:7"
																		},
																		"nativeSrc": "1833:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:7"
																},
																"nativeSrc": "1815:36:7",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:7"
															},
															"nativeSrc": "1815:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:7",
														"nodeType": "YulTypedName",
														"src": "1739:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:7",
														"nodeType": "YulTypedName",
														"src": "1750:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:7",
														"nodeType": "YulTypedName",
														"src": "1761:4:7",
														"type": ""
													}
												],
												"src": "1673:184:7"
											},
											{
												"body": {
													"nativeSrc": "1932:116:7",
													"nodeType": "YulBlock",
													"src": "1932:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:7",
																"nodeType": "YulBlock",
																"src": "1978:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:7"
																			},
																			"nativeSrc": "1980:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:7"
																		},
																		"nativeSrc": "1980:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:7"
																		},
																		"nativeSrc": "1949:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:7"
																},
																"nativeSrc": "1945:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:7"
															},
															"nativeSrc": "1942:52:7",
															"nodeType": "YulIf",
															"src": "1942:52:7"
														},
														{
															"nativeSrc": "2003:39:7",
															"nodeType": "YulAssignment",
															"src": "2003:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2013:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2013:18:7"
																},
																"nativeSrc": "2013:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2013:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2003:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:7",
														"nodeType": "YulTypedName",
														"src": "1898:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:7",
														"nodeType": "YulTypedName",
														"src": "1909:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:7",
														"nodeType": "YulTypedName",
														"src": "1921:6:7",
														"type": ""
													}
												],
												"src": "1862:186:7"
											},
											{
												"body": {
													"nativeSrc": "2140:173:7",
													"nodeType": "YulBlock",
													"src": "2140:173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2186:16:7",
																"nodeType": "YulBlock",
																"src": "2186:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2195:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2195:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2188:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:7"
																			},
																			"nativeSrc": "2188:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2188:12:7"
																		},
																		"nativeSrc": "2188:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2188:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2161:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2157:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:7"
																		},
																		"nativeSrc": "2157:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2153:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:7"
																},
																"nativeSrc": "2153:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2153:32:7"
															},
															"nativeSrc": "2150:52:7",
															"nodeType": "YulIf",
															"src": "2150:52:7"
														},
														{
															"nativeSrc": "2211:39:7",
															"nodeType": "YulAssignment",
															"src": "2211:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2240:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2240:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2221:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2221:18:7"
																},
																"nativeSrc": "2221:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2221:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:7"
																}
															]
														},
														{
															"nativeSrc": "2259:48:7",
															"nodeType": "YulAssignment",
															"src": "2259:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2292:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2292:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2303:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2303:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2288:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2288:3:7"
																		},
																		"nativeSrc": "2288:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2269:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2269:18:7"
																},
																"nativeSrc": "2269:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2269:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2259:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2053:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2098:9:7",
														"nodeType": "YulTypedName",
														"src": "2098:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2109:7:7",
														"nodeType": "YulTypedName",
														"src": "2109:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2121:6:7",
														"nodeType": "YulTypedName",
														"src": "2121:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2129:6:7",
														"nodeType": "YulTypedName",
														"src": "2129:6:7",
														"type": ""
													}
												],
												"src": "2053:260:7"
											},
											{
												"body": {
													"nativeSrc": "2373:325:7",
													"nodeType": "YulBlock",
													"src": "2373:325:7",
													"statements": [
														{
															"nativeSrc": "2383:22:7",
															"nodeType": "YulAssignment",
															"src": "2383:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2397:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2397:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2400:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2400:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2393:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2393:3:7"
																},
																"nativeSrc": "2393:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2393:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2383:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2383:6:7"
																}
															]
														},
														{
															"nativeSrc": "2414:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2414:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2444:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2444:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2450:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2450:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2440:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2440:3:7"
																},
																"nativeSrc": "2440:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2440:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2418:18:7",
																	"nodeType": "YulTypedName",
																	"src": "2418:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2491:31:7",
																"nodeType": "YulBlock",
																"src": "2491:31:7",
																"statements": [
																	{
																		"nativeSrc": "2493:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2493:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2507:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2507:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2515:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2515:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2503:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2503:3:7"
																			},
																			"nativeSrc": "2503:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2503:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2493:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2471:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2471:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2464:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2464:6:7"
																},
																"nativeSrc": "2464:26:7",
																"nodeType": "YulFunctionCall",
																"src": "2464:26:7"
															},
															"nativeSrc": "2461:61:7",
															"nodeType": "YulIf",
															"src": "2461:61:7"
														},
														{
															"body": {
																"nativeSrc": "2581:111:7",
																"nodeType": "YulBlock",
																"src": "2581:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2602:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2602:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2609:3:7",
																							"nodeType": "YulLiteral",
																							"src": "2609:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2614:10:7",
																							"nodeType": "YulLiteral",
																							"src": "2614:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2605:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2605:3:7"
																					},
																					"nativeSrc": "2605:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2605:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2595:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2595:6:7"
																			},
																			"nativeSrc": "2595:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2595:31:7"
																		},
																		"nativeSrc": "2595:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2595:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2646:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2646:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2649:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2649:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2639:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2639:6:7"
																			},
																			"nativeSrc": "2639:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2639:15:7"
																		},
																		"nativeSrc": "2639:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2639:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2677:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2677:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2667:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2667:6:7"
																			},
																			"nativeSrc": "2667:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2667:15:7"
																		},
																		"nativeSrc": "2667:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2667:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2537:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2537:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2560:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2560:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2568:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2568:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2557:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2557:2:7"
																		},
																		"nativeSrc": "2557:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2534:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2534:2:7"
																},
																"nativeSrc": "2534:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2534:38:7"
															},
															"nativeSrc": "2531:161:7",
															"nodeType": "YulIf",
															"src": "2531:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2318:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2353:4:7",
														"nodeType": "YulTypedName",
														"src": "2353:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2362:6:7",
														"nodeType": "YulTypedName",
														"src": "2362:6:7",
														"type": ""
													}
												],
												"src": "2318:380:7"
											},
											{
												"body": {
													"nativeSrc": "2860:188:7",
													"nodeType": "YulBlock",
													"src": "2860:188:7",
													"statements": [
														{
															"nativeSrc": "2870:26:7",
															"nodeType": "YulAssignment",
															"src": "2870:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2882:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2882:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2893:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2893:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2878:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2878:3:7"
																},
																"nativeSrc": "2878:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2878:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2870:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2870:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2912:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2912:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2927:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2927:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2943:3:7",
																								"nodeType": "YulLiteral",
																								"src": "2943:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2948:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2948:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2939:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2939:3:7"
																						},
																						"nativeSrc": "2939:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2939:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2952:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2952:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2935:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2935:3:7"
																				},
																				"nativeSrc": "2935:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2935:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2923:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2923:3:7"
																		},
																		"nativeSrc": "2923:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2923:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2905:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2905:6:7"
																},
																"nativeSrc": "2905:51:7",
																"nodeType": "YulFunctionCall",
																"src": "2905:51:7"
															},
															"nativeSrc": "2905:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "2905:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2976:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2976:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2987:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2987:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2972:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2972:3:7"
																		},
																		"nativeSrc": "2972:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2972:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2992:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2992:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2965:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2965:6:7"
																},
																"nativeSrc": "2965:34:7",
																"nodeType": "YulFunctionCall",
																"src": "2965:34:7"
															},
															"nativeSrc": "2965:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "2965:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3019:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3019:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3030:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3030:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3015:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3015:3:7"
																		},
																		"nativeSrc": "3015:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3015:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3035:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3035:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3008:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3008:6:7"
																},
																"nativeSrc": "3008:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3008:34:7"
															},
															"nativeSrc": "3008:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3008:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2703:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2813:9:7",
														"nodeType": "YulTypedName",
														"src": "2813:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2824:6:7",
														"nodeType": "YulTypedName",
														"src": "2824:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2832:6:7",
														"nodeType": "YulTypedName",
														"src": "2832:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2840:6:7",
														"nodeType": "YulTypedName",
														"src": "2840:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2851:4:7",
														"nodeType": "YulTypedName",
														"src": "2851:4:7",
														"type": ""
													}
												],
												"src": "2703:345:7"
											},
											{
												"body": {
													"nativeSrc": "3154:102:7",
													"nodeType": "YulBlock",
													"src": "3154:102:7",
													"statements": [
														{
															"nativeSrc": "3164:26:7",
															"nodeType": "YulAssignment",
															"src": "3164:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3176:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3176:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3187:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3187:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3172:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3172:3:7"
																},
																"nativeSrc": "3172:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3172:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3164:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3164:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3206:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3206:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3221:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3221:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3237:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3237:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3242:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3242:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3233:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3233:3:7"
																						},
																						"nativeSrc": "3233:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3233:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3246:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3246:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3229:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3229:3:7"
																				},
																				"nativeSrc": "3229:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3229:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3217:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3217:3:7"
																		},
																		"nativeSrc": "3217:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3217:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3199:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3199:6:7"
																},
																"nativeSrc": "3199:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3199:51:7"
															},
															"nativeSrc": "3199:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3199:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3053:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3123:9:7",
														"nodeType": "YulTypedName",
														"src": "3123:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3134:6:7",
														"nodeType": "YulTypedName",
														"src": "3134:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3145:4:7",
														"nodeType": "YulTypedName",
														"src": "3145:4:7",
														"type": ""
													}
												],
												"src": "3053:203:7"
											},
											{
												"body": {
													"nativeSrc": "3309:174:7",
													"nodeType": "YulBlock",
													"src": "3309:174:7",
													"statements": [
														{
															"nativeSrc": "3319:16:7",
															"nodeType": "YulAssignment",
															"src": "3319:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3330:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3330:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3333:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3333:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3326:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3326:3:7"
																},
																"nativeSrc": "3326:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3326:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3319:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3319:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3366:111:7",
																"nodeType": "YulBlock",
																"src": "3366:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3387:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3387:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3394:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3394:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3399:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3399:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3390:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3390:3:7"
																					},
																					"nativeSrc": "3390:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3390:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3380:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3380:6:7"
																			},
																			"nativeSrc": "3380:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3380:31:7"
																		},
																		"nativeSrc": "3380:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3380:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3431:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3431:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3434:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3434:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3424:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3424:6:7"
																			},
																			"nativeSrc": "3424:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3424:15:7"
																		},
																		"nativeSrc": "3424:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3424:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3459:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3459:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3462:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3462:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3452:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3452:6:7"
																			},
																			"nativeSrc": "3452:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3452:15:7"
																		},
																		"nativeSrc": "3452:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3452:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3350:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3350:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3353:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3353:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3347:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3347:2:7"
																},
																"nativeSrc": "3347:10:7",
																"nodeType": "YulFunctionCall",
																"src": "3347:10:7"
															},
															"nativeSrc": "3344:133:7",
															"nodeType": "YulIf",
															"src": "3344:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3261:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3292:1:7",
														"nodeType": "YulTypedName",
														"src": "3292:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3295:1:7",
														"nodeType": "YulTypedName",
														"src": "3295:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3301:3:7",
														"nodeType": "YulTypedName",
														"src": "3301:3:7",
														"type": ""
													}
												],
												"src": "3261:222:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009b575f3560e01c806340c10f191161006357806340c10f191461011457806370a082311461012957806395d89b4114610151578063a9059cbb14610159578063dd62ed3e1461016c575f80fd5b806306fdde031461009f578063095ea7b3146100bd57806318160ddd146100e057806323b872dd146100f2578063313ce56714610105575b5f80fd5b6100a76101a4565b6040516100b491906105b5565b60405180910390f35b6100d06100cb366004610605565b610234565b60405190151581526020016100b4565b6002545b6040519081526020016100b4565b6100d061010036600461062d565b61024d565b604051601281526020016100b4565b610127610122366004610605565b610270565b005b6100e4610137366004610667565b6001600160a01b03165f9081526020819052604090205490565b6100a761027e565b6100d0610167366004610605565b61028d565b6100e461017a366004610687565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101b3906106b8565b80601f01602080910402602001604051908101604052809291908181526020018280546101df906106b8565b801561022a5780601f106102015761010080835404028352916020019161022a565b820191905f5260205f20905b81548152906001019060200180831161020d57829003601f168201915b5050505050905090565b5f3361024181858561029a565b60019150505b92915050565b5f3361025a8582856102ac565b61026585858561032c565b506001949350505050565b61027a8282610389565b5050565b6060600480546101b3906106b8565b5f3361024181858561032c565b6102a783838360016103bd565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198114610326578181101561031857604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61032684848484035f6103bd565b50505050565b6001600160a01b03831661035557604051634b637e8f60e11b81525f600482015260240161030f565b6001600160a01b03821661037e5760405163ec442f0560e01b81525f600482015260240161030f565b6102a783838361048f565b6001600160a01b0382166103b25760405163ec442f0560e01b81525f600482015260240161030f565b61027a5f838361048f565b6001600160a01b0384166103e65760405163e602df0560e01b81525f600482015260240161030f565b6001600160a01b03831661040f57604051634a1406b160e11b81525f600482015260240161030f565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561032657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161048191815260200190565b60405180910390a350505050565b6001600160a01b0383166104b9578060025f8282546104ae91906106f0565b909155506105299050565b6001600160a01b0383165f908152602081905260409020548181101561050b5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161030f565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661054557600280548290039055610563565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105a891815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610600575f80fd5b919050565b5f8060408385031215610616575f80fd5b61061f836105ea565b946020939093013593505050565b5f805f6060848603121561063f575f80fd5b610648846105ea565b9250610656602085016105ea565b929592945050506040919091013590565b5f60208284031215610677575f80fd5b610680826105ea565b9392505050565b5f8060408385031215610698575f80fd5b6106a1836105ea565b91506106af602084016105ea565b90509250929050565b600181811c908216806106cc57607f821691505b6020821081036106ea57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561024757634e487b7160e01b5f52601160045260245ffdfea2646970667358221220a9a3242451499d8d4d0f44512d63a13845e213939a03dd28459d6a20fed4717764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x16C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x105 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x234 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE4 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x667 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA7 PUSH2 0x27E JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1B3 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DF SWAP1 PUSH2 0x6B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x201 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x241 DUP2 DUP6 DUP6 PUSH2 0x29A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x32C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x27A DUP3 DUP3 PUSH2 0x389 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1B3 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x241 DUP2 DUP6 DUP6 PUSH2 0x32C JUMP JUMPDEST PUSH2 0x2A7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x326 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x326 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x3BD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x355 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30F JUMP JUMPDEST PUSH2 0x2A7 DUP4 DUP4 DUP4 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30F JUMP JUMPDEST PUSH2 0x27A PUSH0 DUP4 DUP4 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x326 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4B9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x6F0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x529 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x50B JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x545 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x563 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5A8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x600 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61F DUP4 PUSH2 0x5EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x63F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x648 DUP5 PUSH2 0x5EA JUMP JUMPDEST SWAP3 POP PUSH2 0x656 PUSH1 0x20 DUP6 ADD PUSH2 0x5EA JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x677 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x680 DUP3 PUSH2 0x5EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x698 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6A1 DUP4 PUSH2 0x5EA JUMP JUMPDEST SWAP2 POP PUSH2 0x6AF PUSH1 0x20 DUP5 ADD PUSH2 0x5EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x6CC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x247 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 LOG3 0x24 0x24 MLOAD BLOBHASH SWAP14 DUP14 0x4D 0xF PREVRANDAO MLOAD 0x2D PUSH4 0xA13845E2 SGT SWAP4 SWAP11 SUB 0xDD 0x28 GASLIMIT SWAP14 PUSH11 0x20FED4717764736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "114:317:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:7;;1078:22;1060:41;;1048:2;1033:18;4293:186:1;920:187:7;3144:97:1;3222:12;;3144:97;;;1258:25:7;;;1246:2;1231:18;3144:97:1;1112:177:7;5039:244:1;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;1815:36:7;;1803:2;1788:18;3002:82:1;1673:184:7;344:85:6;;;;;;:::i;:::-;;:::i;:::-;;3299:116:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:1;3364:7;3390:18;;;;;;;;;;;;3299:116;2276:93;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;3846:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:1;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:4;4420:31:1;735:10:4;4436:7:1;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:4;5182:37:1;5198:4;735:10:4;5213:5:1;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:1;;5039:244;-1:-1:-1;;;;5039:244:1:o;344:85:6:-;405:17;411:2;415:6;405:5;:17::i;:::-;344:85;;:::o;2276:93:1:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:4;3733:27:1;735:10:4;3750:2:1;3754:5;3733:9;:27::i;8989:128::-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:1;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:1;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:1;;-1:-1:-1;;;;;2923:32:7;;10936:60:1;;;2905:51:7;2972:18;;;2965:34;;;3015:18;;;3008:34;;;2878:18;;10936:60:1;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:1;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:1;;5807:1;5780:30;;;3199:51:7;3172:18;;5780:30:1;3053:203:7;5735:86:1;-1:-1:-1;;;;;5834:16:1;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:1;;5902:1;5873:32;;;3199:51:7;3172:18;;5873:32:1;3053:203:7;5830:86:1;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;7721:208::-;-1:-1:-1;;;;;7791:21:1;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:1;;7864:1;7835:32;;;3199:51:7;3172:18;;7835:32:1;3053:203:7;7787:91:1;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;9949:432::-;-1:-1:-1;;;;;10061:19:1;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:1;;10132:1;10103:32;;;3199:51:7;3172:18;;10103:32:1;3053:203:7;10057:89:1;-1:-1:-1;;;;;10159:21:1;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:1;;10231:1;10203:31;;;3199:51:7;3172:18;;10203:31:1;3053:203:7;10155:90:1;-1:-1:-1;;;;;10254:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:1;10342:5;-1:-1:-1;;;;;10333:31:1;;10358:5;10333:31;;;;1258:25:7;;1246:2;1231:18;;1112:177;10333:31:1;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:1;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:1;;-1:-1:-1;6356:540:1;;-1:-1:-1;;;;;6570:15:1;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:1;;-1:-1:-1;;;;;2923:32:7;;6649:50:1;;;2905:51:7;2972:18;;;2965:34;;;3015:18;;;3008:34;;;2878:18;;6649:50:1;2703:345:7;6599:115:1;-1:-1:-1;;;;;6834:15:1;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:1;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:1;7355:4;-1:-1:-1;;;;;7346:25:1;;7365:5;7346:25;;;;1258::7;;1246:2;1231:18;;1112:177;7346:25:1;;;;;;;;6271:1107;;;:::o;14:418:7:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:7;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:7:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:7;1619:18;;;;1606:32;;1294:374::o;1862:186::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2013:29;2032:9;2013:29;:::i;:::-;2003:39;1862:186;-1:-1:-1;;;1862:186:7:o;2053:260::-;2121:6;2129;2182:2;2170:9;2161:7;2157:23;2153:32;2150:52;;;2198:1;2195;2188:12;2150:52;2221:29;2240:9;2221:29;:::i;:::-;2211:39;;2269:38;2303:2;2292:9;2288:18;2269:38;:::i;:::-;2259:48;;2053:260;;;;;:::o;2318:380::-;2397:1;2393:12;;;;2440;;;2461:61;;2515:4;2507:6;2503:17;2493:27;;2461:61;2568:2;2560:6;2557:14;2537:18;2534:38;2531:161;;2614:10;2609:3;2605:20;2602:1;2595:31;2649:4;2646:1;2639:15;2677:4;2674:1;2667:15;2531:161;;2318:380;;;:::o;3261:222::-;3326:9;;;3347:10;;;3344:133;;;3399:10;3394:3;3390:20;3387:1;3380:31;3434:4;3431:1;3424:15;3462:4;3459:1;3452:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "372200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24735",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51282",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 114,
									"end": 431,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 114,
									"end": 431,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 114,
									"end": 431,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 148,
									"end": 294,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 294,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 148,
									"end": 294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 148,
									"end": 294,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 148,
									"end": 294,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 148,
									"end": 294,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 148,
									"end": 294,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 148,
									"end": 294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 231,
									"end": 235,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 237,
									"end": 243,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 231,
									"end": 235,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 255,
									"end": 287,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 261,
									"end": 271,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 273,
									"end": 286,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 255,
									"end": 260,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 255,
									"end": 260,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 255,
									"end": 260,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 255,
									"end": 287,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 255,
									"end": 287,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 255,
									"end": 287,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 255,
									"end": 287,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 255,
									"end": 287,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 148,
									"end": 294,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 114,
									"end": 431,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 114,
									"end": 431,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4152,
									"end": 4203,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4125,
									"end": 4143,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4125,
									"end": 4143,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4661,
									"end": 4693,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4661,
									"end": 4693,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4643,
									"end": 4694,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4728,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4710,
									"end": 4728,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4728,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4703,
									"end": 4737,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4703,
									"end": 4737,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4703,
									"end": 4737,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4753,
									"end": 4771,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4753,
									"end": 4771,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4753,
									"end": 4771,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4746,
									"end": 4780,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4746,
									"end": 4780,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4746,
									"end": 4780,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4616,
									"end": 4634,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4616,
									"end": 4634,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 4441,
									"end": 4786,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4937,
									"end": 4962,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4962,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4925,
									"end": 4927,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4910,
									"end": 4928,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4910,
									"end": 4928,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4791,
									"end": 4968,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 869,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 146,
									"end": 869,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 782,
									"end": 788,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 775,
									"end": 779,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 773,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 763,
									"end": 780,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 756,
									"end": 760,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 754,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 744,
									"end": 761,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 738,
									"end": 789,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 837,
									"end": 838,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 809,
									"end": 828,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 809,
									"end": 828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 805,
									"end": 835,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 798,
									"end": 839,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 813,
									"end": 819,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 146,
									"end": 869,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1492,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 874,
									"end": 1492,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 982,
									"end": 988,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 990,
									"end": 996,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 998,
									"end": 1004,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1051,
									"end": 1053,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1039,
									"end": 1048,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1037,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1026,
									"end": 1049,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1067,
									"end": 1068,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1064,
									"end": 1065,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1057,
									"end": 1069,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1094,
									"end": 1110,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1094,
									"end": 1110,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1122,
									"end": 1152,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1152,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1169,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1119,
									"end": 1169,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1165,
									"end": 1166,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1162,
									"end": 1163,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1167,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1169,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1119,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1188,
									"end": 1249,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1241,
									"end": 1248,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1232,
									"end": 1238,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1221,
									"end": 1230,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1217,
									"end": 1239,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1188,
									"end": 1249,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1188,
									"end": 1249,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1188,
									"end": 1249,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1188,
									"end": 1249,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1295,
									"end": 1297,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1280,
									"end": 1298,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1280,
									"end": 1298,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1274,
									"end": 1299,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1178,
									"end": 1249,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1178,
									"end": 1249,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1274,
									"end": 1299,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1311,
									"end": 1343,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1343,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1308,
									"end": 1360,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1308,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1308,
									"end": 1360,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1356,
									"end": 1357,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1353,
									"end": 1354,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1346,
									"end": 1358,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1308,
									"end": 1360,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1308,
									"end": 1360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1434,
									"end": 1441,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1423,
									"end": 1431,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1421,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1408,
									"end": 1432,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1379,
									"end": 1442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1442,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1379,
									"end": 1442,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1369,
									"end": 1442,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1369,
									"end": 1442,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1369,
									"end": 1442,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1484,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1471,
									"end": 1480,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1467,
									"end": 1485,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1461,
									"end": 1486,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1451,
									"end": 1486,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1451,
									"end": 1486,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1492,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1492,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1492,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1492,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1492,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1492,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1877,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1497,
									"end": 1877,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1576,
									"end": 1577,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1572,
									"end": 1584,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1572,
									"end": 1584,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1572,
									"end": 1584,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1572,
									"end": 1584,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1631,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1631,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1631,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1640,
									"end": 1701,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1640,
									"end": 1701,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1694,
									"end": 1698,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1686,
									"end": 1692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1682,
									"end": 1699,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1699,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1699,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1640,
									"end": 1701,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1640,
									"end": 1701,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1747,
									"end": 1749,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1739,
									"end": 1745,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1736,
									"end": 1750,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1734,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1713,
									"end": 1751,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1710,
									"end": 1871,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1710,
									"end": 1871,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1793,
									"end": 1803,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1788,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1784,
									"end": 1804,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1774,
									"end": 1805,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1828,
									"end": 1832,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1825,
									"end": 1826,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1818,
									"end": 1833,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1856,
									"end": 1860,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1853,
									"end": 1854,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1846,
									"end": 1861,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1710,
									"end": 1871,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1710,
									"end": 1871,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1710,
									"end": 1871,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1877,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1877,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1877,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1877,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2008,
									"end": 2526,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2008,
									"end": 2526,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2110,
									"end": 2112,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2105,
									"end": 2108,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2102,
									"end": 2113,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2099,
									"end": 2520,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2099,
									"end": 2520,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2099,
									"end": 2520,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2146,
									"end": 2151,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2143,
									"end": 2144,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2136,
									"end": 2152,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2194,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2187,
									"end": 2188,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2177,
									"end": 2195,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2260,
									"end": 2262,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2248,
									"end": 2258,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2244,
									"end": 2263,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2242,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2237,
									"end": 2264,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2231,
									"end": 2235,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2227,
									"end": 2265,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2296,
									"end": 2300,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2284,
									"end": 2294,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2281,
									"end": 2301,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2278,
									"end": 2325,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2278,
									"end": 2325,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2278,
									"end": 2325,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2319,
									"end": 2323,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2278,
									"end": 2325,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2278,
									"end": 2325,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2374,
									"end": 2376,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2369,
									"end": 2372,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2377,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2362,
									"end": 2363,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2358,
									"end": 2378,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2352,
									"end": 2356,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2348,
									"end": 2379,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2338,
									"end": 2379,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2338,
									"end": 2379,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2447,
									"end": 2449,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2440,
									"end": 2445,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2506,
									"end": 2507,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2473,
									"end": 2474,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2462,
									"end": 2475,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2436,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2436,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2099,
									"end": 2520,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2099,
									"end": 2520,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2008,
									"end": 2526,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2008,
									"end": 2526,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2008,
									"end": 2526,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2008,
									"end": 2526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2702,
									"end": 4001,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2702,
									"end": 4001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2832,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2844,
									"end": 2874,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2844,
									"end": 2874,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2841,
									"end": 2897,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2841,
									"end": 2897,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2841,
									"end": 2897,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2877,
									"end": 2895,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2877,
									"end": 2895,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 2877,
									"end": 2895,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2877,
									"end": 2895,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2877,
									"end": 2895,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 3003,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2996,
									"end": 3002,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2956,
									"end": 2994,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2988,
									"end": 2992,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2982,
									"end": 2993,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2956,
									"end": 2994,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 2956,
									"end": 2994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2956,
									"end": 2994,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2956,
									"end": 2994,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2950,
									"end": 2954,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 3003,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2906,
									"end": 3003,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 3003,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 3003,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3052,
									"end": 3056,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3083,
									"end": 3085,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3072,
									"end": 3086,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3072,
									"end": 3086,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3100,
									"end": 3101,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3095,
									"end": 3744,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3744,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3744,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3095,
									"end": 3744,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3788,
									"end": 3789,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3805,
									"end": 3811,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 3891,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 3891,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3802,
									"end": 3891,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3857,
									"end": 3876,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3857,
									"end": 3876,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3857,
									"end": 3876,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3851,
									"end": 3877,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 3891,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3802,
									"end": 3891,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2659,
									"end": 2660,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2655,
									"end": 2666,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2655,
									"end": 2666,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2655,
									"end": 2666,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2651,
									"end": 2675,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2676,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2637,
									"end": 2677,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2683,
									"end": 2684,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2679,
									"end": 2690,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2679,
									"end": 2690,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2679,
									"end": 2690,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2634,
									"end": 2691,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3904,
									"end": 3985,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3904,
									"end": 3985,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3065,
									"end": 3995,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3065,
									"end": 3995,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3744,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3095,
									"end": 3744,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1955,
									"end": 1956,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1948,
									"end": 1962,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1948,
									"end": 1962,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1948,
									"end": 1962,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 1996,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1979,
									"end": 1997,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1979,
									"end": 1997,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3131,
									"end": 3151,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3131,
									"end": 3151,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3131,
									"end": 3151,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3263,
									"end": 3270,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3260,
									"end": 3261,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3257,
									"end": 3271,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3345,
									"end": 3364,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3345,
									"end": 3364,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3345,
									"end": 3364,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3339,
									"end": 3365,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3324,
									"end": 3366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3324,
									"end": 3366,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3452,
									"end": 3456,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3437,
									"end": 3457,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3437,
									"end": 3457,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3437,
									"end": 3457,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3437,
									"end": 3457,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3405,
									"end": 3406,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3393,
									"end": 3407,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3393,
									"end": 3407,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3393,
									"end": 3407,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3393,
									"end": 3407,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3279,
									"end": 3291,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3253,
									"end": 3256,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3499,
									"end": 3505,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3490,
									"end": 3497,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3487,
									"end": 3506,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3484,
									"end": 3685,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3484,
									"end": 3685,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 3484,
									"end": 3685,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3560,
									"end": 3579,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3560,
									"end": 3579,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3560,
									"end": 3579,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3554,
									"end": 3580,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3643,
									"end": 3644,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3639,
									"end": 3653,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3639,
									"end": 3653,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3639,
									"end": 3653,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3655,
									"end": 3658,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 3635,
									"end": 3659,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3631,
									"end": 3668,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3627,
									"end": 3669,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3612,
									"end": 3670,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3597,
									"end": 3671,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3597,
									"end": 3671,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3484,
									"end": 3685,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 3484,
									"end": 3685,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3731,
									"end": 3732,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3715,
									"end": 3729,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3715,
									"end": 3729,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3715,
									"end": 3729,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3711,
									"end": 3733,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3698,
									"end": 3734,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3698,
									"end": 3734,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2702,
									"end": 4001,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4214,
									"end": 4436,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 4214,
									"end": 4436,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4279,
									"end": 4288,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4279,
									"end": 4288,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4279,
									"end": 4288,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4300,
									"end": 4310,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4300,
									"end": 4310,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4300,
									"end": 4310,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4430,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4430,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4297,
									"end": 4430,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4352,
									"end": 4362,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 4347,
									"end": 4350,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 4343,
									"end": 4363,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4340,
									"end": 4341,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4333,
									"end": 4364,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4387,
									"end": 4391,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 4384,
									"end": 4385,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4377,
									"end": 4392,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4415,
									"end": 4419,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4412,
									"end": 4413,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4405,
									"end": 4420,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4430,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4297,
									"end": 4430,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4214,
									"end": 4436,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4214,
									"end": 4436,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4214,
									"end": 4436,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4214,
									"end": 4436,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4214,
									"end": 4436,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4791,
									"end": 4968,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 4791,
									"end": 4968,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 114,
									"end": 431,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 431,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 114,
									"end": 431,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 431,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 431,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 114,
									"end": 431,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 431,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a9a3242451499d8d4d0f44512d63a13845e213939a03dd28459d6a20fed4717764736f6c634300081a0033",
									".code": [
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 114,
											"end": 431,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 344,
											"end": 429,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 344,
											"end": 429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 344,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 344,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 344,
											"end": 429,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 344,
											"end": 429,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 344,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 344,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 344,
											"end": 429,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 344,
											"end": 429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 344,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 344,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 344,
											"end": 429,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 344,
											"end": 429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 344,
											"end": 429,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 344,
											"end": 429,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 344,
											"end": 429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 405,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 411,
											"end": 413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 415,
											"end": 421,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 405,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 405,
											"end": 422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 405,
											"end": 422,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 405,
											"end": 422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 344,
											"end": 429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 344,
											"end": 429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 344,
											"end": 429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3250,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3053,
											"end": 3256,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3250,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3053,
											"end": 3256,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3250,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3053,
											"end": 3256,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3250,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3053,
											"end": 3256,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3250,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3053,
											"end": 3256,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2990,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2703,
											"end": 3048,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2013,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2003,
											"end": 2042,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2221,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2303,
											"end": 2305,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2301,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2306,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2269,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2519,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2507,
											"end": 2513,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2503,
											"end": 2520,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2571,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2534,
											"end": 2572,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2614,
											"end": 2624,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2609,
											"end": 2612,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2605,
											"end": 2625,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2677,
											"end": 2681,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2318,
											"end": 2698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3483,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3261,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3409,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3394,
											"end": 3397,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3390,
											"end": 3410,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3411,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3434,
											"end": 3438,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3431,
											"end": 3432,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3424,
											"end": 3439,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3466,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3459,
											"end": 3460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3467,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Loan.sol",
								"contracts/MockToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockToken.sol\":\"MockToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MockToken.sol\":{\"keccak256\":\"0x1ca579602f3190581417cbaa10f217d1092cfb9f87258869b6bc8053766a355d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea8b0168f6b866bf36f28b38b8aef2231cdac2d9c74fb5f5dba5513c15b30916\",\"dweb:/ipfs/QmQ7nGE1NkrBmSLMriAeTzXzGSqgSz8ooGzsKM3NCZwGw9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/MockToken.sol:MockToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/MockToken.sol:MockToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/MockToken.sol:MockToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/MockToken.sol:MockToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/MockToken.sol:MockToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/Loan.sol": {
				"ast": {
					"absolutePath": "contracts/Loan.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"LendingContract": [
							1002
						],
						"MockToken": [
							1041
						]
					},
					"id": 1003,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "contracts/MockToken.sol",
							"file": "./MockToken.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1003,
							"sourceUnit": 1042,
							"src": "57:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LendingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1002,
							"linearizedBaseContracts": [
								1002
							],
							"name": "LendingContract",
							"nameLocation": "93:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "b2016bd4",
									"id": 791,
									"mutability": "mutable",
									"name": "collateralToken",
									"nameLocation": "132:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "115:32:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_MockToken_$1041",
										"typeString": "contract MockToken"
									},
									"typeName": {
										"id": 790,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 789,
											"name": "MockToken",
											"nameLocations": [
												"115:9:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1041,
											"src": "115:9:5"
										},
										"referencedDeclaration": 1041,
										"src": "115:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_MockToken_$1041",
											"typeString": "contract MockToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aaaca558",
									"id": 794,
									"mutability": "mutable",
									"name": "lendingToken",
									"nameLocation": "190:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "173:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_MockToken_$1041",
										"typeString": "contract MockToken"
									},
									"typeName": {
										"id": 793,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 792,
											"name": "MockToken",
											"nameLocations": [
												"173:9:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1041,
											"src": "173:9:5"
										},
										"referencedDeclaration": 1041,
										"src": "173:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_MockToken_$1041",
											"typeString": "contract MockToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "29bc969d",
									"id": 798,
									"mutability": "mutable",
									"name": "collateralBalances",
									"nameLocation": "263:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "228:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 797,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 795,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "236:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "228:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 796,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "247:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b6c56ec",
									"id": 802,
									"mutability": "mutable",
									"name": "debt",
									"nameLocation": "322:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "287:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 801,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 799,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "295:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "287:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 800,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "306:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142",
									"id": 808,
									"name": "CollateralDeposited",
									"nameLocation": "339:19:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "375:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "359:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "359:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "389:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "381:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "358:38:5"
									},
									"src": "333:64:5"
								},
								{
									"anonymous": false,
									"eventSelector": "ac59582e5396aca512fa873a2047e7f4c80f8f55d4a06cb34a78a0187f62719f",
									"id": 814,
									"name": "Borrowed",
									"nameLocation": "408:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "433:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "417:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "447:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "439:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:38:5"
									},
									"src": "402:53:5"
								},
								{
									"anonymous": false,
									"eventSelector": "0516911bcc3a0a7412a44601057c0a0a1ec628bde049a84284bc428866534488",
									"id": 820,
									"name": "Repaid",
									"nameLocation": "466:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "489:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "473:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "503:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "495:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:38:5"
									},
									"src": "460:51:5"
								},
								{
									"anonymous": false,
									"eventSelector": "c471df7d13ab46c73ec6eb2da0f35f84077f20d50243ba09a714b82cffc54de9",
									"id": 826,
									"name": "FaucetUsed",
									"nameLocation": "522:10:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "549:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "533:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "563:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "555:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:38:5"
									},
									"src": "516:55:5"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "659:140:5",
										"statements": [
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 837,
														"name": "collateralToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "669:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MockToken_$1041",
															"typeString": "contract MockToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 838,
														"name": "_collateralToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "687:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MockToken_$1041",
															"typeString": "contract MockToken"
														}
													},
													"src": "669:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_MockToken_$1041",
														"typeString": "contract MockToken"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "669:34:5"
											},
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 841,
														"name": "lendingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "713:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MockToken_$1041",
															"typeString": "contract MockToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 842,
														"name": "_lendingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "728:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MockToken_$1041",
															"typeString": "contract MockToken"
														}
													},
													"src": "713:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_MockToken_$1041",
														"typeString": "contract MockToken"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "713:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 850,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "777:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LendingContract_$1002",
																		"typeString": "contract LendingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LendingContract_$1002",
																		"typeString": "contract LendingContract"
																	}
																],
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "769:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 848,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "769:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "769:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 852,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "784:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 845,
															"name": "lendingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "751:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MockToken_$1041",
																"typeString": "contract MockToken"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "764:4:5",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1040,
														"src": "751:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "751:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "751:41:5"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "_collateralToken",
												"nameLocation": "599:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "589:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_MockToken_$1041",
													"typeString": "contract MockToken"
												},
												"typeName": {
													"id": 828,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 827,
														"name": "MockToken",
														"nameLocations": [
															"589:9:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1041,
														"src": "589:9:5"
													},
													"referencedDeclaration": 1041,
													"src": "589:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_MockToken_$1041",
														"typeString": "contract MockToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "_lendingToken",
												"nameLocation": "627:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "617:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_MockToken_$1041",
													"typeString": "contract MockToken"
												},
												"typeName": {
													"id": 831,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 830,
														"name": "MockToken",
														"nameLocations": [
															"617:9:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1041,
														"src": "617:9:5"
													},
													"referencedDeclaration": 1041,
													"src": "617:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_MockToken_$1041",
														"typeString": "contract MockToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "650:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "642:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:70:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:0:5"
									},
									"scope": 1002,
									"src": "577:222:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "887:254:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 862,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "905:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "915:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "905:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "918:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 861,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "897:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "897:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "897:56:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 871,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "992:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "996:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "992:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 875,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1012:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LendingContract_$1002",
																		"typeString": "contract LendingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LendingContract_$1002",
																		"typeString": "contract LendingContract"
																	}
																],
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1004:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 873,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1004:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1004:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "1019:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 868,
															"name": "collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "963:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MockToken_$1041",
																"typeString": "contract MockToken"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "979:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 334,
														"src": "963:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "963:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "963:64:5"
											},
											{
												"expression": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 880,
															"name": "collateralBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "1037:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 883,
														"indexExpression": {
															"expression": {
																"id": 881,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1056:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1060:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1056:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1037:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 884,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "1071:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1037:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "1037:41:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 888,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1114:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1118:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1114:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 890,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "1126:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 887,
														"name": "CollateralDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "1094:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "EmitStatement",
												"src": "1089:45:5"
											}
										]
									},
									"functionSelector": "bad4a01f",
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositCollateral",
									"nameLocation": "843:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "869:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "861:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:17:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:5"
									},
									"scope": 1002,
									"src": "834:307:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "1209:329:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 900,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "1227:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1237:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1227:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1240:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1219:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1219:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "1219:56:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 907,
																	"name": "collateralBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "1293:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 910,
																"indexExpression": {
																	"expression": {
																		"id": 908,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1312:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1316:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1312:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1293:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 911,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 896,
																		"src": "1327:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "313530",
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1337:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_150_by_1",
																			"typeString": "int_const 150"
																		},
																		"value": "150"
																	},
																	"src": "1327:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1343:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1327:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1293:53:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6c6c61746572616c",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1348:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
																"typeString": "literal_string \"Insufficient collateral\""
															},
															"value": "Insufficient collateral"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
																"typeString": "literal_string \"Insufficient collateral\""
															}
														],
														"id": 906,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1285:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1285:89:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "1285:89:5"
											},
											{
												"expression": {
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 920,
															"name": "debt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "1406:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 923,
														"indexExpression": {
															"expression": {
																"id": 921,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1411:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1415:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1411:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1406:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 924,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "1426:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1406:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "1406:27:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 930,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1466:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1470:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1466:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 932,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "1478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 927,
															"name": "lendingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "1444:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MockToken_$1041",
																"typeString": "contract MockToken"
															}
														},
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1457:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 261,
														"src": "1444:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1444:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "1444:42:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 936,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1511:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1515:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1511:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 938,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "1523:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 935,
														"name": "Borrowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "1502:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1502:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 940,
												"nodeType": "EmitStatement",
												"src": "1497:34:5"
											}
										]
									},
									"functionSelector": "c5ebeaec",
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nameLocation": "1176:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1191:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "1183:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:17:5"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1209:0:5"
									},
									"scope": 1002,
									"src": "1167:371:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "1605:221:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 948,
																	"name": "debt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "1623:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 951,
																"indexExpression": {
																	"expression": {
																		"id": 949,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1628:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1632:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1628:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1623:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1642:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1623:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206f75747374616e64696e672064656274",
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1645:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b33a9e1bde44488f3d2083932c9dddd287f7425247540a395f797d5c0e9224c6",
																"typeString": "literal_string \"No outstanding debt\""
															},
															"value": "No outstanding debt"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b33a9e1bde44488f3d2083932c9dddd287f7425247540a395f797d5c0e9224c6",
																"typeString": "literal_string \"No outstanding debt\""
															}
														],
														"id": 947,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1615:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1615:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "1615:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 960,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1703:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1707:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1703:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 964,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1723:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LendingContract_$1002",
																		"typeString": "contract LendingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LendingContract_$1002",
																		"typeString": "contract LendingContract"
																	}
																],
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1715:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1715:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1715:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "1730:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 957,
															"name": "lendingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "1677:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MockToken_$1041",
																"typeString": "contract MockToken"
															}
														},
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1690:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 334,
														"src": "1677:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1677:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "1677:61:5"
											},
											{
												"expression": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 969,
															"name": "debt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "1749:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 972,
														"indexExpression": {
															"expression": {
																"id": 970,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1754:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1758:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1754:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1749:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 973,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "1769:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1749:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "1749:27:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 977,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1799:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1803:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1799:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 979,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "1811:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 976,
														"name": "Repaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "1792:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1792:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "EmitStatement",
												"src": "1787:32:5"
											}
										]
									},
									"functionSelector": "371fd8e6",
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nameLocation": "1573:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1587:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "1579:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1578:17:5"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1605:0:5"
									},
									"scope": 1002,
									"src": "1564:262:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "1928:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 989,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1959:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1963:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1959:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "313030",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1971:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"id": 986,
															"name": "collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1938:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MockToken_$1041",
																"typeString": "contract MockToken"
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1954:4:5",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1040,
														"src": "1938:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1938:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "1938:37:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 995,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2001:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2005:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2001:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "313030",
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2013:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"id": 994,
														"name": "FaucetUsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "1990:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "EmitStatement",
												"src": "1985:32:5"
											}
										]
									},
									"functionSelector": "de5f72fd",
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "faucet",
									"nameLocation": "1910:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:2:5"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1928:0:5"
									},
									"scope": 1002,
									"src": "1901:123:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1003,
							"src": "84:1942:5",
							"usedErrors": [],
							"usedEvents": [
								808,
								814,
								820,
								826
							]
						}
					],
					"src": "32:1995:5"
				},
				"id": 5
			},
			"contracts/MockToken.sol": {
				"ast": {
					"absolutePath": "contracts/MockToken.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"MockToken": [
							1041
						]
					},
					"id": 1042,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1004,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1005,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1042,
							"sourceUnit": 652,
							"src": "57:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1006,
										"name": "ERC20",
										"nameLocations": [
											"136:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "136:5:6"
									},
									"id": 1007,
									"nodeType": "InheritanceSpecifier",
									"src": "136:5:6"
								}
							],
							"canonicalName": "MockToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1041,
							"linearizedBaseContracts": [
								1041,
								651,
								41,
								755,
								729,
								785
							],
							"name": "MockToken",
							"nameLocation": "123:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "245:49:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1021,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "261:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "265:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "261:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "273:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1020,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "255:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "255:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "255:32:6"
											}
										]
									},
									"id": 1027,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1016,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1009,
													"src": "231:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1017,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1011,
													"src": "237:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1018,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1015,
												"name": "ERC20",
												"nameLocations": [
													"225:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "225:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "225:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "174:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "160:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1008,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "160:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "194:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "180:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1010,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "180:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "210:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "202:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "159:65:6"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "245:0:6"
									},
									"scope": 1041,
									"src": "148:146:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "395:34:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1035,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "411:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1036,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "415:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1034,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "405:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "405:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "405:17:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "353:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "358:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "378:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "370:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:28:6"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:0:6"
									},
									"scope": 1041,
									"src": "344:85:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1042,
							"src": "114:317:6",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "32:400:6"
				},
				"id": 6
			}
		}
	}
}